I am start.
libart.so
art::ElfFileImpl<ElfTypes64>::GetHashSectionStart() const
art::JNI::GetLongArrayRegion(_JNIEnv*, _jlongArray*, int, int, long long*)
art::gc::space::RosAllocSpace::GetBytesAllocated()
void art::gc::accounting::SpaceBitmap<8u>::VisitMarkedRange<art::gc::collector::ConcurrentCopying::GrayImmuneObjectVisitor<false> const&>(unsigned int, unsigned int, art::gc::collector::ConcurrentCopying::GrayImmuneObjectVisitor<false> const&) const
art::DumpCheckpoint::~DumpCheckpoint()
non-virtual thunk to art::gc::space::MemoryToolMallocSpace<art::gc::space::DlMallocSpace, 8u, true, false>::FreeList(art::Thread*, unsigned int, art::mirror::Object**)
art::RuntimeArgumentMapKey<bool (*)()>::~RuntimeArgumentMapKey()
art::GetConstructorFlagsForMethodName(char const*, unsigned int*)
art::instrumentation::Instrumentation::ConfigureStubs(char const*, art::instrumentation::Instrumentation::InstrumentationLevel)
art::VariantMapKey<art::gc::space::LargeObjectSpaceType>::ValueClone(void*) const
art::DexLayoutSections::Madvise(art::DexFile const*, art::MadviseState) const
art::verifier::MethodVerifier::CheckCallSite(unsigned int)
art::gc::accounting::MemoryRangeBitmap<16u>::AddrFromBitIndex(unsigned int) const
void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::FixupInternVisitor, art::FixupInternVisitor>(art::FixupInternVisitor const&, art::FixupInternVisitor const&)
art::jit::Jit::CompileMethod(art::ArtMethod*, art::Thread*, bool)
art::DexReferenceCollection<art::dex::TypeIndex, art::ScopedArenaAllocatorAdapter>::AddReference(art::DexFile const*, art::dex::TypeIndex)
art::detail::CmdlineParseArgument<art::MillisecondsToNanoseconds>::~CmdlineParseArgument()
artAllocObjectFromCodeWithChecksDlMallocInstrumented
art::dex::tracking::DexFileTrackingRegistrar::SetCurrentRanges()
art::ClassTable::NumZygoteClasses(art::ObjPtr<art::mirror::ClassLoader>) const
vtable for art::RootInfo
art::interpreter::UnstartedRuntime::UnstartedStringFactoryNewStringFromString(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
void art::mirror::DexCache::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::mirror::CopyReferenceFieldsWithReadBarrierVisitor>(art::ObjPtr<art::mirror::Class>, art::mirror::CopyReferenceFieldsWithReadBarrierVisitor const&)
art::verifier::ImpreciseConstHiType::GetAssignmentTypeImpl() const
vtable for art::LockedFile
void art::gc::accounting::SpaceBitmap<8u>::VisitMarkedRange<art::gc::collector::MarkCompact::UpdateObjectReferencesVisitor&>(unsigned int, unsigned int, art::gc::collector::MarkCompact::UpdateObjectReferencesVisitor&) const
art::ThrowIncompatibleClassChangeError(art::InvokeType, art::InvokeType, art::ArtMethod*, art::ArtMethod*)
art::gc::space::RosAllocSpace::RosAllocSpace(art::MemMap*, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::gc::allocator::RosAlloc*, unsigned char*, unsigned char*, unsigned char*, unsigned int, bool, unsigned int, bool)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::verifier::VerifyMode&)#1}, std::__1::allocator<{lambda(art::verifier::VerifyMode&)#1}>, void (art::verifier::VerifyMode&)>::operator()(art::verifier::VerifyMode&)
art::gc::space::ImageSpaceLoader::Init(char const*, char const*, bool, art::OatFile const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::mirror::Throwable::GetStackTrace()
art::DexFileVerifier::Verify()
std::__1::__hash_table<std::__1::__hash_value_type<art::gc::AllocRecordStackTraceElement const*, unsigned int>, std::__1::__unordered_map_hasher<art::gc::AllocRecordStackTraceElement const*, std::__1::__hash_value_type<art::gc::AllocRecordStackTraceElement const*, unsigned int>, art::gc::HashAllocRecordTypesPtr<art::gc::AllocRecordStackTraceElement>, true>, std::__1::__unordered_map_equal<art::gc::AllocRecordStackTraceElement const*, std::__1::__hash_value_type<art::gc::AllocRecordStackTraceElement const*, unsigned int>, art::gc::EqAllocRecordTypesPtr<art::gc::AllocRecordStackTraceElement>, true>, std::__1::allocator<std::__1::__hash_value_type<art::gc::AllocRecordStackTraceElement const*, unsigned int> > >::rehash(unsigned int)
vtable for std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >
art::ElfFileImpl<ElfTypes64>::CheckSectionsExist(unix_file::FdFile*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
std::__1::deque<art::instrumentation::InstrumentationStackFrame, std::__1::allocator<art::instrumentation::InstrumentationStackFrame> >::__add_front_capacity()
art::CheckJNI::ExceptionCheck(_JNIEnv*)
art::gc::space::ImageSpace::ReleaseOatFile()
bool art::interpreter::DoFilledNewArray<false, false, false>(art::Instruction const*, art::ShadowFrame const&, art::Thread*, art::JValue*)
art::detail::CmdlineParseArgument<unsigned int>::~CmdlineParseArgument()
art::CheckJNI::GetBooleanArrayElements(_JNIEnv*, _jbooleanArray*, unsigned char*)
art::ArtField::SetOffset(art::MemberOffset)
art::mirror::PrimitiveArray<short>::GetData()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::LogVerbosity& ()>::__clone(std::__1::__function::__base<art::LogVerbosity&>*) const
artGetBooleanStaticFromCode
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::ParseStringList<(char)58>&)#1}, std::__1::allocator<{lambda(art::ParseStringList<(char)58>&)#1}>, void (art::ParseStringList<(char)58>&)>
art::VariantMapKey<art::XGcOption>::Clone() const
inflateSync
art::gc::collector::ConcurrentCopying::MarkFromReadBarrierWithMeasurements(art::mirror::Object*)
art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceReferences()
art::RuntimeArgumentMap::ImageCompilerOptions
art::DexFileVerifier::CheckLoadMethodId(unsigned int, char const*)
art::gc::space::DlMallocSpace::~DlMallocSpace()
art::jit::JitCodeCache::LookupOsrMethodHeader(art::ArtMethod*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::IntoKey(art::RuntimeArgumentMapKey<art::verifier::VerifyMode> const&)::{lambda(art::verifier::VerifyMode&)#1}, std::__1::allocator<{lambda(art::verifier::VerifyMode&)#1}>, void (art::verifier::VerifyMode&)>::__clone() const
art::JavaVMExt::AddEnvironmentHook(int (*)(art::JavaVMExt*, void**, int))
art::Trace::MethodExited(art::Thread*, art::Handle<art::mirror::Object>, art::ArtMethod*, unsigned int, art::JValue const&)
std::__1::__hash_table<std::__1::__hash_value_type<art::ArtMethod*, std::__1::vector<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*>, std::__1::allocator<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*> > > >, std::__1::__unordered_map_hasher<art::ArtMethod*, std::__1::__hash_value_type<art::ArtMethod*, std::__1::vector<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*>, std::__1::allocator<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*> > > >, std::__1::hash<art::ArtMethod*>, true>, std::__1::__unordered_map_equal<art::ArtMethod*, std::__1::__hash_value_type<art::ArtMethod*, std::__1::vector<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*>, std::__1::allocator<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*> > > >, std::__1::equal_to<art::ArtMethod*>, true>, std::__1::allocator<std::__1::__hash_value_type<art::ArtMethod*, std::__1::vector<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*>, std::__1::allocator<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*> > > > > >::__rehash(unsigned int)
std::__1::__split_buffer<art::ArtField**, std::__1::allocator<art::ArtField**>&>::push_front(art::ArtField** const&)
art::interpreter::UnstartedRuntime::UnstartedUnsafeGetObjectVolatile(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::JDWP::JdwpState::UnregisterAll()
art::DexFile::InitializeSectionsFromMapList()
art::verifier::VerifierDeps::GetIdFromString(art::DexFile const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::Monitor::TranslateLocation(art::ArtMethod*, unsigned int, char const**, int*)
art::hprof::Hprof::MarkRootObject(art::mirror::Object const*, _jobject*, art::hprof::HprofHeapTag, unsigned int)
std::__1::__tree<std::__1::__value_type<void const*, art::ArtMethod*>, std::__1::__map_value_compare<void const*, std::__1::__value_type<void const*, art::ArtMethod*>, std::__1::less<void const*>, true>, std::__1::allocator<std::__1::__value_type<void const*, art::ArtMethod*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<void const*, art::ArtMethod*>, void*>*)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::ImageHeader::ImageMethod const&)
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)5, true, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::ProfileCompilationInfo::~ProfileCompilationInfo()
art::GetAppropriateTimeUnit(unsigned long long)
art::Memory<1024u>::Name()
art::verifier::RegType::IsPreciseConstantLo() const
art::Thread::GetFlipFunction()
vtable for art::FindFrameVisitor
art::Trace::FieldRead(art::Thread*, art::Handle<art::mirror::Object>, art::ArtMethod*, unsigned int, art::ArtField*)
art::gc::collector::MarkCompact::~MarkCompact()
art::JNI::NewCharArray(_JNIEnv*, int)
_ZNSt3__16vectorIPKcNS_9allocatorIS2_EEE6assignIPKS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_
art::ResolveVerifyAndClinit(art::dex::TypeIndex, art::ArtMethod*, art::Thread*, bool, bool)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::Memory<1u>&)#1}, std::__1::allocator<{lambda(art::Memory<1u>&)#1}>, void (art::Memory<1u>&)>::~__func()
art::mirror::Class::PrettyClass()
art::Trace::GetMethodLine(art::ArtMethod*)
art::ElfFileImpl<ElfTypes64>::ValidPointer(unsigned char const*) const
art::gc::collector::MarkCompact::ReclaimPhase()
art::gc::Heap::FindRememberedSetFromSpace(art::gc::space::Space*)
art::JNI::CallBooleanMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::IntoKey(art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions> const&)::{lambda(art::JDWP::JdwpOptions&)#1}, std::__1::allocator<{lambda(art::JDWP::JdwpOptions&)#1}>, void (art::JDWP::JdwpOptions&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::JDWP::JdwpOptions&)#1}> >*) const
art::BitVector::~BitVector()
art::CreateJITCodeEntry(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::IntoKey(art::RuntimeArgumentMapKey<bool> const&)::{lambda(bool&)#1}, std::__1::allocator<{lambda(bool&)#1}>, void (bool&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(bool&)#1}> >*) const
art::ThreadList::~ThreadList()
art::interpreter::UnstartedRuntime::UnstartedClassNewInstance(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::JNI::CallNonvirtualVoidMethodA(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, jvalue*)
std::__1::__shared_ptr_emplace<void (*)(int), std::__1::allocator<void (*)(int)> >::__on_zero_shared_weak()
art::IndirectReferenceTable::FreeCapacity()
art::gc::Heap::FindModUnionTableFromSpace(art::gc::space::Space*)
art::ClassLinker::LinkVirtualMethods(art::Thread*, art::Handle<art::mirror::Class>, std::__1::unordered_map<unsigned int, art::ClassLinker::MethodTranslation, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, art::ClassLinker::MethodTranslation> > >*)
art::gc::space::RegionSpace::ClearFromSpace(unsigned long long*, unsigned long long*)
art::DexFile::GetMultiDexClassesDexName(unsigned int)
artAllocStringFromBytesFromCodeRosAllocInstrumented
art::WellKnownClasses::StringInitToEntryPoint(art::ArtMethod*)
art::JNI::GetStringCritical(_JNIEnv*, _jstring*, unsigned char*)
art::gc::accounting::SpaceBitmap<8u>::Begin()
art::verifier::RegType::IsConstantByte() const
art::jit::Jit::InvokeVirtualOrInterface(art::ObjPtr<art::mirror::Object>, art::ArtMethod*, unsigned int, art::ArtMethod*)
art::Mips64InstructionSetFeatures::FromBitmap(unsigned int)
art::ClassLinker::AddMethodToConflictTable(art::ObjPtr<art::mirror::Class>, art::ArtMethod*, art::ArtMethod*, art::ArtMethod*, bool)
art::gc::collector::ConcurrentCopying::IssueDisableMarkingCheckpoint()
art::VariantMapKey<double>::ValueDelete(void*) const
_jobjectArray* toStringArray<VectorCounter, VectorGetter>(_JNIEnv*, VectorCounter*, VectorGetter*)
art::ClassLinker::FindVirtualMethodHolderVisitor::~FindVirtualMethodHolderVisitor()
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource> art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::CreateTypedBuilder<art::TraceClockSource>()
vtable for art::NthCallerVisitor
art::mirror::PrimitiveArray<double>::ResetArrayClass()
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::IntoKey(art::RuntimeArgumentMapKey<double> const&)::{lambda(double&)#1}, std::__1::allocator<{lambda(double&)#1}>, void (double&)>
art::ElfFileImpl<ElfTypes64>::GetLoadedSize(unsigned int*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
art::WellKnownClasses::java_lang_String_charAt
art::CheckJNI::CallNonvirtualShortMethodA(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, jvalue*)
art::Dbg::IsJdwpAllowed()
art::VariantMapKey<art::Memory<1024u> >::~VariantMapKey()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::IntoKey(art::RuntimeArgumentMapKey<art::ProfileSaverOptions> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ProfileSaverOptions& ()>::operator()()
art::verifier::VerifierDeps::VerifierDeps(std::__1::vector<art::DexFile const*, std::__1::allocator<art::DexFile const*> > const&)
art::StackDumpVisitor::DumpLockedObject(art::mirror::Object*, void*)
void std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >::__assign_multi<std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void*>*, int> >(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void*>*, int>, std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void*>*, int>)
art::ElfFileImpl<ElfTypes64>::GetProgramHeader(unsigned int) const
art::gc::accounting::SpaceBitmap<8u>::Set(art::mirror::Object const*)
art::Arena::~Arena()
art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::__1::less<unsigned short>, art::ArenaAllocatorAdapter<std::__1::pair<unsigned short const, art::ProfileCompilationInfo::DexPcData> > >::Equals(art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::__1::less<unsigned short>, art::ArenaAllocatorAdapter<std::__1::pair<unsigned short const, art::ProfileCompilationInfo::DexPcData> > > const&) const
art::verifier::RegType::IsConstantChar() const
art::ThrowStackOverflowError(art::Thread*)
art::VerifyRootVisitor::~VerifyRootVisitor()
art::ThrowWrappedLinkageError(art::ObjPtr<art::mirror::Class>, char const*, ...)
art::ArtField* art::FindFieldFromCode<(art::FindFieldType)5, false>(unsigned int, art::ArtMethod*, art::Thread*, unsigned int)
art::jit::JitCodeCache::~JitCodeCache()
art::mirror::Object::GenerateIdentityHashCode()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::IntoKey(art::RuntimeArgumentMapKey<art::gc::space::LargeObjectSpaceType> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::gc::space::LargeObjectSpaceType& ()>::operator()()
mspace_set_footprint_limit
art::Locks::RemoveFromExpectedMutexesOnWeakRefAccess(art::BaseMutex*, bool)
art::CheckJNI::CallMethodV(char const*, _JNIEnv*, _jobject*, _jclass*, _jmethodID*, char*, art::Primitive::Type, art::InvokeType)
void std::__1::vector<art::TokenRange, std::__1::allocator<art::TokenRange> >::__push_back_slow_path<art::TokenRange>(art::TokenRange&&)
artInvokeInterfaceTrampoline
vtable for std::__1::__shared_ptr_emplace<void (*)(), std::__1::allocator<void (*)()> >
art::gc::Heap::Trim(art::Thread*)
art::Runtime::ClearInstructionSet()
art::MipsInstructionSetFeatures::GetInstructionSet() const
art::CumulativeLogger::DumpHistogram(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::gc::collector::ConcurrentCopying::ThreadFlipVisitor::VisitRoots(art::mirror::Object***, unsigned int, art::RootInfo const&)
art::WellKnownClasses::java_lang_Float_valueOf
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::IntoKey(art::RuntimeArgumentMapKey<art::ExperimentalFlags> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ExperimentalFlags& ()>::__clone(std::__1::__function::__base<art::ExperimentalFlags&>*) const
art::WellKnownClasses::java_lang_invoke_MethodHandles_Lookup_findConstructor
art::detail::CmdlineParseArgument<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::ParseArgumentSingle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::register_org_apache_harmony_dalvik_ddmc_DdmVmInternal(_JNIEnv*)
artAllocArrayFromCodeResolvedDlMalloc
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<art::StringPiece, art::OatDexFile const*>, std::__1::__map_value_compare<art::StringPiece, std::__1::__value_type<art::StringPiece, art::OatDexFile const*>, std::__1::less<art::StringPiece>, true>, std::__1::allocator<std::__1::__value_type<art::StringPiece, art::OatDexFile const*> > >::__find_equal<art::StringPiece>(std::__1::__tree_const_iterator<std::__1::__value_type<art::StringPiece, art::OatDexFile const*>, std::__1::__tree_node<std::__1::__value_type<art::StringPiece, art::OatDexFile const*>, void*>*, int>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, art::StringPiece const&)
art::ElfFileImpl<ElfTypes64>::FixupRelocations(unsigned long long)
art::ProfileSaver::ProfileSaver(art::ProfileSaverOptions const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::jit::JitCodeCache*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)
art::Dbg::GetInstances(unsigned long long, int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >*)
art::mirror::PrimitiveArray<float>::AllocateAndFill(art::Thread*, float const*, unsigned int)
art::gc::accounting::ModUnionTableCardCache::ProcessCards()
art::OatFileBase::LoadVdex(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::detail::CmdlineParseArgument<double>::MaybeMatches(art::TokenRange const&)
art::ElfFileImpl<ElfTypes32>::FindDynamicByType(int) const
art::CheckJNI::GetMethodID(_JNIEnv*, _jclass*, char const*, char const*)
art::gc::space::MemoryToolLargeObjectMapSpace::Contains(art::mirror::Object const*) const
art::Locks::dex_lock_
art::CumulativeLogger::Reset()
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)1, art::FixupInternVisitor const>(art::FixupInternVisitor const&, art::PointerSize)
art::ArtMethod* art::verifier::MethodVerifier::VerifyInvocationArgsFromIterator<art::DexFileParameterIterator>(art::DexFileParameterIterator*, art::Instruction const*, art::verifier::MethodType, bool, art::ArtMethod*)
art::JNI::GetStaticShortField(_JNIEnv*, _jclass*, _jfieldID*)
art::gc::collector::MarkCompact::ScanObject(art::mirror::Object*)
art::FillArrayData(art::ObjPtr<art::mirror::Object>, art::Instruction::ArrayDataPayload const*)
art::gc::Heap::GetGcCount() const
art::JNI::CallByteMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)
vtable for art::BuildQuickShadowFrameVisitor
unsigned int std::__1::__tree<std::__1::__value_type<unsigned int, unsigned int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned int>, std::__1::less<unsigned int>, true>, art::ScopedArenaAllocatorAdapter<std::__1::__value_type<unsigned int, unsigned int> > >::__erase_unique<unsigned int>(unsigned int const&)
art::JNI::GetDoubleField(_JNIEnv*, _jobject*, _jfieldID*)
art::interpreter::UnstartedRuntime::UnstartedSystemGetSecurityManager(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::gc::collector::MarkCompact::VisitRoots(art::mirror::CompressedReference<art::mirror::Object>**, unsigned int, art::RootInfo const&)
MterpInvokeVirtualQuickRange
art::ObjectRegistry::Add(art::ObjPtr<art::mirror::Object>)
art::JDWP::expandBufGetBuffer(art::JDWP::ExpandBuf*)
void art::mirror::Object::VisitFieldsReferences<false, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::collector::MarkCompact::UpdateReferenceVisitor>(unsigned int, art::gc::collector::MarkCompact::UpdateReferenceVisitor const&)
art::JNI::GetVersion(_JNIEnv*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)::{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}, std::__1::allocator<{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}>, void (std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)>::destroy_deallocate()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::XGcOption> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::XGcOption& ()>::__clone(std::__1::__function::__base<art::XGcOption&>*) const
art::ClassLinker::GetClassRootDescriptor(art::ClassLinker::ClassRoot)
art::mirror::MethodHandlesLookup::FindConstructor(art::Thread*, art::Handle<art::mirror::Class>, art::Handle<art::mirror::MethodType>)
art::gc::TaskProcessor::~TaskProcessor()
art::mirror::PrimitiveArray<unsigned char>::Set(int, unsigned char)
art::DexFileVerifier::CheckLoadProtoId(unsigned int, char const*)
art::gc::Heap::FlushAllocStack()
art::verifier::UnresolvedMergedType::UnresolvedMergedType(art::verifier::RegType const&, art::BitVector const&, art::verifier::RegTypeCache const*, unsigned short)
bool std::__1::__insertion_sort_incomplete<art::gc::accounting::AtomicStack<art::mirror::Object>::ObjectComparator&, art::StackReference<art::mirror::Object>*>(art::StackReference<art::mirror::Object>*, art::StackReference<art::mirror::Object>*, art::gc::accounting::AtomicStack<art::mirror::Object>::ObjectComparator&)
art::mirror::ObjectArray<art::mirror::Field>::Alloc(art::Thread*, art::ObjPtr<art::mirror::Class>, int, art::gc::AllocatorType)
art::ClassTable::ClassDescriptorHashEquals::operator()(art::ClassTable::TableSlot const&, art::ClassTable::TableSlot const&) const
art::MemMapArena::MemMapArena(unsigned int, bool, char const*)
art::GetStackOverflowReservedBytes(art::InstructionSet)
art::verifier::RegType::IsBoolean() const
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::CompleteArgument()
art::verifier::MethodVerifier::VerifyNewArray(art::Instruction const*, bool, bool)
art::verifier::RegType::GetPrimitiveType() const
art::Thread::UnprotectStack()
art::CheckJNI::ExceptionDescribe(_JNIEnv*)
art::SharedLibrary::FindSymbol(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*)
art::gc::ReferenceProcessor::ReferenceProcessor()
art::mirror::Method::static_class_
art::ClassLinker::DumpForSigQuit(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::WellKnownClasses::java_lang_ref_ReferenceQueue_add
art::DEX_MEMBER_VALID_LOW_ASCII
art::mirror::MethodHandlesLookup::ResetClass()
art::VdexFile::Header::kVdexMagic
android::base::WriteFully(int, void const*, unsigned int)
art::ProfileSaver::ProcessProfilingInfo(bool, unsigned short*)
art::WellKnownClasses::java_lang_System
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::LockWord::LockState const&)
memcmp16_generic_static(unsigned short const*, unsigned short const*, unsigned int)
vtable for art::verifier::ShortType
artInitializeStaticStorageFromCode
art::WellKnownClasses::java_lang_reflect_Executable
art::CheckJNI::CallBooleanMethodV(_JNIEnv*, _jobject*, _jmethodID*, char*)
art::gc::collector::ConcurrentCopying::FillWithDummyObject(art::mirror::Object*, unsigned int)
non-virtual thunk to art::gc::collector::SemiSpace::~SemiSpace()
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::XGcOption> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::XGcOption& ()>
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, unsigned int& ()>
art::DexCacheResolvedClasses::DexCacheResolvedClasses(art::DexCacheResolvedClasses const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::LogVerbosity&)#1}, std::__1::allocator<{lambda(art::LogVerbosity&)#1}>, void (art::LogVerbosity&)>::destroy_deallocate()
art::verifier::IntegerType::Dump() const
vtable for art::NoopAllocator
art::mirror::Class::Depth()
std::__1::__shared_ptr_emplace<int (*)(__sFILE*, char const*, char*), std::__1::allocator<int (*)(__sFILE*, char const*, char*)> >::__on_zero_shared_weak()
bool art::mirror::Object::VerifierInstanceOf<(art::VerifyObjectFlags)0>(art::ObjPtr<art::mirror::Class>)
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::gc::VerifyReferenceVisitor const>(art::gc::VerifyReferenceVisitor const&, art::PointerSize)
std::__1::basic_filebuf<char, std::__1::char_traits<char> >::seekpos(std::__1::fpos<mbstate_t>, unsigned int)
art::interpreter::UnstartedRuntime::UnstartedJNIStringFastIndexOf(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::LogVerbosity& ()>::~__func()
art::jit::JitCodeCache::DoneCompiling(art::ArtMethod*, art::Thread*, bool)
art::gc::collector::ConcurrentCopying::MarkNonMoving(art::mirror::Object*, art::mirror::Object*, art::MemberOffset)
_ZNSt3__16vectorIPKN3art7DexFileENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPKS4_EEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISE_E9referenceEEE5valueENS9_IPS4_EEE4typeESC_SE_SE_
art::detail::CmdlineParseArgument<art::ProfileSaverOptions>::SaveArgument(art::ProfileSaverOptions const&)
vtable for art::detail::CmdlineParseArgument<art::MillisecondsToNanoseconds>
art::JNIEnvExt::RecordMonitorEnter(_jobject*)
art::ti::Agent::FindSymbol(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
art::gc::collector::ConcurrentCopying::CheckEmptyMarkStack()
vtable for art::gc::space::MemoryToolMallocSpace<art::gc::space::RosAllocSpace, 8u, false, true>
bool art::verifier::MethodVerifier::VerifyInstruction<true>(art::Instruction const*, unsigned int)
std::__1::vector<art::ClassLoaderContext::ClassLoaderInfo, std::__1::allocator<art::ClassLoaderContext::ClassLoaderInfo> >::__swap_out_circular_buffer(std::__1::__split_buffer<art::ClassLoaderContext::ClassLoaderInfo, std::__1::allocator<art::ClassLoaderContext::ClassLoaderInfo>&>&)
art::CompilerFilter::DependsOnProfile(art::CompilerFilter::Filter)
art::WellKnownClasses::ToClass(_jclass*)
art::VariantMapKey<double>::ValueClone(void*) const
art::ComputeUtf16HashFromModifiedUtf8(char const*, unsigned int)
art::mirror::PrimitiveArray<float>* art::JNI::DecodeAndCheckArrayType<_jfloatArray*, float, art::mirror::PrimitiveArray<float> >(art::ScopedObjectAccess&, _jfloatArray*, char const*, char const*)
android::base::StderrLogger(android::base::LogId, android::base::LogSeverity, char const*, char const*, unsigned int, char const*)
art::ArtField* art::FindFieldFromCode<(art::FindFieldType)2, true>(unsigned int, art::ArtMethod*, art::Thread*, unsigned int)
art::ti::Agent::Agent(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
art::verifier::UnresolvedType::IsNonZeroReferenceTypes() const
art::Transaction::VisitRoots(art::RootVisitor*)
art::QuickExceptionHandler::DeoptimizePartialFragmentFixup(unsigned int)
art::TypeLookupTable::FindLastEntryInBucket(unsigned int) const
art::gc::space::ZygoteSpace::RevokeThreadLocalBuffers(art::Thread*)
art::hprof::Hprof::ProcessBody()
art::JNI::SetByteArrayRegion(_JNIEnv*, _jbyteArray*, int, int, signed char const*)
bool unix_file::FdFile::WriteFullyGeneric<false>(void const*, unsigned int, unsigned int)
art::hprof::Hprof::VisitRoot(art::mirror::Object*, art::RootInfo const&)
std::__1::__shared_ptr_emplace<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::~__shared_ptr_emplace()
art::CheckJNI::ReleaseStringChars(_JNIEnv*, _jstring*, unsigned short const*)
art::OatFile::OatClass::OatClass(art::OatFile const*, art::mirror::Class::Status, art::OatClassType, unsigned int, unsigned int const*, art::OatMethodOffsets const*)
art::CmdlineType<art::Memory<1024u> >::Parse(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoIgnore()::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>::~__func()
art::RuntimeArgumentMap::UseTLAB
art::ArmInstructionSetFeatures::FromBitmap(unsigned int)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::insert(unsigned int, char const*, unsigned int)
non-virtual thunk to art::gc::space::DlMallocSpace::AllocationSize(art::mirror::Object*, unsigned int*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::IntoKey(art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::JDWP::JdwpOptions& ()>::operator()()
art::ImageHeader::VisitObjects(art::ObjectVisitor*, unsigned char*, art::PointerSize) const
artAllocObjectFromCodeWithChecksRosAlloc
art::gc::collector::MarkSweep::PreCleanCards()
art::DexFile::FindProtoId(art::dex::TypeIndex, art::dex::TypeIndex const*, unsigned int) const
art::DexFileVerifier::CheckInterFieldIdItem()
art::ClassLinker::EnsureSameClassLoader(art::Thread*, art::ObjPtr<art::mirror::DexCache>, art::ClassLinker::DexCacheData const&, art::ObjPtr<art::mirror::ClassLoader>)
art::jit::JitCodeCache::WaitUntilInlineCacheAccessible(art::Thread*)
art::BaseMutex::IsMutatorMutex() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}, std::__1::allocator<{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}>, void (std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)>::destroy_deallocate()
art::gc::space::ContinuousMemMapAllocSpace::SwapBitmaps()
art::mirror::String::ToModifiedUtf8()
void art::mirror::VisitDexCachePairs<art::mirror::String, (art::ReadBarrierOption)0, art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor>(std::__1::atomic<art::mirror::DexCachePair<art::mirror::String> >*, unsigned int, art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor const&)
art::gc::space::ImageSpaceLoader::FixupArtFieldVisitor::Visit(art::ArtField*)
artSet32InstanceFromMterp
void art::mirror::Class::VisitNativeRoots<(art::ReadBarrierOption)0, art::gc::collector::MarkCompact::MarkObjectVisitor const>(art::gc::collector::MarkCompact::MarkObjectVisitor const&, art::PointerSize)
art::gc::Heap::ClearPendingTrim(art::Thread*)
art::ElfFile::Open(unix_file::FdFile*, int, int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::ElfFileImpl<ElfTypes64>::Strip(unix_file::FdFile*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::ThreadList::ForEach(void (*)(art::Thread*, void*), void*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)::{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}, std::__1::allocator<{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}>, void (std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)>::~__func()
vtable for std::__1::__shared_ptr_emplace<bool, std::__1::allocator<bool> >
art::gc::collector::Iteration::Iteration()
art::JNI::NewBooleanArray(_JNIEnv*, int)
art::ClassLinker::VisitClassRoots(art::RootVisitor*, art::VisitRootFlags)
art::JDWP::JdwpState::SetupChunkHeader(unsigned int, unsigned int, unsigned int, unsigned char*)
art::ClassLinker::SetClassRoot(art::ClassLinker::ClassRoot, art::ObjPtr<art::mirror::Class>)
art::OS::CreateEmptyFile(char const*)
artAllocStringFromBytesFromCodeTLAB
artSetObjInstanceFromCode
unix_file::FdFile::Open(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, unsigned short)
art::VariantMapKey<void (*)(int)>::Clone() const
art::verifier::IntegerType::Destroy()
void art::mirror::Object::VisitFieldsReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::FixupInternVisitor>(unsigned int, art::FixupInternVisitor const&)
art::VariantMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::~VariantMapKey()
art::ThrowLinkageError(art::ObjPtr<art::mirror::Class>, char const*, ...)
std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<art::gc::AllocRecordStackTrace const*, unsigned int>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<art::gc::AllocRecordStackTrace const*, unsigned int>, std::__1::__unordered_map_hasher<art::gc::AllocRecordStackTrace const*, std::__1::__hash_value_type<art::gc::AllocRecordStackTrace const*, unsigned int>, art::gc::HashAllocRecordTypesPtr<art::gc::AllocRecordStackTrace>, true>, std::__1::__unordered_map_equal<art::gc::AllocRecordStackTrace const*, std::__1::__hash_value_type<art::gc::AllocRecordStackTrace const*, unsigned int>, art::gc::EqAllocRecordTypesPtr<art::gc::AllocRecordStackTrace>, true>, std::__1::allocator<std::__1::__hash_value_type<art::gc::AllocRecordStackTrace const*, unsigned int> > >::find<art::gc::AllocRecordStackTrace const*>(art::gc::AllocRecordStackTrace const* const&)
art::ArtMethod::GetOatMethodQuickCode(art::PointerSize)
unix_file::FdFile::Flush()
vtable for std::__1::__shared_ptr_emplace<art::ExperimentalFlags, std::__1::allocator<art::ExperimentalFlags> >
art::OatFileManager::~OatFileManager()
art::gc::space::ContinuousMemMapAllocSpace::IsContinuousMemMapAllocSpace() const
__deregister_frame
art::DexFileVerifier::CheckOffsetToTypeMap(unsigned int, unsigned short)
art::verifier::RegisterLine::CheckBinaryOpWideShift(art::verifier::MethodVerifier*, art::Instruction const*, art::verifier::RegType const&, art::verifier::RegType const&, art::verifier::RegType const&)
art::OatHeader::GetInstructionSet() const
art::JDWP::JdwpState::SendRequest(art::JDWP::ExpandBuf*)
art::gc::collector::ConcurrentCopying::GetGcType() const
art::JNI::GetDirectBufferAddress(_JNIEnv*, _jobject*)
art::VariantMapKey<art::Unit>::~VariantMapKey()
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1024u> > const&)
art::x86::X86Context::GetFPR(unsigned int)
art::VariantMapKey<art::TraceClockSource>::Clone() const
art::DexRegisterLocationCatalog::ExtractKindAtOffset(unsigned int) const
art::ClassLinker::LinkInterfaceMethodsHelper::ReallocMethods()
art::gc::accounting::SpaceBitmap<4096u>::SweepWalk(art::gc::accounting::SpaceBitmap<4096u> const&, art::gc::accounting::SpaceBitmap<4096u> const&, unsigned int, unsigned int, void (*)(unsigned int, art::mirror::Object**, void*), void*)
art::RuntimeArgumentMap::UseJitCompilation
art::gc::collector::GarbageCollector::GarbageCollector(art::gc::Heap*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >& ()>::operator()()
art::ThreadPool::StartWorkers(art::Thread*)
art::ArenaStack::~ArenaStack()
vtable for art::ClassLinker
art::VariantMapKey<art::ProfileSaverOptions>::ValueClone(void*) const
destroy_mspace
art::CheckJNI::CallVoidMethodV(_JNIEnv*, _jobject*, _jmethodID*, char*)
art::CheckJNI::GetDirectBufferCapacity(_JNIEnv*, _jobject*)
art::CompilerFilter::ParseCompilerFilter(char const*, art::CompilerFilter::Filter*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::IntoKey(art::RuntimeArgumentMapKey<unsigned int> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, unsigned int& ()>::__clone(std::__1::__function::__base<unsigned int&>*) const
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::DexMemAccessType const&)
art::JNI::GetSuperclass(_JNIEnv*, _jclass*)
art::verifier::MethodVerifier::VerifyCodeFlow()
art::InstructionSetFeatures::AddFeaturesFromString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
_ZNSt3__16vectorIjN3art27ScopedArenaAllocatorAdapterIjEEE6assignIPjEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_
guard variable for art::Memory<1024u>::Name()::str
art::WellKnownClasses::libcore_util_EmptyArray_STACK_TRACE_ELEMENT
deflate
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)
art::JNI::CallVoidMethodV(_JNIEnv*, _jobject*, _jmethodID*, char*)
std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str() const
art::verifier::MethodVerifier::VisitStaticRoots(art::RootVisitor*)
vtable for art::gc::RootMatchesObjectVisitor
art::ScopedCheck::CheckMethodAndSig(art::ScopedObjectAccess&, _jobject*, _jclass*, _jmethodID*, art::Primitive::Type, art::InvokeType)
art::RuntimeArgumentMap::JITCodeCacheMaxCapacity
art::Runtime::CanRelocate() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >& ()>::operator()()
art::JNI::DefineClass(_JNIEnv*, char const*, _jobject*, signed char const*, int)
art::gc::space::LargeObjectSpace::CanMoveObjects() const
art::CodeInfo::AssertValidStackMap(art::CodeInfoEncoding const&) const
art::ScopedCheck::CheckNonHeapValue(char, art::JniValueType)
art::ElfFileImpl<ElfTypes32>::GetHashSectionStart() const
art::Thread::ClearSuspendBarrier(art::Atomic<int>*)
std::__1::basic_ifstream<char, std::__1::char_traits<char> >::~basic_ifstream()
art::JDWP::JdwpState::~JdwpState()
std::__1::__shared_ptr_emplace<void (*)(), std::__1::allocator<void (*)()> >::__on_zero_shared()
art::gc::TrimIndirectReferenceTableClosure::~TrimIndirectReferenceTableClosure()
art::gc::ReferenceProcessor::WaitUntilDoneProcessingReferences(art::Thread*)
art::gc::space::LargeObjectMapSpace::AllocationSize(art::mirror::Object*, unsigned int*)
void art::JNI::SetPrimitiveArrayRegion<_jbyteArray*, signed char, art::mirror::PrimitiveArray<signed char> >(_JNIEnv*, _jbyteArray*, int, int, signed char const*)
std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >& art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination::GetOrCreateFromMap<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)
bool art::interpreter::DoFieldGet<(art::FindFieldType)2, (art::Primitive::Type)2, false>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::instrumentation::Instrumentation::InstrumentThreadStack(art::Thread*)
art::gc::space::RegionSpace::Free(art::Thread*, art::mirror::Object*)
vtable for art::VariantMapKey<art::MillisecondsToNanoseconds>
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)3, false, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::ParsedOptions::DoParse(std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void const*>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void const*> > > const&, bool, art::RuntimeArgumentMap*)
vtable for art::verifier::LongLoType
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::ParseStringList<(char)58>&)#1}, std::__1::allocator<{lambda(art::ParseStringList<(char)58>&)#1}>, void (art::ParseStringList<(char)58>&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::ParseStringList<(char)58>&)#1}> >*) const
art::Thread::resume_cond_
art::detail::CmdlineParseArgument<art::gc::space::LargeObjectSpaceType>::GetTypeName() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::IntoKey(art::RuntimeArgumentMapKey<unsigned int> const&)::{lambda(unsigned int&)#1}, std::__1::allocator<{lambda(unsigned int&)#1}>, void (unsigned int&)>::operator()(unsigned int&)
std::__1::__shared_ptr_emplace<void (*)(), std::__1::allocator<void (*)()> >::~__shared_ptr_emplace()
art::ArtMethod::NumArgRegisters(art::StringPiece const&)
art::Dbg::GcDidFinish()
art::mirror::PrimitiveArray<float>::Memcpy(int, art::ObjPtr<art::mirror::PrimitiveArray<float> >, int, int)
vtable for std::__1::__shared_ptr_emplace<int (*)(__sFILE*, char const*, char*), std::__1::allocator<int (*)(__sFILE*, char const*, char*)> >
art::JDWP::JdwpState::PostLocationEvent(art::JDWP::EventLocation const*, art::mirror::Object*, int, art::JValue const*)
art::MemMap::CheckNoGaps(art::MemMap*, art::MemMap*)
art::NonDebuggableClasses::non_debuggable_classes
art::ElfFileImpl<ElfTypes64>::FindDynamicSymbolAddress(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
artAllocStringFromStringFromCodeBumpPointerInstrumented
art::gc::Heap::ClearPendingCollectorTransition(art::Thread*)
art::ProcessCpuNanoTime()
art::ObjPtr<art::mirror::Method> art::mirror::Class::GetDeclaredMethodInternal<(art::PointerSize)8, true>(art::Thread*, art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::String>, art::ObjPtr<art::mirror::ObjectArray<art::mirror::Class> >)
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::ObjPtr<art::mirror::String> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::ObjPtr<art::mirror::String> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::ObjPtr<art::mirror::String> > > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::ObjPtr<art::mirror::String> >, void*>*)
_Unwind_RaiseException
__moddi3
art::detail::CmdlineParseArgument<art::ProfileSaverOptions>::~CmdlineParseArgument()
art::Thread::PushDeoptimizationContext(art::JValue const&, bool, bool, art::ObjPtr<art::mirror::Throwable>)
art::detail::CmdlineParserArgumentInfo<art::TraceClockSource>::CompleteArgument()
art::VariantMapKey<bool (*)()>::ValueDelete(void*) const
art::Arena::Reset()
art::Instruction::VRegB() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1024u> > const&)::{lambda(art::Memory<1024u>&)#1}, std::__1::allocator<{lambda(art::Memory<1024u>&)#1}>, void (art::Memory<1024u>&)>::destroy()
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::ExperimentalFlags&)#1}, std::__1::allocator<{lambda(art::ExperimentalFlags&)#1}>, void (art::ExperimentalFlags&)>
std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char>, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const>, true>, art::ArenaAllocatorAdapter<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
art::VariantMapKey<std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > >*>::Clone() const
art::CheckJNI::CallNonvirtualLongMethod(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, ...)
art::gc::collector::SemiSpace::IsMarked(art::mirror::Object*)
art::gc::space::FreeListSpace::Alloc(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::ProfileCompilationInfo::GenerateTestProfile(int, unsigned short, unsigned short, unsigned short, unsigned int)
void std::__1::vector<art::Handle<art::mirror::Class>, std::__1::allocator<art::Handle<art::mirror::Class> > >::__push_back_slow_path<art::Handle<art::mirror::Class> >(art::Handle<art::mirror::Class>&&)
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)1, false, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> >::HashSet(unsigned char const*, bool, unsigned int*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::IntoKey(art::RuntimeArgumentMapKey<art::LogVerbosity> const&)::{lambda(art::LogVerbosity&)#1}, std::__1::allocator<{lambda(art::LogVerbosity&)#1}>, void (art::LogVerbosity&)>::~__func()
art::gc::accounting::SpaceBitmap<8u>::ClearVisitor::ClearVisitor(art::gc::accounting::SpaceBitmap<8u>*)
art::verifier::ShortType::GetAssignmentTypeImpl() const
art::register_java_lang_reflect_Executable(_JNIEnv*)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::TraceClockSource&)#1}, std::__1::allocator<{lambda(art::TraceClockSource&)#1}>, void (art::TraceClockSource&)>
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<unsigned int>(art::RuntimeArgumentMapKey<unsigned int> const&)
art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds>::~RuntimeArgumentMapKey()
art::ReaderWriterMutex::~ReaderWriterMutex()
art::Thread::GetThreadName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&) const
_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertINS_11__wrap_iterIPKS6_EEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISF_E9referenceEEE5valueENSA_IPS6_EEE4typeESD_SF_SF_
art::Dbg::OutputLineTable(unsigned long long, unsigned long long, art::JDWP::ExpandBuf*)
art::gc::Heap::CreateMainMallocSpace(art::MemMap*, unsigned int, unsigned int, unsigned int)
art::OatFile::OpenWithElfFile(art::ElfFile*, art::VdexFile*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::CompleteArgument()
art::TypeLookupTable::SupportedSize(unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>::~__func()
art::hprof::Hprof::Hprof(char const*, int, bool)
art::ReferenceTable::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, std::__1::vector<art::GcRoot<art::mirror::Object>, std::__1::allocator<art::GcRoot<art::mirror::Object> > >&)
art::gc::Heap::HeapGrowthMultiplier() const
art::gc::collector::ConcurrentCopying::DisableWeakRefAccessCallback::~DisableWeakRefAccessCallback()
art::detail::CmdlineParseArgument<art::MillisecondsToNanoseconds>::GetNumTokens() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)::{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}, std::__1::allocator<{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}>, void (std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)>::destroy_deallocate()
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Set<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >(art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > const&, art::Identity<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::type const&)
art::verifier::ImpreciseConstHiType::IsImpreciseConstantHi() const
art::InternTable::Table::Insert(art::ObjPtr<art::mirror::String>)
art::gc::space::LargeObjectSpace::~LargeObjectSpace()
std::__1::__shared_ptr_emplace<void (*)(int), std::__1::allocator<void (*)(int)> >::__on_zero_shared()
art::gc::Heap::DecrementDisableThreadFlip(art::Thread*)
art::verifier::DoubleLoType::IsDoubleLo() const
artQuickToInterpreterBridge
art::ThrowNullPointerExceptionForMethodAccess(art::ArtMethod*, art::InvokeType)
art::gc::space::DlMallocSpace::FreeList(art::Thread*, unsigned int, art::mirror::Object**)
art::interpreter::UnstartedRuntime::UnstartedClassClassForName(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
android::base::WriteStringToFd(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)
art::gc::collector::ConcurrentCopying::SweepSystemWeaks(art::Thread*)
art::gc::collector::ConcurrentCopying::VerifyNoMissingCardMarks()
art::CodeInfoEncoding::CodeInfoEncoding(void const*)
guard variable for art::mirror::PrimitiveArray<long long>::array_class_
art::verifier::RegType::IsLongHi() const
art::gc::space::RegionSpace::SetFromSpace(art::gc::accounting::ReadBarrierTable*, bool)
art::gc::space::BumpPointerSpace::AllocNewTlab(art::Thread*, unsigned int)
MterpLogFallback
art::mirror::PrimitiveArray<int>::array_class_
art::OatHeader::GetStoreKeyValuePairByIndex(unsigned int, char const**, char const**) const
artSet64InstanceFromCompiledCode
void art::JNI::SetPrimitiveArrayRegion<_jshortArray*, short, art::mirror::PrimitiveArray<short> >(_JNIEnv*, _jshortArray*, int, int, short const*)
vtable for art::gc::collector::ConcurrentCopying::DisableWeakRefAccessCallback
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity> art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::CreateTypedBuilder<art::LogVerbosity>()
std::__1::__function::__func<android::base::LogdLogger, std::__1::allocator<android::base::LogdLogger>, void (android::base::LogId, android::base::LogSeverity, char const*, char const*, unsigned int, char const*)>::operator()(android::base::LogId&&, android::base::LogSeverity&&, char const*&&, char const*&&, unsigned int&&, char const*&&)
art::CatchHandlerIterator::Next()
art::gc::collector::ConcurrentCopying::ActivateReadBarrierEntrypointsCallback::Run(art::Thread*)
void art::mirror::Object::VisitFieldsReferences<false, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::VerifyReferenceVisitor>(unsigned int, art::gc::VerifyReferenceVisitor const&)
art::JDWP::JdwpState::InvokeInProgress()
art::gc::space::DlMallocSpace::LogFragmentationAllocFailure(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, unsigned int)
art::Runtime::RecordStrongStringInsertion(art::ObjPtr<art::mirror::String>) const
art::MonitorExitVisitor::VisitRoot(art::mirror::Object*, art::RootInfo const&)
_JNIEnv::CallVoidMethod(_jobject*, _jmethodID*, ...)
art::ComputeNativeCallFrameSize::Walk(char const*, unsigned int)
art::ObjectLock<art::mirror::Object>::WaitIgnoringInterrupts()
art::gc::collector::ConcurrentCopying::PushOntoFalseGrayStack(art::mirror::Object*)
art::mirror::Throwable::VisitRoots(art::RootVisitor*)
void std::__1::__sort<art::gc::accounting::AtomicStack<art::mirror::Object>::ObjectComparator&, art::StackReference<art::mirror::Object>*>(art::StackReference<art::mirror::Object>*, art::StackReference<art::mirror::Object>*, art::gc::accounting::AtomicStack<art::mirror::Object>::ObjectComparator&)
art::OatFileAssistant::GetStatusDump()
art::mirror::Constructor::VisitRoots(art::RootVisitor*)
art::detail::CmdlineParseArgument<art::BackgroundGcOption>::ParseArgumentSingle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::InternTable::ChangeWeakRootState(art::gc::WeakRootState)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::XGcOption> const&)::{lambda(art::XGcOption&)#1}, std::__1::allocator<{lambda(art::XGcOption&)#1}>, void (art::XGcOption&)>::~__func()
art::Transaction::ObjectLog::LogShortValue(art::MemberOffset, short, bool)
art::jit::JitCodeCache::JitCodeCache(art::MemMap*, art::MemMap*, unsigned int, unsigned int, unsigned int, bool)
art::CompilerFilter::GetSafeModeFilterFrom(art::CompilerFilter::Filter)
vtable for art::gc::space::DlMallocSpace
art::ProfileCompilationInfo::AddClassIndex(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, art::dex::TypeIndex, unsigned int)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)
std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::Dbg::ExecuteMethod(art::DebugInvokeReq*)
art::ScopedCheck::CheckInstantiableNonArray(art::ScopedObjectAccess&, _jclass*)
art::gc::space::MemoryToolMallocSpace<art::gc::space::RosAllocSpace, 8u, false, true>::AllocThreadUnsafe(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::verifier::RegType::IsArrayTypes() const
art::ArtMethod::JniLongName()
unix_file::FdFile::Compare(unix_file::FdFile*)
art::verifier::RegType::IsJavaLangObject() const
art::ScopedCheck::Check(art::ScopedObjectAccess&, bool, char const*, art::JniValueType*)
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)1, true, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::gc::collector::MarkSweep::IsMarked(art::mirror::Object*)
art::DexFile::GetPermissions() const
art::gc::space::RosAllocSpace::IsRosAllocSpace() const
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)1, true, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::gc::Heap::CollectorTransitionTask::Run(art::Thread*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::CreateTypedBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >()
art::ThreadPoolWorker::SetPthreadPriority(int)
art::CheckJNI::CallNonvirtualBooleanMethodA(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, jvalue*)
art::Thread::InitStackHwm()
art::CheckJNI::CallShortMethodV(_JNIEnv*, _jobject*, _jmethodID*, char*)
art::Dbg::Interrupt(unsigned long long)
art::verifier::RegisterLine::CheckUnaryOpToWide(art::verifier::MethodVerifier*, art::Instruction const*, art::verifier::RegType const&, art::verifier::RegType const&, art::verifier::RegType const&)
art::CheckJNI::Throw(_JNIEnv*, _jthrowable*)
art::hprof::Hprof::Dump()
art::interpreter::UnstartedRuntime::UnstartedMathPow(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::annotations::GetExceptionTypesForMethod(art::ArtMethod*)
vtable for art::gc::space::ImageSpace
vtable for art::gc::collector::ConcurrentCopying::FlipCallback
art::gc::collector::MarkSweep::ReclaimPhase()
void std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*)
art::UnlockJniSynchronizedMethod(_jobject*, art::Thread*)
art::CheckReferenceResult(art::Handle<art::mirror::Object>, art::Thread*)
art::gc::allocator::RosAlloc::Verify()
art::old_action
art::JNI::CallNonvirtualLongMethodV(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, char*)
void std::__1::vector<art::ThreadPoolWorker*, std::__1::allocator<art::ThreadPoolWorker*> >::__push_back_slow_path<art::ThreadPoolWorker*>(art::ThreadPoolWorker*&&)
art::gc::accounting::ModUnionTableToZygoteAllocspace::ShouldAddReference(art::mirror::Object const*) const
art::gc::space::DlMallocSpace::AllocWithGrowth(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::DexFile::FindMethodId(art::DexFile::TypeId const&, art::DexFile::StringId const&, art::DexFile::ProtoId const&) const
art::gc::space::ImageSpace::GetLiveBitmap() const
unix_file::FdFile::FdFile(int, bool)
art::Dbg::StringToUtf8(unsigned long long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
void art::gc::accounting::SpaceBitmap<8u>::VisitMarkedRange<art::gc::collector::ConcurrentCopying::GrayImmuneObjectVisitor<true> const&>(unsigned int, unsigned int, art::gc::collector::ConcurrentCopying::GrayImmuneObjectVisitor<true> const&) const
art::JNI::SetBooleanArrayRegion(_JNIEnv*, _jbooleanArray*, int, int, unsigned char const*)
std::__1::basic_filebuf<char, std::__1::char_traits<char> >::setbuf(char*, int)
art::Monitor::Inflate(art::Thread*, art::Thread*, art::mirror::Object*, int)
art::gc::allocator::RosAlloc::initialized_
art::ArenaPool::ReclaimMemory()
vtable for art::BuildInternalStackTraceVisitor<true>
art::gc::collector::MarkSweep::ExpandMarkStack()
art::NoopAllocator::~NoopAllocator()
std::__1::__shared_ptr_emplace<art::Memory<1024u>, std::__1::allocator<art::Memory<1024u> > >::__on_zero_shared_weak()
art::Barrier::~Barrier()
art::DexFile::kDexMagicVersions
art::instrumentation::Instrumentation::UninstrumentQuickAllocEntryPoints()
art::gc::collector::MarkCompact::IsNullOrMarkedHeapReference(art::mirror::HeapReference<art::mirror::Object>*, bool)
art::TokenRange::MaybeMatches(art::TokenRange const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
void std::__1::vector<art::DexFile const*, std::__1::allocator<art::DexFile const*> >::__push_back_slow_path<art::DexFile const*>(art::DexFile const*&&)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >& ()>
art::gc::Heap::CountInstances(std::__1::vector<art::Handle<art::mirror::Class>, std::__1::allocator<art::Handle<art::mirror::Class> > > const&, bool, unsigned long long*)
artAllocObjectFromCodeResolvedRegionTLABInstrumented
art::ArenaPool::AllocArena(unsigned int)
art::DexRegisterMap::GetLocationCatalogEntryIndex(unsigned short, unsigned short, unsigned int) const
art::verifier::Cat2Type::~Cat2Type()
art::gc::collector::MarkSweep::MarkObject(art::mirror::Object*)
non-virtual thunk to art::gc::collector::SemiSpace::~SemiSpace()
std::__1::__split_buffer<art::LockWord*, std::__1::allocator<art::LockWord*>&>::push_front(art::LockWord* const&)
art::jit::JitCodeCache::CommitCodeInternal(art::Thread*, art::ArtMethod*, unsigned char*, unsigned char*, unsigned char*, unsigned int, unsigned int, unsigned int, unsigned char const*, unsigned int, unsigned int, bool, art::Handle<art::mirror::ObjectArray<art::mirror::Object> >, bool, std::__1::set<art::ArtMethod*, std::__1::less<art::ArtMethod*>, art::ArenaAllocatorAdapter<art::ArtMethod*> > const&)
art::gc::collector::ConcurrentCopying::GrayImmuneObjectVisitor<true>::Callback(art::mirror::Object*, void*)
art::VdexFile::Unquicken(std::__1::vector<art::DexFile const*, std::__1::allocator<art::DexFile const*> > const&, art::ArrayRef<unsigned char const> const&)
art::ThreadPoolWorker::~ThreadPoolWorker()
art::verifier::DoubleHiType::~DoubleHiType()
art::hprof::EndianOutputBuffered::UpdateU4(unsigned int, unsigned int)
art::detail::CmdlineParseArgument<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::~CmdlineParseArgument()
art::gc::space::RegionSpace::AllocateRegion(bool)
art::detail::CmdlineParseArgument<bool>::GetTypeName() const
std::__1::__hash_iterator<std::__1::__hash_node<unsigned long long, void*>*> std::__1::__hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> >::find<unsigned long long>(unsigned long long const&)
bool art::interpreter::DoFieldGet<(art::FindFieldType)6, (art::Primitive::Type)4, false>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::Memory<1024u>&)#1}, std::__1::allocator<{lambda(art::Memory<1024u>&)#1}>, void (art::Memory<1024u>&)>::__clone() const
non-virtual thunk to art::gc::space::MemoryToolMallocSpace<art::gc::space::DlMallocSpace, 8u, true, false>::AllocThreadUnsafe(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::DexRegisterMap::Dump(art::VariableIndentationOutputStream*, art::CodeInfo const&, unsigned short) const
art::Dbg::GetReferringObjects(unsigned long long, int, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >*)
art::gc::space::DlMallocSpace::MaxBytesBulkAllocatedFor(unsigned int)
art::annotations::GetLineNumFromPC(art::DexFile const*, art::ArtMethod*, unsigned int)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)
art::TokenRange art::TokenRange::RemoveIf<art::TokenRange::RemoveToken(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)#1}>(art::TokenRange::RemoveToken(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)#1} const&) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >& ()>::__clone(std::__1::__function::__base<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&>*) const
art::OatHeader::GetKeyValueStoreSize() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::IntoKey(art::RuntimeArgumentMapKey<art::ExperimentalFlags> const&)::{lambda(art::ExperimentalFlags&)#1}, std::__1::allocator<{lambda(art::ExperimentalFlags&)#1}>, void (art::ExperimentalFlags&)>::~__func()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::JDWP::JdwpOptions& ()>::operator()()
art::DexFile::OpenOneDexFileFromZip(art::ZipArchive const&, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, art::DexFile::ZipOpenErrorCode*)
art::gc::collector::MarkCompact::DelayReferenceReferent(art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::Reference>)
art::ZipArchive::Open(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::ThrowArrayStoreException(art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::Class>)
art::DexFile::CalculateChecksum() const
art::MipsInstructionSetFeatures::AsBitmap() const
art::gc::space::RegionSpace::~RegionSpace()
art::JNI::GetShortArrayElements(_JNIEnv*, _jshortArray*, unsigned char*)
art::detail::CmdlineParseArgument<art::ParseStringList<(char)58> >::ParseArgument(art::TokenRange const&, unsigned int*)
art::OatFileManager::FindOpenedOatFileFromDexLocation(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
void std::__1::vector<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*>, std::__1::allocator<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*> > >::__push_back_slow_path<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*> >(std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*>&&)
art::ElfFileImpl<ElfTypes64>::FindSectionByType(unsigned int) const
art::CheckJNI::CallStaticBooleanMethodA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
art::gc::collector::ConcurrentCopying::ProcessReferences(art::Thread*)
non-virtual thunk to art::gc::space::BumpPointerSpace::Alloc(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
non-virtual thunk to art::gc::space::MemoryToolLargeObjectMapSpace::Alloc(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
__jit_debug_register_code_ptr
_tr_stored_block
art::BarrierClosure::~BarrierClosure()
art::BuildNativeCallFrameStateMachine<art::BuildGenericJniFrameVisitor::FillJniCall>::~BuildNativeCallFrameStateMachine()
art::mirror::ClassExt::SetObsoleteArrays(art::ObjPtr<art::mirror::PointerArray>, art::ObjPtr<art::mirror::ObjectArray<art::mirror::DexCache> >)
art::JDWP::JdwpState::Run()
art::detail::CmdlineParseArgument<art::XGcOption>::MaybeMatches(art::TokenRange const&)
art::gc::Heap::RegisterNativeAllocation(_JNIEnv*, unsigned int)
void art::JNI::ReleasePrimitiveArray<_jdoubleArray*, double, art::mirror::PrimitiveArray<double> >(_JNIEnv*, _jdoubleArray*, double*, int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::IntoKey(art::RuntimeArgumentMapKey<art::gc::space::LargeObjectSpaceType> const&)::{lambda(art::gc::space::LargeObjectSpaceType&)#1}, std::__1::allocator<{lambda(art::gc::space::LargeObjectSpaceType&)#1}>, void (art::gc::space::LargeObjectSpaceType&)>::destroy()
art::FaultManager::FaultManager()
art::ClassLinker::LinkMethods(art::Thread*, art::Handle<art::mirror::Class>, art::Handle<art::mirror::ObjectArray<art::mirror::Class> >, bool*, art::ArtMethod**)
art::Monitor::AtraceMonitorLock(art::Thread*, art::mirror::Object*, bool)
art::jit::JitCodeCache::RemoveUnmarkedCode(art::Thread*)
vtable for art::verifier::PreciseConstType
vtable for art::gc::collector::MarkCompact
art::Transaction::ThrowAbortError(art::Thread*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const*)
art::mirror::Field::VisitRoots(art::RootVisitor*)
void art::mirror::Class::VisitNativeRoots<(art::ReadBarrierOption)0, art::gc::accounting::AddToReferenceArrayVisitor const>(art::gc::accounting::AddToReferenceArrayVisitor const&, art::PointerSize)
art::Monitor::Monitor(art::Thread*, art::Thread*, art::mirror::Object*, int, unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoIgnore()::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>::destroy()
unix_file::FdFile::Copy(unix_file::FdFile*, long long, long long)
art::gc::Heap::DeleteThreadPool()
art::OatFileAssistant::OatFileInfo::IsExecutable()
art::GetInstructionSetAlignment(art::InstructionSet)
art::VariantMapKey<art::MillisecondsToNanoseconds>::~VariantMapKey()
art::MemMapArena::Release()
vtable for art::gc::space::BumpPointerSpace
art::ClassLinker::AppendToBootClassPath(art::Thread*, art::DexFile const&)
art::Monitor::MonitorEnter(art::Thread*, art::mirror::Object*, bool)
art::gc::allocator::RosAlloc::DumpPageMap()
art::ScopedContentionRecorder::ScopedContentionRecorder(art::BaseMutex*, unsigned long long, unsigned long long)
art::VariantMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::~VariantMapKey()
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::DexInvokeType const&)
art::DexFileVerifier::CheckIntraCodeItem()
art::ReadBarrier::Mark(art::mirror::Object*)
art::TrackedAllocators::g_bytes_used
art::ObjectRegistry::ObjectRegistry()
art::VariantMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::Clone() const
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)1, art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsFieldVisitor const>(art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsFieldVisitor const&, art::PointerSize)
non-virtual thunk to art::gc::space::MemoryToolMallocSpace<art::gc::space::RosAllocSpace, 8u, false, true>::AllocThreadUnsafe(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::JDWP::JdwpState::CleanupMatchList(std::__1::vector<art::JDWP::JdwpEvent*, std::__1::allocator<art::JDWP::JdwpEvent*> > const&)
art::Dbg::gDebuggerActive
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > const&)::{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}, std::__1::allocator<{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}>, void (std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)>::destroy()
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoIgnore()::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>
void art::ArtMethod::GetAccessFlagsDCheck<(art::ReadBarrierOption)0>()
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<art::Memory<1024u> >(art::RuntimeArgumentMapKey<art::Memory<1024u> > const&)
art::DumpKernelStack(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, int, char const*, bool)
art::Trace::Trace(unix_file::FdFile*, char const*, unsigned int, int, art::Trace::TraceOutputMode, art::Trace::TraceMode)
art::gc::Heap::PostGcVerification(art::gc::collector::GarbageCollector*)
non-virtual thunk to art::gc::collector::MarkCompact::~MarkCompact()
art::JDWP::JdwpSocketState::Shutdown()
art::CheckJNI::ExceptionOccurred(_JNIEnv*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::BackgroundGcOption> const&)::{lambda(art::BackgroundGcOption&)#1}, std::__1::allocator<{lambda(art::BackgroundGcOption&)#1}>, void (art::BackgroundGcOption&)>::destroy_deallocate()
art::gc::space::MallocSpace::~MallocSpace()
art::verifier::UninitializedThisReferenceType::~UninitializedThisReferenceType()
_Unwind_GetGR
art::detail::CmdlineParseArgument<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::~CmdlineParseArgument()
art::DexFileVerifier::CheckOrderAndGetClassDef(bool, char const*, unsigned int, unsigned int, bool*, art::dex::TypeIndex*, art::DexFile::ClassDef const**)
art::Monitor::InflateThinLocked(art::Thread*, art::Handle<art::mirror::Object>, art::LockWord, unsigned int)
art::gc::Verification::DumpRAMAroundAddress(unsigned int, unsigned int) const
art::JNIEnvExt::~JNIEnvExt()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::BackgroundGcOption&)#1}, std::__1::allocator<{lambda(art::BackgroundGcOption&)#1}>, void (art::BackgroundGcOption&)>::__clone() const
art::ReferenceMapVisitor<art::RootCallbackVisitor, true>::VisitQuickFramePrecise()
art::OatFile::OatClass::OatClass(art::OatFile const*, art::mirror::Class::Status, art::OatClassType, unsigned int, unsigned int const*, art::OatMethodOffsets const*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::XGcOption&)#1}, std::__1::allocator<{lambda(art::XGcOption&)#1}>, void (art::XGcOption&)>::destroy_deallocate()
vtable for art::VariantMapKey<void (*)()>
art::VariantMapKey<void (*)()>::~VariantMapKey()
unix_file::FdFile::Read(char*, long long, long long) const
art::ArtMethod* art::FindMethodFromCode<(art::InvokeType)1, false>(unsigned int, art::ObjPtr<art::mirror::Object>*, art::ArtMethod*, art::Thread*)
android::base::InitLogging(char**, std::__1::function<void (android::base::LogId, android::base::LogSeverity, char const*, char const*, unsigned int, char const*)>&&, std::__1::function<void (char const*)>&&)
art::ObjPtr<art::mirror::Constructor> art::mirror::Class::GetDeclaredConstructorInternal<(art::PointerSize)8, false>(art::Thread*, art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::ObjectArray<art::mirror::Class> >)
art::register_java_lang_ref_FinalizerReference(_JNIEnv*)
art::ClassTable::ClassTable()
art::gc::collector::MarkCompact::UpdateReferences()
art::ClassTable::LookupByDescriptor(art::ObjPtr<art::mirror::Class>)
art::JNI::GetFieldID(_JNIEnv*, _jclass*, char const*, char const*)
art::detail::CmdlineParseArgument<art::JDWP::JdwpOptions>::ParseArgument(art::TokenRange const&, unsigned int*)
art::CheckJNI::NewLongArray(_JNIEnv*, int)
art::Trace::AllocStackTrace()
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::ThreadState const&)
art::FindFrameVisitor::VisitFrame()
art::MemMap::TryReadable()
_ZNSt3__16vectorINS_4pairIPKcbEENS_9allocatorIS4_EEE6assignIPKS4_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_
art::BaseMutex::DumpContention(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::ReferenceTable::Remove(art::ObjPtr<art::mirror::Object>)
unix_file::FdFile::FlushCloseOrErase()
art::JDWP::expandBufAddSpace(art::JDWP::ExpandBuf*, int)
art::detail::CmdlineParseArgument<art::ExperimentalFlags>::~CmdlineParseArgument()
vtable for art::Indenter
art::Dbg::thread_lifecycle_callback_
art::BacktraceCollector::Callback(_Unwind_Context*, void*)
vtable for art::Trace
art::CheckJNI::GetArrayLength(_JNIEnv*, _jarray*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::ProfileSaverOptions&)#1}, std::__1::allocator<{lambda(art::ProfileSaverOptions&)#1}>, void (art::ProfileSaverOptions&)>::__clone() const
art::DexFileVerifier::CheckClassDataItemMethod(unsigned int, unsigned int, unsigned int, art::dex::TypeIndex, unsigned int, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int> >*, bool)
void art::gc::accounting::SpaceBitmap<4096u>::VisitMarkedRange<art::gc::VerifyLiveStackReferences&>(unsigned int, unsigned int, art::gc::VerifyLiveStackReferences&) const
art::CheckJNI::GetObjectField(_JNIEnv*, _jobject*, _jfieldID*)
guard variable for art::mirror::PrimitiveArray<double>::array_class_
art::OatFile::OpenReadable(unix_file::FdFile*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)
art::WellKnownClasses::java_lang_reflect_Proxy_invoke
artAllocArrayFromCodeResolvedRosAlloc
art::JNI::CallStaticLongMethodA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
android::base::ReadFdToString(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::ClassLinker::ResolveMethodExceptionHandlerTypes(art::ArtMethod*)
art::hprof::EndianOutputBuffered::HandleU4List(unsigned int const*, unsigned int)
art::InternTable::VisitRoots(art::RootVisitor*, art::VisitRootFlags)
art::DumpNativeStack(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, int, BacktraceMap*, char const*, art::ArtMethod*, void*)
unsigned short* art::JNI::GetPrimitiveArray<_jcharArray*, unsigned short, art::mirror::PrimitiveArray<unsigned short> >(_JNIEnv*, _jcharArray*, unsigned char*)
art::ArtMethod::GetClassFromTypeIndex(art::dex::TypeIndex, bool)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::ProfileSaverOptions const&)
art::ClassLinker::ResolveType(art::DexFile const&, art::dex::TypeIndex, art::Handle<art::mirror::DexCache>, art::Handle<art::mirror::ClassLoader>)
art::CheckJNI::CallDoubleMethodA(_JNIEnv*, _jobject*, _jmethodID*, jvalue*)
art::ParsedOptions::ParsedOptions()
art::CheckJNI::SetByteArrayRegion(_JNIEnv*, _jbyteArray*, int, int, signed char const*)
art::jit::Jit::LoadCompiler(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::DexFileVerifier::CheckInterAnnotationSetRefList()
_Unwind_GetIP
art::GetInstructionSetString(art::InstructionSet)
art::Dbg::GetContendedMonitor(unsigned long long, unsigned long long*)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::LayoutType const&)
art::verifier::IntegerType::instance_
void art::mirror::Class::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::mirror::ReadBarrierOnNativeRootsVisitor>(art::ObjPtr<art::mirror::Class>, art::mirror::ReadBarrierOnNativeRootsVisitor const&)
art::ClassLinker::CheckProxyConstructor(art::ArtMethod*) const
bool art::interpreter::DoIPutQuick<(art::Primitive::Type)2, true>(art::ShadowFrame const&, art::Instruction const*, unsigned short)
artIsAssignableFromCode
MterpLogExceptionThrownException
MappedZipFile::GetFileDescriptor() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > const&)::{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}, std::__1::allocator<{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}>, void (std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}> >*) const
art::verifier::ReferenceType::~ReferenceType()
void std::__1::vector<art::mirror::Object*, std::__1::allocator<art::mirror::Object*> >::__push_back_slow_path<art::mirror::Object* const&>(art::mirror::Object* const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::TraceClockSource& ()>::operator()()
art::verifier::RegType::IsPreciseReference() const
art::Runtime::RecordWriteArray(art::mirror::Array*, unsigned int, unsigned long long) const
art::DexFileVerifier::CheckShortyDescriptorMatch(char, char const*, bool)
art::RuntimeArgumentMap::LargeObjectThreshold
art::ThreadPool::~ThreadPool()
art::ArenaAllocator::AllocFromNewArenaWithMemoryTool(unsigned int)
art::Arena::Release()
art::VariantMapKey<art::ParseStringList<(char)58> >::~VariantMapKey()
art::gc::space::BumpPointerSpace::Create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned char*)
art::GetClassesVisitor::operator()(art::ObjPtr<art::mirror::Class>)
art::JNI::DeleteWeakGlobalRef(_JNIEnv*, _jobject*)
art::OatHeader::kOatVersion
art::SingleStepControl::ContainsDexPc(unsigned int) const
art::Dbg::RequestDeoptimization(art::DeoptimizationRequest const&)
art::gc::allocator::RosAlloc::Free(art::Thread*, void*)
art::gc::collector::SemiSpace::MarkNonForwardedObject(art::mirror::Object*)
art::ClassLinker::~ClassLinker()
art::gc::space::DlMallocSpace::CreateFromMemMap(art::MemMap*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned int, unsigned int, unsigned int, bool)
std::__1::__tree<std::__1::__value_type<art::StringPiece, art::OatDexFile const*>, std::__1::__map_value_compare<art::StringPiece, std::__1::__value_type<art::StringPiece, art::OatDexFile const*>, std::__1::less<art::StringPiece>, true>, std::__1::allocator<std::__1::__value_type<art::StringPiece, art::OatDexFile const*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<art::StringPiece, art::OatDexFile const*>, void*>*)
art::NeedsDeoptimizationVisitor::~NeedsDeoptimizationVisitor()
mspace_realloc
art::gc::Heap::TrimSpaces(art::Thread*)
art::JDWP::EventAlloc(int)
std::__1::__split_buffer<art::ArtField**, std::__1::allocator<art::ArtField**> >::push_back(art::ArtField**&&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>::~__func()
void std::__1::vector<art::instrumentation::InstrumentationStackFrame, std::__1::allocator<art::instrumentation::InstrumentationStackFrame> >::__push_back_slow_path<art::instrumentation::InstrumentationStackFrame const&>(art::instrumentation::InstrumentationStackFrame const&)
art::verifier::RegType::IsUninitializedTypes() const
art::DexFileVerifier::CheckIntraIdSection(unsigned int, unsigned int, art::DexFile::MapItemType)
art::gc::collector::GarbageCollector::GetEstimatedMeanThroughput() const
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::StackedShadowFrameType const&)
art::DexReferenceCollection<unsigned short, art::ScopedArenaAllocatorAdapter>::AddReference(art::DexFile const*, unsigned short)
art::verifier::MethodVerifier::CurrentInsnFlags()
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::ThreadFlag const&)
art::InternTable::InternStrong(char const*)
art::JNI::SetStaticObjectField(_JNIEnv*, _jclass*, _jfieldID*, _jobject*)
art::DescriptorToDot(char const*)
art::JNIEnvExt::JNIEnvExt(art::Thread*, art::JavaVMExt*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoIgnore()::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>::destroy_deallocate()
art::mips::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::mips::Register const&)
art::verifier::RegType::IsDouble() const
art::CheckJNI::GetLongArrayRegion(_JNIEnv*, _jlongArray*, int, int, long long*)
art::gc::collector::MarkCompact::UpdateAndMarkModUnion()
art::interpreter::UnstartedRuntime::UnstartedThreadCurrentThread(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::x86::X86Context::SetArg0(unsigned int)
art::JNI::NewFloatArray(_JNIEnv*, int)
art::JNI::CallNonvirtualBooleanMethod(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, ...)
std::__1::function<art::TraceClockSource& ()>::swap(std::__1::function<art::TraceClockSource& ()>&)
artTestSuspendFromCode
art::mirror::String::Equals(art::ObjPtr<art::mirror::String>)
art::ArenaAllocator::ArenaAllocator(art::ArenaPool*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::IntoKey(art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::MillisecondsToNanoseconds& ()>::__clone(std::__1::__function::__base<art::MillisecondsToNanoseconds&>*) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::gc::space::LargeObjectSpaceType& ()>::__clone() const
vtable for art::gc::collector::ConcurrentCopying::DisableMarkingCheckpoint
void art::gc::accounting::SpaceBitmap<8u>::VisitMarkedRange<art::hprof::Hprof::ProcessBody()::{lambda(art::mirror::Object*)#1}&>(unsigned int, unsigned int, art::hprof::Hprof::ProcessBody()::{lambda(art::mirror::Object*)#1}&) const
art::MonitorList::SweepMonitorList(art::IsMarkedVisitor*)
std::__1::__shared_ptr_pointer<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::default_delete<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::~__shared_ptr_pointer()
art::gc::collector::SemiSpace::IsNullOrMarkedHeapReference(art::mirror::HeapReference<art::mirror::Object>*, bool)
art::gc::space::MemoryToolMallocSpace<art::gc::space::DlMallocSpace, 8u, true, false>::FreeList(art::Thread*, unsigned int, art::mirror::Object**)
art::JNI::CallStaticCharMethod(_JNIEnv*, _jclass*, _jmethodID*, ...)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1u> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1u>& ()>::__clone(std::__1::__function::__base<art::Memory<1u>&>*) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, unsigned int& ()>::__clone() const
art::StackVisitor::GetDexPc(bool) const
art::SharedLibrary::CheckOnLoadResult()
art::BaseMutex::IsReaderWriterMutex() const
art::Dbg::DdmHandleHpsgNhsgChunk(art::Dbg::HpsgWhen, art::Dbg::HpsgWhat, bool)
art::gc::collector::ConcurrentCopying::RecordLiveStackFreezeSize(art::Thread*)
art::RuntimeArgumentMap::CpuAbiList
art::interpreter::UnstartedRuntime::UnstartedJNIByteOrderIsLittleEndian(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
art::mirror::PrimitiveArray<int>::Get(int)
art::register_dalvik_system_VMStack(_JNIEnv*)
art::RuntimeArgumentMapKey<art::ParseStringList<(char)58> >::~RuntimeArgumentMapKey()
art::ClassTable::Remove(char const*)
art::Thread::IsStillStarting() const
art::gc::AllocRecordObjectMap::Clear()
art::jit::JitCodeCache::GetMemorySizeOfCodePointer(void const*)
art::CheckJNI::NewLocalRef(_JNIEnv*, _jobject*)
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::BufferedRootVisitor<128u> >(art::BufferedRootVisitor<128u>&, art::PointerSize)
art::verifier::RegTypeCache::CreatePrimitiveAndSmallConstantTypes()
MterpSetBooleanStatic
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Offset const&)
art::Dbg::MatchLocation(art::JDWP::JdwpLocation const&, art::JDWP::EventLocation const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoKey(art::RuntimeArgumentMapKey<art::Unit> const&)::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>::destroy()
art::verifier::ByteType::~ByteType()
artSet32InstanceFromCompiledCode
art::JDWP::JdwpState::ProcessRequest(art::JDWP::Request*, art::JDWP::ExpandBuf*, bool*)
bool art::mirror::Executable::CreateFromArtMethod<(art::PointerSize)8, true>(art::ArtMethod*)
art::jit::JitCodeCache::InvalidateCompiledCodeFor(art::ArtMethod*, art::OatQuickMethodHeader const*)
art::ObjectRegistry::EnableCollection(unsigned long long)
art::gc::Heap::PreGcVerification(art::gc::collector::GarbageCollector*)
art::ObjectLock<art::mirror::Object>::ObjectLock(art::Thread*, art::Handle<art::mirror::Object>)
art::ProfileCompilationInfo::Save(int)
art::CheckJNI::NewRef(char const*, _JNIEnv*, _jobject*, art::IndirectRefKind)
art::mirror::Object* art::gc::Heap::AllocObjectWithAllocator<true, false, art::VoidFunctor>(art::Thread*, art::ObjPtr<art::mirror::Class>, unsigned int, art::gc::AllocatorType, art::VoidFunctor const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::IntoKey(art::RuntimeArgumentMapKey<bool> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, bool& ()>::__clone() const
artAllocObjectFromCodeResolvedDlMalloc
art::ThreadList::ReleaseThreadId(art::Thread*, unsigned int)
inflateGetDictionary
art::JavaVMExt::IsBadJniVersion(int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::IntoKey(art::RuntimeArgumentMapKey<art::ProfileSaverOptions> const&)::{lambda(art::ProfileSaverOptions&)#1}, std::__1::allocator<{lambda(art::ProfileSaverOptions&)#1}>, void (art::ProfileSaverOptions&)>::~__func()
art::gc::space::BumpPointerSpace::AssertThreadLocalBuffersAreRevoked(art::Thread*)
art::JNI::ExceptionOccurred(_JNIEnv*)
art::gc::collector::ConcurrentCopying::SwitchToGcExclusiveMarkStackMode()
art::gc::space::DlMallocSpace::Free(art::Thread*, art::mirror::Object*)
art::Memory<1024u>& art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination::GetOrCreateFromMap<art::Memory<1024u> >(art::RuntimeArgumentMapKey<art::Memory<1024u> > const&)
art::SetQuickAllocEntryPoints_region_tlab(art::QuickEntryPoints*, bool)
art::gc::collector::MarkSweep::VisitRoots(art::mirror::Object***, unsigned int, art::RootInfo const&)
non-virtual thunk to art::gc::collector::MarkSweep::CheckpointMarkThreadRoots::VisitRoots(art::mirror::CompressedReference<art::mirror::Object>**, unsigned int, art::RootInfo const&)
art::GetFileSizeBytes(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::CheckJNI::CallNonvirtualIntMethodV(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, char*)
art::gc::collector::GarbageCollector::GetCurrentIteration() const
art::AotClassLinker::~AotClassLinker()
art::CheckJNI::CallIntMethodA(_JNIEnv*, _jobject*, _jmethodID*, jvalue*)
art::detail::CmdlineParseArgument<art::BackgroundGcOption>::~CmdlineParseArgument()
bool art::mirror::Class::ResolvedMethodAccessTest<false>(art::ObjPtr<art::mirror::Class>, art::ArtMethod*, art::ObjPtr<art::mirror::DexCache>, unsigned int, art::InvokeType)
artAllocArrayFromCodeResolvedRegionInstrumented
art::mirror::Class::SetEmbeddedVTableEntry(unsigned int, art::ArtMethod*, art::PointerSize)
art::UContext::DumpX86Flags(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, unsigned int) const
std::__1::__split_buffer<art::HashSet<art::GcRoot<art::mirror::String>, art::InternTable::GcRootEmptyFn, art::InternTable::StringHashEquals, art::InternTable::StringHashEquals, std::__1::allocator<art::GcRoot<art::mirror::String> > >, std::__1::allocator<art::HashSet<art::GcRoot<art::mirror::String>, art::InternTable::GcRootEmptyFn, art::InternTable::StringHashEquals, art::InternTable::StringHashEquals, std::__1::allocator<art::GcRoot<art::mirror::String> > > >&>::push_back(art::HashSet<art::GcRoot<art::mirror::String>, art::InternTable::GcRootEmptyFn, art::InternTable::StringHashEquals, art::InternTable::StringHashEquals, std::__1::allocator<art::GcRoot<art::mirror::String> > >&&)
art::Locks::reference_queue_finalizer_references_lock_
art::gc::space::BumpPointerSpace::AllocThreadUnsafe(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::BackgroundGcOption> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::BackgroundGcOption& ()>
art::mirror::ObjectArray<art::mirror::StackTraceElement>::Alloc(art::Thread*, art::ObjPtr<art::mirror::Class>, int, art::gc::AllocatorType)
art::JNI::CallShortMethodV(_JNIEnv*, _jobject*, _jmethodID*, char*)
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::mirror::ReadBarrierOnNativeRootsVisitor const>(art::mirror::ReadBarrierOnNativeRootsVisitor const&, art::PointerSize)
art::SelfDeletingTask::Finalize()
void art::mirror::ObjectArray<art::mirror::Object>::VisitReferences<art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor>(art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor const&)
art::ScopedObjectAccessAlreadyRunnable::DCheckObjIsNotClearedJniWeakGlobal(art::ObjPtr<art::mirror::Object>)
art::gc::accounting::HeapBitmap::ReplaceLargeObjectBitmap(art::gc::accounting::SpaceBitmap<4096u>*, art::gc::accounting::SpaceBitmap<4096u>*)
std::__1::vector<unsigned char, art::ArenaAllocatorAdapter<unsigned char> >::__append(unsigned int)
art::mirror::PrimitiveArray<unsigned char>* art::JNI::DecodeAndCheckArrayType<_jbooleanArray*, unsigned char, art::mirror::PrimitiveArray<unsigned char> >(art::ScopedObjectAccess&, _jbooleanArray*, char const*, char const*)
art::DexFile::Open(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > >*)
art::ArenaAllocatorMemoryTool::DoMakeInaccessible(void*, unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>::__clone(std::__1::__function::__base<art::Unit&>*) const
art::Indenter::RawWrite(char const*, int)
art::JNI::CallShortMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)
void std::__1::__invoke_void_return_wrapper<void>::__call<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::IntoKey(art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds> const&)::{lambda(art::MillisecondsToNanoseconds&)#1}&, art::MillisecondsToNanoseconds&>(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::IntoKey(art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds> const&)::{lambda(art::MillisecondsToNanoseconds&)#1}&, art::MillisecondsToNanoseconds&)
std::__1::__hash_table<std::__1::__hash_value_type<art::ArtMethod*, std::__1::vector<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*>, std::__1::allocator<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*> > > >, std::__1::__unordered_map_hasher<art::ArtMethod*, std::__1::__hash_value_type<art::ArtMethod*, std::__1::vector<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*>, std::__1::allocator<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*> > > >, std::__1::hash<art::ArtMethod*>, true>, std::__1::__unordered_map_equal<art::ArtMethod*, std::__1::__hash_value_type<art::ArtMethod*, std::__1::vector<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*>, std::__1::allocator<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*> > > >, std::__1::equal_to<art::ArtMethod*>, true>, std::__1::allocator<std::__1::__hash_value_type<art::ArtMethod*, std::__1::vector<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*>, std::__1::allocator<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*> > > > > >::rehash(unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(bool&)#1}, std::__1::allocator<{lambda(bool&)#1}>, void (bool&)>::destroy_deallocate()
vtable for art::gc::ClearedReferenceTask
art::gc::accounting::MemoryRangeBitmap<1024u>::Set(unsigned int)
MterpGet32Static
unsigned int art::gc::accounting::CardTable::Scan<true, art::gc::collector::MarkSweep::MarkStackTask<false>::ScanObjectParallelVisitor>(art::gc::accounting::SpaceBitmap<8u>*, unsigned char*, unsigned char*, art::gc::collector::MarkSweep::MarkStackTask<false>::ScanObjectParallelVisitor const&, unsigned char)
art::detail::CmdlineParserArgumentInfo<art::Memory<1024u> >::CompleteArgument()
vtable for art::X86_64InstructionSetFeatures
art::gc::accounting::SpaceBitmap<4096u>::ClearVisitor::operator()(art::mirror::Object*) const
art::IsValidBinaryClassName(char const*)
art::GuardedCopy::DebugFree(void*, unsigned int)
art::ZipEntry::ExtractToFile(unix_file::FdFile&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::ArmInstructionSetFeatures::FromVariant(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::verifier::MethodVerifier::~MethodVerifier()
art::ThrowAbstractMethodError(art::ArtMethod*)
art::IndirectReferenceTable::ConstexprChecks()
art::gc::ClearedReferenceTask::Run(art::Thread*)
vtable for art::DumpFramesWithTypeStackVisitor
art::register_java_lang_Object(_JNIEnv*)
art::WellKnownClasses::dalvik_system_DexFile_cookie
art::Dbg::ProcessDeoptimizationRequest(art::DeoptimizationRequest const&)
art::DexFileVerifier::FindFirstClassDataDefiner(unsigned char const*, bool*)
art::ArtField* art::FindFieldFromCode<(art::FindFieldType)1, false>(unsigned int, art::ArtMethod*, art::Thread*, unsigned int)
art::ProfileCompilationInfo::GetNumberOfMethods() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::IntoKey(art::RuntimeArgumentMapKey<double> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, double& ()>::__clone() const
art::verifier::CharType::Destroy()
inflateReset2
art::ClassLinker::InitializePrimitiveClass(art::ObjPtr<art::mirror::Class>, art::Primitive::Type)
art::QuasiAtomic::SwapMutexWrite64(long long volatile*, long long)
art::ArtMethod::HasSameNameAndSignature(art::ArtMethod*)
art::gc::AllocRecordObjectMap::SetAllocTrackingEnabled(bool)
artSetShortInstanceFromCompiledCode
art::gc::Heap::RecordFreeRevoke()
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination::GetOrCreateFromMap<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
art::ScopedArenaAllocator::~ScopedArenaAllocator()
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::ProfileCompilationInfo*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::ProfileCompilationInfo*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::ProfileCompilationInfo*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::ProfileCompilationInfo*>, void*>*)
art::Trace::DexPcMoved(art::Thread*, art::Handle<art::mirror::Object>, art::ArtMethod*, unsigned int)
art::CodeSimulatorContainer::CodeSimulatorContainer(art::InstructionSet)
art::ThreadList::FindThreadByThreadId(unsigned int)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > const&)::{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}, std::__1::allocator<{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}>, void (std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)>
art::BitVector::IsSubsetOf(art::BitVector const*) const
art::ObjectTryLock<art::mirror::Class>::ObjectTryLock(art::Thread*, art::Handle<art::mirror::Class>)
art::gc::collector::ImmuneRegion::Reset()
vtable for art::gc::ZygoteCompactingCollector
art::fault_manager
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::ProfileCompilationInfo*>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::ProfileCompilationInfo*>, void*>*, int>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::ProfileCompilationInfo*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::ProfileCompilationInfo*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::ProfileCompilationInfo*> > >::__emplace_unique_key_args<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::ProfileCompilationInfo*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::ProfileCompilationInfo*&&)
void std::__1::vector<art::verifier::RegType const*, art::ScopedArenaAllocatorAdapter<art::verifier::RegType const*> >::__push_back_slow_path<art::verifier::RegType const*>(art::verifier::RegType const*&&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1u> > const&)::{lambda(art::Memory<1u>&)#1}, std::__1::allocator<{lambda(art::Memory<1u>&)#1}>, void (art::Memory<1u>&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::Memory<1u>&)#1}> >*) const
art::Transaction::InternStringLog::VisitRoots(art::RootVisitor*)
art::CheckJII::AttachCurrentThreadAsDaemon(_JavaVM*, _JNIEnv**, void*)
art::ProfileCompilationInfo::GetMethodHotness(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned short) const
art::verifier::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::verifier::RegType const&)
art::ClassTable::TableSlot::HashDescriptor(art::ObjPtr<art::mirror::Class>)
art::gc::space::FreeListSpace::AllocationSize(art::mirror::Object*, unsigned int*)
art::Thread::SetReadBarrierEntrypoints()
art::RuntimeArgumentMap::LowMemoryMode
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*, unsigned int)
art::gc::accounting::Bitmap::CopyFrom(art::gc::accounting::Bitmap*)
art::VariantMapKey<art::CompilerCallbacks*>::ValueClone(void*) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::IntoKey(art::RuntimeArgumentMapKey<art::verifier::VerifyMode> const&)::{lambda(art::verifier::VerifyMode&)#1}, std::__1::allocator<{lambda(art::verifier::VerifyMode&)#1}>, void (art::verifier::VerifyMode&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::verifier::VerifyMode&)#1}> >*) const
unix_file::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, unix_file::FdFile::GuardState const&)
art::ArenaAllocator::ArenaAllocator(art::ArenaPool*)
art::ClassLoaderVisitor::~ClassLoaderVisitor()
std::__1::deque<art::instrumentation::InstrumentationStackFrame, std::__1::allocator<art::instrumentation::InstrumentationStackFrame> >::__move_and_check(std::__1::__deque_iterator<art::instrumentation::InstrumentationStackFrame, art::instrumentation::InstrumentationStackFrame*, art::instrumentation::InstrumentationStackFrame&, art::instrumentation::InstrumentationStackFrame**, int, 204>, std::__1::__deque_iterator<art::instrumentation::InstrumentationStackFrame, art::instrumentation::InstrumentationStackFrame*, art::instrumentation::InstrumentationStackFrame&, art::instrumentation::InstrumentationStackFrame**, int, 204>, std::__1::__deque_iterator<art::instrumentation::InstrumentationStackFrame, art::instrumentation::InstrumentationStackFrame*, art::instrumentation::InstrumentationStackFrame&, art::instrumentation::InstrumentationStackFrame**, int, 204>, art::instrumentation::InstrumentationStackFrame const*&)
art::RuntimeArgumentMap::MaxSpinsBeforeThinLockInflation
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(double&)#1}, std::__1::allocator<{lambda(double&)#1}>, void (double&)>::operator()(double&)
art::interpreter::UnstartedRuntime::UnstartedJNIUnsafeGetArrayIndexScaleForComponentType(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
art::OatHeader::UpdateChecksum(void const*, unsigned int)
art::hprof::Hprof::DumpToDdmsDirect(unsigned int, unsigned int, unsigned int)
bool art::PerformConversions<art::mirror::EmulatedStackFrameAccessor, art::ShadowFrameSetter>(art::Thread*, art::Handle<art::mirror::MethodType>, art::Handle<art::mirror::MethodType>, art::mirror::EmulatedStackFrameAccessor*, art::ShadowFrameSetter*, int)
void art::ClassTable::VisitRoots<art::gc::collector::MarkVisitor>(art::gc::collector::MarkVisitor const&)
void art::JNI::ReleasePrimitiveArray<_jintArray*, int, art::mirror::PrimitiveArray<int> >(_JNIEnv*, _jintArray*, int*, int)
art::Dbg::GetLocalValue(art::StackVisitor const&, art::ScopedObjectAccessUnchecked&, int, art::JDWP::JdwpTag, unsigned char*, unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::LogVerbosity& ()>::destroy()
art::gc::allocator::RosAlloc::FreePages(art::Thread*, void*, bool)
art::gc::Heap::SetTargetHeapUtilization(float)
artThrowArrayBoundsFromCode
art::ClassHierarchyAnalysis::VerifyNonSingleImplementation(art::mirror::Class*, unsigned short, art::ArtMethod*)
art::gc::collector::MarkSweep::VisitRoots(art::mirror::CompressedReference<art::mirror::Object>**, unsigned int, art::RootInfo const&)
art::TraceClockSource& art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination::GetOrCreateFromMap<art::TraceClockSource>(art::RuntimeArgumentMapKey<art::TraceClockSource> const&)
art::AbortState::DumpAllThreads(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Thread*) const
std::__1::__tree<art::verifier::VerifierDeps::ClassResolution, std::__1::less<art::verifier::VerifierDeps::ClassResolution>, std::__1::allocator<art::verifier::VerifierDeps::ClassResolution> >::destroy(std::__1::__tree_node<art::verifier::VerifierDeps::ClassResolution, void*>*)
art::gc::accounting::SpaceBitmap<4096u>::HeapSize() const
non-virtual thunk to art::gc::space::LargeObjectSpace::LogFragmentationAllocFailure(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, unsigned int)
art::InstructionSetFeatures::AsMips64InstructionSetFeatures() const
non-virtual thunk to art::gc::space::MemoryToolLargeObjectMapSpace::~MemoryToolLargeObjectMapSpace()
art::AotClassLinker::AotClassLinker(art::InternTable*)
art::mirror::Object::hash_code_seed
void std::__1::vector<int, std::__1::allocator<int> >::__push_back_slow_path<int>(int&&)
art::InternTable::StrongSize() const
art::WellKnownClasses::java_lang_Daemons_requestHeapTrim
art::ArtMethod::ThrowInvocationTimeError()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::IntoKey(art::RuntimeArgumentMapKey<art::ProfileSaverOptions> const&)::{lambda(art::ProfileSaverOptions&)#1}, std::__1::allocator<{lambda(art::ProfileSaverOptions&)#1}>, void (art::ProfileSaverOptions&)>::operator()(art::ProfileSaverOptions&)
void std::__1::vector<art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> >, std::__1::allocator<art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> > > >::__push_back_slow_path<art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> > >(art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> >&&)
art::FaultHandler::~FaultHandler()
_ZNSt3__16vectorINS_4pairIPKcN3art2gc5space20LargeObjectSpaceTypeEEENS_9allocatorIS8_EEE6assignIPKS8_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS8_NS_15iterator_traitsISG_E9referenceEEE5valueEvE4typeESG_SG_
void art::mirror::Object::VisitFieldsReferences<false, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor>(unsigned int, art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor const&)
art::hprof::EndianOutput::~EndianOutput()
art::DeleteJITCodeEntryForAddress(unsigned int)
std::__1::__shared_ptr_emplace<art::TraceClockSource, std::__1::allocator<art::TraceClockSource> >::__on_zero_shared()
art::ClassTable::NumNonZygoteClasses(art::ObjPtr<art::mirror::ClassLoader>) const
art::UnboxPrimitiveForField(art::ObjPtr<art::mirror::Object>, art::ObjPtr<art::mirror::Class>, art::ArtField*, art::JValue*)
art::Runtime::InitThreadGroups(art::Thread*)
std::__1::__shared_ptr_emplace<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__on_zero_shared_weak()
art::Locks::expected_mutexes_on_weak_ref_access_guard_
std::__1::vector<art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> >, std::__1::allocator<art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> > > >::insert(std::__1::__wrap_iter<art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> > const*>, art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> >&&)
art::RuntimeArgumentMap::MethodTrace
art::CheckJNI::CallByteMethodV(_JNIEnv*, _jobject*, _jmethodID*, char*)
art::DexFile::CheckMagicAndVersion(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
bool art::interpreter::DoIGetQuick<(art::Primitive::Type)2>(art::ShadowFrame&, art::Instruction const*, unsigned short)
void art::DexCacheResolvedClasses::AddClasses<std::__1::__tree_const_iterator<art::dex::TypeIndex, std::__1::__tree_node<art::dex::TypeIndex, void*>*, int> >(std::__1::__tree_const_iterator<art::dex::TypeIndex, std::__1::__tree_node<art::dex::TypeIndex, void*>*, int>, std::__1::__tree_const_iterator<art::dex::TypeIndex, std::__1::__tree_node<art::dex::TypeIndex, void*>*, int>) const
std::__1::__tree<art::ProfileCompilationInfo::ClassReference, std::__1::less<art::ProfileCompilationInfo::ClassReference>, art::ArenaAllocatorAdapter<art::ProfileCompilationInfo::ClassReference> >::destroy(std::__1::__tree_node<art::ProfileCompilationInfo::ClassReference, void*>*)
art::InternTable::WaitUntilAccessible(art::Thread*)
art::interpreter::FindNextInstructionFollowingException(art::Thread*, art::ShadowFrame&, unsigned int, art::instrumentation::Instrumentation const*)
mspace_independent_calloc
art::OatHeader::SetQuickResolutionTrampolineOffset(unsigned int)
art::jit::ScopedJitSuspend::ScopedJitSuspend()
art::RuntimeArgumentMapKey<art::InstructionSet>::~RuntimeArgumentMapKey()
art::VdexFile::Header::IsVersionValid() const
art::JNI::CallByteMethodV(_JNIEnv*, _jobject*, _jmethodID*, char*)
art::JDWP::JdwpState::SendBufferedRequest(unsigned int, std::__1::vector<iovec, std::__1::allocator<iovec> > const&)
art::verifier::BooleanType const* art::verifier::RegTypeCache::CreatePrimitiveTypeInstance<art::verifier::BooleanType>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::AllocatorTag const&)
art::gc::allocator::RosAlloc::bracketSizes
art::mirror::MethodType::VisitRoots(art::RootVisitor*)
art::x86::X86Context::SetGPR(unsigned int, unsigned int)
art::mirror::Object* art::gc::Heap::AllocLargeObject<true, art::VoidFunctor>(art::Thread*, art::ObjPtr<art::mirror::Class>*, unsigned int, art::VoidFunctor const&)
art::ThrowIncompatibleClassChangeErrorForMethodConflict(art::ArtMethod*)
art::BuildGenericJniFrameVisitor::~BuildGenericJniFrameVisitor()
art::OatFile::~OatFile()
art::ScopedCheck::CheckUtfString(char const*, bool)
art::ProfileSaver::instance_
art::detail::CmdlineParserArgumentInfo<art::ExperimentalFlags>::CompleteArgument()
art::ConditionVariable::TimedWait(art::Thread*, long long, int)
art::WellKnownClasses::java_lang_invoke_MethodHandle
art::Dbg::IsJdwpConfigured()
art::mirror::PrimitiveArray<double>::AllocateAndFill(art::Thread*, double const*, unsigned int)
art::Dbg::PostFieldModificationEvent(art::ArtMethod*, int, art::mirror::Object*, art::ArtField*, art::JValue const*)
art::Dbg::method_exit_event_ref_count_
vtable for art::verifier::ImpreciseConstLoType
unix_file::FdFile::~FdFile()
art::CodeInfo::GetOsrStackMapForDexPc(unsigned int, art::CodeInfoEncoding const&) const
art::Transaction::~Transaction()
art::gc::AllocRecordObjectMap::GetRecentAllocationSize() const
art::gc::Heap::MapAnonymousPreferredAddress(char const*, unsigned char*, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
int art::interpreter::MterpSetStatic<int, (art::Primitive::Type)5>(unsigned int, int, art::ArtMethod*, art::Thread*, void (art::ArtField::*)(art::ObjPtr<art::mirror::Object>, int))
art::verifier::UnresolvedReferenceType::CheckInvariants() const
art::mirror::Class::FindVirtualMethodForVirtualOrInterface(art::ArtMethod*, art::PointerSize)
art::verifier::MethodVerifier::CheckNotMoveExceptionOrMoveResult(unsigned short const*, int)
art::gc::collector::ConcurrentCopying::~ConcurrentCopying()
art::OatHeader::SetImagePatchDelta(int)
void std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >::__push_back_slow_path<art::Plugin>(art::Plugin&&)
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbackfail(int)
art::gc::RootMatchesObjectVisitor::~RootMatchesObjectVisitor()
art::verifier::FloatType::CreateInstance(art::mirror::Class*, art::StringPiece const&, unsigned short)
art::verifier::ImpreciseConstLoType::GetAssignmentTypeImpl() const
art::JNI::SetByteField(_JNIEnv*, _jobject*, _jfieldID*, signed char)
void art::STLDeleteValues<art::AllocationTrackingSafeMap<art::gc::space::Space*, art::gc::accounting::RememberedSet*, (art::AllocatorTag)0, std::__1::less<art::gc::space::Space*> > >(art::AllocationTrackingSafeMap<art::gc::space::Space*, art::gc::accounting::RememberedSet*, (art::AllocatorTag)0, std::__1::less<art::gc::space::Space*> >*)
art::JNI::NewObjectArray(_JNIEnv*, int, _jclass*, _jobject*)
art::JNI::CallIntMethodA(_JNIEnv*, _jobject*, _jmethodID*, jvalue*)
MterpFillArrayData
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>
art::mirror::Class::FindInterfaceMethod(art::ObjPtr<art::mirror::DexCache>, unsigned int, art::PointerSize)
art::interpreter::UnstartedRuntime::UnstartedStringToCharArray(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::VariantMapKey<unsigned int>::Clone() const
art::Dbg::GoActive()
art::DebugInstrumentationListener::DexPcMoved(art::Thread*, art::Handle<art::mirror::Object>, art::ArtMethod*, unsigned int)
art::DexFileVerifier::CheckInterAnnotationSetItem()
art::verifier::RegisterLine::MarkAllRegistersAsConflictsExcept(art::verifier::MethodVerifier*, unsigned int)
art::CheckJNI::ReleaseCharArrayElements(_JNIEnv*, _jcharArray*, unsigned short*, int)
void std::__1::vector<art::OatFile const*, std::__1::allocator<art::OatFile const*> >::__push_back_slow_path<art::OatFile const* const&>(art::OatFile const* const&)
art::jit::Jit::AddMemoryUsage(art::ArtMethod*, unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::IntoKey(art::RuntimeArgumentMapKey<art::TraceClockSource> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::TraceClockSource& ()>::__clone(std::__1::__function::__base<art::TraceClockSource&>*) const
art::DexFileVerifier::CheckPadding(unsigned int, unsigned int)
art::ClassLinker::CreateArrayClass(art::Thread*, char const*, unsigned int, art::Handle<art::mirror::ClassLoader>)
art::ProfileCompilationInfo::GetClassesAndMethods(art::DexFile const&, std::__1::set<art::dex::TypeIndex, std::__1::less<art::dex::TypeIndex>, std::__1::allocator<art::dex::TypeIndex> >*, std::__1::set<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short> >*, std::__1::set<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short> >*, std::__1::set<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short> >*) const
art::gc::space::LargeObjectMapSpace::LargeObjectMapSpace(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
vtable for art::gc::accounting::ModUnionTable
art::GetCheckJniInvokeInterface()
art::JNI::SetObjectField(_JNIEnv*, _jobject*, _jfieldID*, _jobject*)
std::__1::__deque_base<art::LockWord, std::__1::allocator<art::LockWord> >::~__deque_base()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::IntoKey(art::RuntimeArgumentMapKey<double> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, double& ()>::~__func()
art::detail::CmdlineParseArgument<art::LogVerbosity>::ParseArgumentSingle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::ClassLinker::CreateImtConflictTable(unsigned int, art::LinearAlloc*)
art::annotations::GetInnerClassFlags(art::Handle<art::mirror::Class>, unsigned int*)
art::ReferenceTable::VisitRoots(art::RootVisitor*, art::RootInfo const&)
art::SharedLibrary::SharedLibrary(_JNIEnv*, art::Thread*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, void*, bool, _jobject*, void*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >& ()>::destroy()
art::SignalCatcher::Output(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__shared_ptr_emplace<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__on_zero_shared_weak()
art::ArtMethod* art::ClassLinker::GetResolvedMethod<(art::InvokeType)4, (art::ClassLinker::ResolveMode)1>(unsigned int, art::ArtMethod*)
art::ThrowClassFormatError(art::ObjPtr<art::mirror::Class>, char const*, ...)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::IntoKey(art::RuntimeArgumentMapKey<art::ProfileSaverOptions> const&)::{lambda(art::ProfileSaverOptions&)#1}, std::__1::allocator<{lambda(art::ProfileSaverOptions&)#1}>, void (art::ProfileSaverOptions&)>::__clone() const
void art::ClassTable::VisitRoots<art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsFieldVisitor>(art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsFieldVisitor const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}, std::__1::allocator<{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}>, void (std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)>::operator()(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)
art::Dbg::FinishInvokeMethod(art::DebugInvokeReq*)
artSetCharInstanceFromCode
std::__1::__split_buffer<art::LockWord*, std::__1::allocator<art::LockWord*> >::push_front(art::LockWord*&&)
art::verifier::ImpreciseConstLoType::Dump() const
art::ExecAndReturnCode(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::OatFileAssistant::OatFileStatus()
art::mirror::PrimitiveArray<short>::GetData() const
art::JNI::SetStaticByteField(_JNIEnv*, _jclass*, _jfieldID*, signed char)
std::__1::__shared_ptr_emplace<art::gc::space::LargeObjectSpaceType, std::__1::allocator<art::gc::space::LargeObjectSpaceType> >::__on_zero_shared()
art::mirror::PrimitiveArray<unsigned char>::GetData()
artThrowNullPointerExceptionFromSignal
art::JNI::CallVoidMethodA(_JNIEnv*, _jobject*, _jmethodID*, jvalue*)
art::JDWP::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::JDWP::JdwpClassStatus const&)
art::detail::CmdlineParseArgument<art::LogVerbosity>::MaybeMatches(art::TokenRange const&)
art::ClassHierarchyAnalysis::RemoveAllDependenciesFor(art::ArtMethod*)
art::gc::space::MemMapSpace::NonGrowthLimitCapacity() const
art::instrumentation::Instrumentation::PushInstrumentationStackFrame(art::Thread*, art::mirror::Object*, art::ArtMethod*, unsigned int, bool)
art::JNI::FromReflectedField(_JNIEnv*, _jobject*)
art::StackVisitor::GetNativePcOffset() const
art::JNI::CallNonvirtualDoubleMethod(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, ...)
art::Dbg::CreateArrayObject(unsigned long long, unsigned int, unsigned long long*)
_ZN3art6detail11ToStringAnyINS_19ProfileSaverOptionsEEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKT_PNS3_9enable_ifIXsr25SupportsInsertionOperatorISA_EE5valueEvE4typeE
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::ParseStringList<(char)58>&)#1}, std::__1::allocator<{lambda(art::ParseStringList<(char)58>&)#1}>, void (art::ParseStringList<(char)58>&)>::destroy_deallocate()
art::WellKnownClasses::StringInitToStringFactory(art::ArtMethod*)
art::StringPiece::CopyToString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
art::ClassLinker::CheckProxyMethod(art::ArtMethod*, art::ArtMethod*) const
non-virtual thunk to art::gc::collector::PartialMarkSweep::~PartialMarkSweep()
non-virtual thunk to art::gc::space::RosAllocSpace::Free(art::Thread*, art::mirror::Object*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::IntoKey(art::RuntimeArgumentMapKey<art::ExperimentalFlags> const&)
art::InternTable::InternStrong(int, char const*)
art::jit::ScopedCodeCacheWrite::ScopedCodeCacheWrite(art::MemMap*, bool)
art::gc::space::LargeObjectSpace::GetObjectsAllocated()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>::__clone() const
art::MemStats::MemStats(char const*, art::ArenaAllocatorStatsImpl<false> const*, art::Arena const*, int)
art::StackVisitor::SetMethod(art::ArtMethod*)
art::gc::space::BumpPointerSpace::GetLiveBitmap() const
art::gc::IdentityMarkHeapReferenceVisitor::~IdentityMarkHeapReferenceVisitor()
bool art::interpreter::DoFilledNewArray<true, false, true>(art::Instruction const*, art::ShadowFrame const&, art::Thread*, art::JValue*)
std::__1::__shared_ptr_emplace<double, std::__1::allocator<double> >::__on_zero_shared()
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__grow_by(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
art::StackVisitor::StackVisitor(art::Thread*, art::Context*, art::StackVisitor::StackWalkKind, bool)
art::InstructionSetFeatures::AsX86InstructionSetFeatures() const
__deregister_frame_info
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::IntoKey(art::RuntimeArgumentMapKey<art::LogVerbosity> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::LogVerbosity& ()>::__clone(std::__1::__function::__base<art::LogVerbosity&>*) const
art::AotClassLinker::PerformClassVerification(art::Thread*, art::Handle<art::mirror::Class>, art::verifier::HardFailLogMode, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
_Unwind_GetCFA
art::ReferenceMapVisitor<art::RootCallbackVisitor, false>::~ReferenceMapVisitor()
art::ClassLinker::RegisterClassLoader(art::ObjPtr<art::mirror::ClassLoader>)
art::CompareModifiedUtf8ToUtf16AsCodePointValues(char const*, unsigned short const*, unsigned int)
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)6, false, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::WellKnownClasses::java_nio_DirectByteBuffer
art::OatQuickMethodHeader::OatQuickMethodHeader(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
art::OatFile::Size() const
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<art::XGcOption>(art::RuntimeArgumentMapKey<art::XGcOption> const&)
art::GetTimeoutSignal()
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)6, false, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
artReadBarrierForRootSlow
android::base::StringAppendV(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, char const*, char*)
art::mirror::EmulatedStackFrame* art::mirror::EmulatedStackFrame::CreateFromShadowFrameAndArgs<false>(art::Thread*, art::Handle<art::mirror::MethodType>, art::Handle<art::mirror::MethodType>, art::ShadowFrame const&, unsigned int, unsigned int const (&) [5])
art::ElfFileImpl<ElfTypes32>::GetSectionNameStringSection() const
art::verifier::LongLoType::IsLongLo() const
art::WellKnownClasses::dalvik_system_BaseDexClassLoader_pathList
art::OatFileManager::UnRegisterAndDeleteOatFile(art::OatFile const*)
art::ClassTable::Lookup(char const*, unsigned int)
art::annotations::GetDeclaringClass(art::Handle<art::mirror::Class>)
vtable for art::AotClassLinker
art::CumulativeLogger::~CumulativeLogger()
art::ClassHierarchyAnalysis::AddDependency(art::ArtMethod*, art::ArtMethod*, art::OatQuickMethodHeader*)
art::ClassLinker::SizeOfClassWithoutEmbeddedTables(art::DexFile const&, art::DexFile::ClassDef const&)
art::OatFileAssistant::MakeUpToDate(bool, art::ClassLoaderContext*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::MipsInstructionSetFeatures::FromAssembly()
art::gc::Heap::FinishGC(art::Thread*, art::gc::collector::GcType)
art::ScopedCheck::AbortF(char const*, ...)
void art::gc::accounting::SpaceBitmap<8u>::VisitMarkedRange<art::gc::accounting::RememberedSetObjectVisitor&>(unsigned int, unsigned int, art::gc::accounting::RememberedSetObjectVisitor&) const
art::WellKnownClasses::java_lang_Daemons_start
art::CheckJNI::GetStaticByteField(_JNIEnv*, _jclass*, _jfieldID*)
vtable for art::ClassListCreator
art::RuntimeArgumentMapKey<art::ProfileSaverOptions>::~RuntimeArgumentMapKey()
art::verifier::UndefinedType::IsUndefined() const
art::gc::collector::MarkCompact::MoveObject(art::mirror::Object*, unsigned int)
bool art::interpreter::DoIPutQuick<(art::Primitive::Type)1, false>(art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::CheckJNI::CallNonvirtualByteMethodV(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, char*)
art::WellKnownClasses::java_lang_reflect_Constructor
art::ClassLinker::ThrowEarlierClassFailure(art::ObjPtr<art::mirror::Class>, bool)
art::gc::space::RosAllocSpace::SetFootprintLimit(unsigned int)
art::StackVisitor::SetVReg(art::ArtMethod*, unsigned short, unsigned int, art::VRegKind)
art::gc::accounting::AtomicStack<art::mirror::Object>::Init()
art::verifier::RegType::IsOne() const
art::mirror::PrimitiveArray<long long>::Get(int)
art::DexFile::~DexFile()
art::detail::CmdlineParseArgument<art::gc::space::LargeObjectSpaceType>::~CmdlineParseArgument()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::Memory<1u>&)#1}, std::__1::allocator<{lambda(art::Memory<1u>&)#1}>, void (art::Memory<1u>&)>::destroy()
artThrowStringBoundsFromCode
art::BuildInternalStackTraceVisitor<true>::~BuildInternalStackTraceVisitor()
art::OatDexFile::OatDexFile(art::OatFile const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned char const*, unsigned char const*, art::LengthPrefixedArray<art::MethodBssMappingEntry> const*, unsigned int const*, unsigned char*, art::DexLayoutSections const*)
art::RuntimeArgumentMap::DumpJITInfoOnShutdown
art::ArenaPool::ArenaPool(bool, bool, char const*)
art::Barrier::Pass(art::Thread*)
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)4, false, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
std::__1::__hash_table<std::__1::__hash_value_type<art::ArtMethod*, std::__1::vector<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*>, std::__1::allocator<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*> > > >, std::__1::__unordered_map_hasher<art::ArtMethod*, std::__1::__hash_value_type<art::ArtMethod*, std::__1::vector<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*>, std::__1::allocator<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*> > > >, std::__1::hash<art::ArtMethod*>, true>, std::__1::__unordered_map_equal<art::ArtMethod*, std::__1::__hash_value_type<art::ArtMethod*, std::__1::vector<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*>, std::__1::allocator<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*> > > >, std::__1::equal_to<art::ArtMethod*>, true>, std::__1::allocator<std::__1::__hash_value_type<art::ArtMethod*, std::__1::vector<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*>, std::__1::allocator<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*> > > > > >::erase(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<art::ArtMethod*, std::__1::vector<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*>, std::__1::allocator<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*> > > >, void*>*>)
artAllocArrayFromCodeResolvedRegionTLABInstrumented
art::ThrowClassCastException(art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::Class>)
artInvokeSuperTrampolineWithAccessCheck
art::Histogram<unsigned long long>::GrowBuckets(unsigned long long)
art::ClassLoaderContext::AddInfoToContextFromClassLoader(art::ScopedObjectAccessAlreadyRunnable&, art::Handle<art::mirror::ClassLoader>, art::Handle<art::mirror::ObjectArray<art::mirror::Object> >)
art::CheckJNI::SetStaticBooleanField(_JNIEnv*, _jclass*, _jfieldID*, unsigned char)
art::ComputeModifiedUtf8Hash(char const*)
art::gc::ReferenceProcessor::BroadcastForSlowPath(art::Thread*)
GetFileDescriptor(void*)
art::gc::accounting::Bitmap::~Bitmap()
art::gc::space::FreeListSpace::Walk(void (*)(void*, void*, unsigned int, void*), void*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)
art::Roles::uninterruptible_
art::ScopedSuspendAll::ScopedSuspendAll(char const*, bool)
art::ThreadList::SuspendAllForDebugger()
art::gc::collector::GarbageCollector::SwapBitmaps()
void art::JNI::GetPrimitiveArrayRegion<_jbyteArray*, signed char, art::mirror::PrimitiveArray<signed char> >(_JNIEnv*, _jbyteArray*, int, int, signed char*)
art::instrumentation::Instrumentation::IsDeoptimizedMethod(art::ArtMethod*)
art::interpreter::SetStringInitValueToAllAliases(art::ShadowFrame*, unsigned short, art::JValue)
vtable for unix_file::FdFile
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >& ()>
art::gc::Heap::GetVerification() const
vtable for std::__1::__shared_ptr_pointer<art::RuntimeArgumentMap*, std::__1::default_delete<art::RuntimeArgumentMap>, std::__1::allocator<art::RuntimeArgumentMap> >
art::verifier::RegisterLine::MarkAllRegistersAsConflicts(art::verifier::MethodVerifier*)
art::Monitor::stack_dump_lock_profiling_threshold_
MemoryWriter::~MemoryWriter()
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)6, true, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::CodeInfo::GetRegisterMaskOf(art::CodeInfoEncoding const&, art::StackMap const&) const
MterpAddHotnessBatch
art::ObjectTryLock<art::mirror::Object>::ObjectTryLock(art::Thread*, art::Handle<art::mirror::Object>)
void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::VerifyReferenceCardVisitor, art::VoidFunctor>(art::gc::VerifyReferenceCardVisitor const&, art::VoidFunctor const&)
art::ThreadPool::GetTaskCount(art::Thread*)
art::verifier::MethodVerifier::CheckNewInstance(art::dex::TypeIndex)
art::verifier::MethodVerifier::VerifyPrimitivePut(art::verifier::RegType const&, art::verifier::RegType const&, unsigned int)
void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::gc::collector::ConcurrentCopying::RefFieldsVisitor, art::gc::collector::ConcurrentCopying::RefFieldsVisitor>(art::gc::collector::ConcurrentCopying::RefFieldsVisitor const&, art::gc::collector::ConcurrentCopying::RefFieldsVisitor const&)
art::gc::Heap::RunFinalization(_JNIEnv*, unsigned long long)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::MillisecondsToNanoseconds&)#1}, std::__1::allocator<{lambda(art::MillisecondsToNanoseconds&)#1}>, void (art::MillisecondsToNanoseconds&)>::destroy_deallocate()
art::ElfFileImpl<ElfTypes64>::GetHashBucket(unsigned int, bool*) const
art::gc::space::BumpPointerSpace::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
artAllocStringFromStringFromCodeDlMalloc
non-virtual thunk to art::gc::collector::GarbageCollector::~GarbageCollector()
art::VariantMapKey<art::BackgroundGcOption>::ValueClone(void*) const
art::mirror::PrimitiveArray<long long>::VisitRoots(art::RootVisitor*)
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<art::LogVerbosity>(art::RuntimeArgumentMapKey<art::LogVerbosity> const&)
art::ThreadList::UndoDebuggerSuspensions()
art::JDWP::Request::ReadThreadGroupId()
art::mirror::DexCache::Init(art::DexFile const*, art::ObjPtr<art::mirror::String>, std::__1::atomic<art::mirror::DexCachePair<art::mirror::String> >*, unsigned int, std::__1::atomic<art::mirror::DexCachePair<art::mirror::Class> >*, unsigned int, std::__1::atomic<art::mirror::NativeDexCachePair<art::ArtMethod> >*, unsigned int, std::__1::atomic<art::mirror::NativeDexCachePair<art::ArtField> >*, unsigned int, std::__1::atomic<art::mirror::DexCachePair<art::mirror::MethodType> >*, unsigned int, art::GcRoot<art::mirror::CallSite>*, unsigned int)
art::gc::Heap::IsLiveObjectLocked(art::ObjPtr<art::mirror::Object>, bool, bool, bool)
non-virtual thunk to art::gc::space::LargeObjectSpace::GetObjectsAllocated()
art::JDWP::JdwpNetStateBase::~JdwpNetStateBase()
art::WellKnownClasses::java_lang_RuntimeException
vtable for MemoryWriter
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::RuntimeArgumentMap::JITCompileThreshold
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, bool& ()>
MterpDoPackedSwitch
art::GetJniShortName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::RuntimeCallbacks::ClassPrepare(art::Handle<art::mirror::Class>, art::Handle<art::mirror::Class>)
art::JNI::GetBooleanField(_JNIEnv*, _jobject*, _jfieldID*)
vtable for art::ClassLinker::FindVirtualMethodHolderVisitor
art::MonitorList::BroadcastForNewMonitors()
art::mirror::ObjectArray<art::mirror::Method>::Alloc(art::Thread*, art::ObjPtr<art::mirror::Class>, int, art::gc::AllocatorType)
bool art::mirror::ObjectArray<art::mirror::Object>::CheckAssignable<(art::VerifyObjectFlags)0>(art::ObjPtr<art::mirror::Object>)
art::Thread::CleanupCpu()
vtable for ProcessWriter
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}, std::__1::allocator<{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}>, void (std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)>::__clone() const
art::mirror::Class::SetClassLoader(art::ObjPtr<art::mirror::ClassLoader>)
art::mirror::PrimitiveArray<double>::GetData()
art::mirror::StackTraceElement::SetClass(art::ObjPtr<art::mirror::Class>)
art::interpreter::UnstartedRuntime::UnstartedMethodInvoke(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::gc::Heap::~Heap()
art::Runtime::StartSignalCatcher()
_Unwind_ForcedUnwind
art::register_java_lang_Class(_JNIEnv*)
artGetByteInstanceFromCode
artAllocObjectFromCodeResolvedRegionTLAB
art::register_java_lang_Thread(_JNIEnv*)
_Unwind_GetIPInfo
android::base::EagerEvaluator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::EagerEvaluator(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
bool art::interpreter::DoFieldPut<(art::FindFieldType)1, (art::Primitive::Type)0, true, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::Mutex::ExclusiveTryLock(art::Thread*)
art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> >::BaseIterator<art::ClassTable::TableSlot, art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> > > art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> >::Find<art::ClassTable::TableSlot>(art::ClassTable::TableSlot const&)
art::InternTable::RemoveStrongFromTransaction(art::ObjPtr<art::mirror::String>)
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)4, true, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::JavaVMExt::UpdateWeakGlobal(art::Thread*, void*, art::ObjPtr<art::mirror::Object>)
ZipString::ZipString(char const*)
void art::gc::accounting::SpaceBitmap<8u>::VisitMarkedRange<art::gc::VerifyObjectVisitor&>(unsigned int, unsigned int, art::gc::VerifyObjectVisitor&) const
art::ElfFileImpl<ElfTypes64>::Open(unix_file::FdFile*, bool, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, unsigned char*)
bool art::DoInvokePolymorphic<false>(art::Thread*, art::ArtMethod*, art::ShadowFrame&, art::Handle<art::mirror::MethodHandle>, art::Handle<art::mirror::MethodType>, unsigned int const (&) [5], unsigned int, art::JValue*)
art::CheckJNI::ReleaseBooleanArrayElements(_JNIEnv*, _jbooleanArray*, unsigned char*, int)
art::JavaVMExt::AddGlobalRef(art::Thread*, art::ObjPtr<art::mirror::Object>)
void std::__1::vector<art::Thread*, std::__1::allocator<art::Thread*> >::__push_back_slow_path<art::Thread* const&>(art::Thread* const&)
art::OatHeader::GetQuickToInterpreterBridgeOffset() const
art::RuntimeArgumentMap::Fingerprint
art::VariantMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::~VariantMapKey()
art::ClassHierarchyAnalysis::RemoveDependentsWithMethodHeaders(std::__1::unordered_set<art::OatQuickMethodHeader*, std::__1::hash<art::OatQuickMethodHeader*>, std::__1::equal_to<art::OatQuickMethodHeader*>, std::__1::allocator<art::OatQuickMethodHeader*> > const&)
vtable for art::VariantMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >
art::verifier::RegType::IsInstantiableTypes() const
art::ThreadPool::Wait(art::Thread*, bool, bool)
art::gc::allocator::RosAlloc::DumpStats(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>
art::ArenaBitVector::~ArenaBitVector()
art::Locks::IsExpectedOnWeakRefAccess(art::BaseMutex*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(unsigned int&)#1}, std::__1::allocator<{lambda(unsigned int&)#1}>, void (unsigned int&)>::~__func()
art::DexFile::FindTypeId(art::dex::StringIndex) const
void std::__1::vector<art::TypeIndexInfo, std::__1::allocator<art::TypeIndexInfo> >::__push_back_slow_path<art::TypeIndexInfo>(art::TypeIndexInfo&&)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1024u> > const&)::{lambda(art::Memory<1024u>&)#1}, std::__1::allocator<{lambda(art::Memory<1024u>&)#1}>, void (art::Memory<1024u>&)>
art::VariantMapKey<art::Unit>::Clone() const
mspace_inspect_all
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::IntoKey(art::RuntimeArgumentMapKey<art::gc::space::LargeObjectSpaceType> const&)::{lambda(art::gc::space::LargeObjectSpaceType&)#1}, std::__1::allocator<{lambda(art::gc::space::LargeObjectSpaceType&)#1}>, void (art::gc::space::LargeObjectSpaceType&)>::~__func()
art::Libraries::UnloadNativeLibraries()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::IntoKey(art::RuntimeArgumentMapKey<bool> const&)::{lambda(bool&)#1}, std::__1::allocator<{lambda(bool&)#1}>, void (bool&)>::__clone() const
art::ClassLinker::LinkFields(art::Thread*, art::Handle<art::mirror::Class>, bool, unsigned int*)
non-virtual thunk to art::gc::collector::SemiSpace::MarkHeapReference(art::mirror::HeapReference<art::mirror::Object>*, bool)
art::TypeLookupTable::Open(unsigned char const*, unsigned char const*, unsigned int)
art::gc::collector::ConcurrentCopying::IsNullOrMarkedHeapReference(art::mirror::HeapReference<art::mirror::Object>*, bool)
art::arm::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::arm::Register const&)
art::DexFile::GetCodeItemSize(art::DexFile::CodeItem const&)
art::gc::accounting::CardTable::kCardShift
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ExperimentalFlags& ()>::__clone(std::__1::__function::__base<art::ExperimentalFlags&>*) const
art::InstructionSetFeatures::AsArmInstructionSetFeatures() const
art::instrumentation::InstrumentationListener::FieldWritten(art::Thread*, art::Handle<art::mirror::Object>, art::ArtMethod*, unsigned int, art::ArtField*, art::Handle<art::mirror::Object>)
artQuickGenericJniEndTrampoline
art::ClassTable::ClassDescriptorHashEquals::operator()(art::ClassTable::TableSlot const&, std::__1::pair<char const*, unsigned int> const&) const
void art::verifier::MethodVerifier::VerifyQuickFieldAccess<(art::verifier::MethodVerifier::FieldAccessType)1>(art::Instruction const*, art::verifier::RegType const&, bool)
art::CheckJNI::GetFloatField(_JNIEnv*, _jobject*, _jfieldID*)
art::gc::space::BumpPointerSpace::GetBytesAllocated()
art::gc::space::Space::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::ObjectLock<art::mirror::Object>::Notify()
art::DebugInstrumentationListener::InvokeVirtualOrInterface(art::Thread*, art::Handle<art::mirror::Object>, art::ArtMethod*, unsigned int, art::ArtMethod*)
art::Dbg::gRegistry
art::VariantMapKey<void (*)()>::ValueClone(void*) const
art::gc::Heap::RemoveRememberedSet(art::gc::space::Space*)
art::mirror::MethodType::Create(art::Thread*, art::Handle<art::mirror::Class>, art::Handle<art::mirror::ObjectArray<art::mirror::Class> >)
art::DebugInvokeReq::VisitRoots(art::RootVisitor*, art::RootInfo const&)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::IntoKey(art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds> const&)
art::verifier::MethodVerifier::FindLocksAtDexPc()
art::InstructionSetFeatures::FromHwcap()
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::MutatorMutex const&)
vtable for art::RuntimeArgumentMapKey<art::CompilerCallbacks*>
art::BitVector::~BitVector()
art::gc::ZygoteCompactingCollector::BuildBins(art::gc::space::ContinuousSpace*)
std::__1::basic_ostream<char, std::__1::char_traits<char> >::put(char)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::CreateTypedBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >()
vtable for art::RuntimeArgumentMapKey<art::verifier::VerifyMode>
art::Dbg::instrumentation_events_
vtable for std::__1::basic_filebuf<char, std::__1::char_traits<char> >
art::g_noop_allocator
art::mirror::Class::DescriptorEquals(char const*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::XGcOption> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::XGcOption& ()>::destroy_deallocate()
art::gc::AllocRecordObjectMap::SetProperties()
art::gc::collector::MarkSweep::DelayReferenceReferent(art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::Reference>)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::BackgroundGcOption& ()>::destroy_deallocate()
art::ArenaAllocator::AllocWithMemoryToolAlign16(unsigned int, art::ArenaAllocKind)
art::Instruction::DumpHexLE(unsigned int) const
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::TraceClockSource& ()>
art::Plugin::Plugin(art::Plugin const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::IntoKey(art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds> const&)::{lambda(art::MillisecondsToNanoseconds&)#1}, std::__1::allocator<{lambda(art::MillisecondsToNanoseconds&)#1}>, void (art::MillisecondsToNanoseconds&)>::operator()(art::MillisecondsToNanoseconds&)
art::CheckJNI::CallLongMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)
void art::mirror::DexCache::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor>(art::ObjPtr<art::mirror::Class>, art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor const&)
art::JNI::GetLongArrayElements(_JNIEnv*, _jlongArray*, unsigned char*)
art::ClassTable::ClassDescriptorHashEquals::operator()(std::__1::pair<char const*, unsigned int> const&) const
art::instrumentation::Instrumentation::EnableMethodTracing(char const*, bool)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ExperimentalFlags& ()>::destroy_deallocate()
art::Locks::thread_exit_cond_
deflateBound
art::Plugin::Load(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
artDeliverPendingExceptionFromCode
std::__1::function<void (art::gc::space::LargeObjectSpaceType&)>::swap(std::__1::function<void (art::gc::space::LargeObjectSpaceType&)>&)
std::__1::basic_filebuf<char, std::__1::char_traits<char> >::overflow(int)
mspace_calloc
void art::mirror::DexCache::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::Verification::BFSFindReachable>(art::ObjPtr<art::mirror::Class>, art::gc::Verification::BFSFindReachable const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, double& ()>::destroy()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::ExperimentalFlags&)#1}, std::__1::allocator<{lambda(art::ExperimentalFlags&)#1}>, void (art::ExperimentalFlags&)>::__clone() const
art::RuntimeArgumentMapKey<bool>::~RuntimeArgumentMapKey()
art::InstructionSetAbort(art::InstructionSet)
vtable for art::gc::space::MallocSpace
art::detail::CmdlineParserArgumentInfo<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::CmdlineParserArgumentInfo(art::detail::CmdlineParserArgumentInfo<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >&&)
void std::__1::vector<art::BaseMutex*, std::__1::allocator<art::BaseMutex*> >::__push_back_slow_path<art::BaseMutex* const&>(art::BaseMutex* const&)
art::Thread::RemoveFromThreadGroup(art::ScopedObjectAccessAlreadyRunnable&)
artAllocObjectFromCodeInitializedBumpPointer
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(unsigned int&)#1}, std::__1::allocator<{lambda(unsigned int&)#1}>, void (unsigned int&)>::operator()(unsigned int&)
art::JNI::ReleaseCharArrayElements(_JNIEnv*, _jcharArray*, unsigned short*, int)
art::verifier::ReferenceType::HasClassVirtual() const
art::RuntimeArgumentMap::JITWarmupThreshold
vtable for art::VariantMapKey<art::TraceClockSource>
art::OatFileAssistant::LoadDexFiles(art::OatFile const&, char const*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoKey(art::RuntimeArgumentMapKey<art::Unit> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>::operator()()
artAllocObjectFromCodeResolvedRosAlloc
art::ProfileCompilationInfo::GetClassDescriptors(std::__1::vector<art::DexFile const*, std::__1::allocator<art::DexFile const*> > const&)
art::Thread::NumberOfHeldMutexes() const
std::__1::vector<art::TimingLogger::TimingData::CalculatedDataPoint, std::__1::allocator<art::TimingLogger::TimingData::CalculatedDataPoint> >::__append(unsigned int)
art::Runtime::DumpForSigQuit(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::verifier::RegType::IsJavaLangObjectArray() const
art::CheckJNI::NewWeakGlobalRef(_JNIEnv*, _jobject*)
art::gc::ScopedGCCriticalSection::~ScopedGCCriticalSection()
non-virtual thunk to art::gc::space::RegionSpace::Free(art::Thread*, art::mirror::Object*)
art::mirror::Throwable::ResetClass()
art::gc::accounting::ModUnionTableReferenceCache::ContainsCardFor(unsigned int)
non-virtual thunk to art::gc::space::MallocSpace::~MallocSpace()
artAllocObjectFromCodeInitializedRegionInstrumented
art::verifier::RegType::IsUnresolvedAndUninitializedReference() const
art::ThreadList::SuspendAllDaemonThreadsForShutdown()
art::instrumentation::Instrumentation::NeedDebugVersionFor(art::ArtMethod*) const
art::verifier::ConflictType::Destroy()
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Thread const&)
art::gc::allocator::RosAlloc::LogFragmentationAllocFailure(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, unsigned int)
art::OatHeader::GetInterpreterToInterpreterBridge() const
art::ElfFileImpl<ElfTypes64>::FindDynamicByType(int) const
art::mirror::MethodType::ResetClass()
vtable for art::VisitClassLoaderClassesVisitor
art::gc::allocator::RosAlloc::~RosAlloc()
art::interpreter::UnstartedRuntime::UnstartedCharacterToLowerCase(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
artMterpAsmAltInstructionStart
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::IntoKey(art::RuntimeArgumentMapKey<double> const&)::{lambda(double&)#1}, std::__1::allocator<{lambda(double&)#1}>, void (double&)>::destroy_deallocate()
art::ClassLinker::OpenImageDexFiles(art::gc::space::ImageSpace*, std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::verifier::VerifyMode& art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination::GetOrCreateFromMap<art::verifier::VerifyMode>(art::RuntimeArgumentMapKey<art::verifier::VerifyMode> const&)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::ImageHeader::ImageRoot const&)
art::WellKnownClasses::java_lang_Thread_run
art::CheckJNI::GetStaticFloatField(_JNIEnv*, _jclass*, _jfieldID*)
art::InternTable::InsertWeak(art::ObjPtr<art::mirror::String>)
art::LockedFile::ReleaseLock()
non-virtual thunk to art::gc::ZygoteCompactingCollector::~ZygoteCompactingCollector()
art::gc::space::RegionSpace::Clear()
art::mirror::String::ToCharArray(art::Thread*)
art::QuickExceptionHandler::FindCatch(art::ObjPtr<art::mirror::Throwable>)
art::ObjectTryLock<art::mirror::Class>::Acquired() const
artGetByteStaticFromCompiledCode
art::ProfileCompilationInfo::AddInlineCacheToBuffer(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >*, art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::__1::less<unsigned short>, art::ArenaAllocatorAdapter<std::__1::pair<unsigned short const, art::ProfileCompilationInfo::DexPcData> > > const&)
zcalloc
art::gc::VerifyReferenceVisitor::~VerifyReferenceVisitor()
art::CheckJNI::IsAssignableFrom(_JNIEnv*, _jclass*, _jclass*)
art::JNI::CallBooleanMethodV(_JNIEnv*, _jobject*, _jmethodID*, char*)
art::RuntimeArgumentMap::StackDumpLockProfThreshold
art::mirror::PrimitiveArray<short>::Set(int, short)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::IntoKey(art::RuntimeArgumentMapKey<art::gc::space::LargeObjectSpaceType> const&)::{lambda(art::gc::space::LargeObjectSpaceType&)#1}, std::__1::allocator<{lambda(art::gc::space::LargeObjectSpaceType&)#1}>, void (art::gc::space::LargeObjectSpaceType&)>
art::ScopedCheck::CheckReflectedField(art::ScopedObjectAccess&, _jobject*)
art::CheckJNI::GetSuperclass(_JNIEnv*, _jclass*)
art::ClassLinker::DeleteClassLoader(art::Thread*, art::ClassLinker::ClassLoaderData const&)
std::__1::unordered_map<unsigned int, art::JITCodeEntry*, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, art::JITCodeEntry*> > >::~unordered_map()
art::JNI::SetIntArrayRegion(_JNIEnv*, _jintArray*, int, int, int const*)
std::__1::__shared_ptr_pointer<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination*, std::__1::default_delete<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>, std::__1::allocator<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination> >::~__shared_ptr_pointer()
virtual thunk to std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()
art::AbortState::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::verifier::UnresolvedType::~UnresolvedType()
non-virtual thunk to art::gc::space::MemoryToolMallocSpace<art::gc::space::DlMallocSpace, 8u, true, false>::Free(art::Thread*, art::mirror::Object*)
std::__1::__tree<std::__1::unique_ptr<art::OatFile const, std::__1::default_delete<art::OatFile const> >, std::__1::less<std::__1::unique_ptr<art::OatFile const, std::__1::default_delete<art::OatFile const> > >, std::__1::allocator<std::__1::unique_ptr<art::OatFile const, std::__1::default_delete<art::OatFile const> > > >::destroy(std::__1::__tree_node<std::__1::unique_ptr<art::OatFile const, std::__1::default_delete<art::OatFile const> >, void*>*)
art::ClassHierarchyAnalysis::CheckVirtualMethodSingleImplementationInfo(art::Handle<art::mirror::Class>, art::ArtMethod*, art::ArtMethod*, std::__1::unordered_set<art::ArtMethod*, std::__1::hash<art::ArtMethod*>, std::__1::equal_to<art::ArtMethod*>, std::__1::allocator<art::ArtMethod*> >&, art::PointerSize)
non-virtual thunk to art::gc::space::ZygoteSpace::FreeList(art::Thread*, unsigned int, art::mirror::Object**)
art::SetQuickAllocEntryPoints_region(art::QuickEntryPoints*, bool)
art::gc::ReferenceProcessor::ReferenceProcessor()
non-virtual thunk to art::gc::space::RosAllocSpace::LogFragmentationAllocFailure(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, unsigned int)
unsigned long long art::ObjectRegistry::InternalAdd<art::mirror::Class>(art::Handle<art::mirror::Class>)
art::ClassLinker::FinishInit(art::Thread*)
art::Histogram<unsigned long long>::Histogram(char const*, unsigned long long, unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >& ()>::destroy_deallocate()
art::verifier::PreciseConstHiType::~PreciseConstHiType()
non-virtual thunk to art::gc::space::RosAllocSpace::GetBytesAllocated()
void art::mirror::Class::VisitNativeRoots<(art::ReadBarrierOption)0, art::mirror::CopyReferenceFieldsWithReadBarrierVisitor const>(art::mirror::CopyReferenceFieldsWithReadBarrierVisitor const&, art::PointerSize)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::JDWP::JdwpOptions&)#1}, std::__1::allocator<{lambda(art::JDWP::JdwpOptions&)#1}>, void (art::JDWP::JdwpOptions&)>::~__func()
void std::__1::vector<std::__1::unique_ptr<char [], std::__1::default_delete<char []> >, std::__1::allocator<std::__1::unique_ptr<char [], std::__1::default_delete<char []> > > >::__emplace_back_slow_path<char*&>(char*&)
art::WellKnownClasses::dalvik_system_DexFile_fileName
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoIgnore()
artAllocArrayFromCodeResolvedRosAllocInstrumented
art::CheckJNI::SetLongField(_JNIEnv*, _jobject*, _jfieldID*, long long)
art::detail::CmdlineParseArgument<art::verifier::VerifyMode>::GetTypeName() const
art::JNI::GetStringChars(_JNIEnv*, _jstring*, unsigned char*)
art::ClassLinker::ClassTableForClassLoader(art::ObjPtr<art::mirror::ClassLoader>)
art::GetCallingClass(art::Thread*, unsigned int)
art::interpreter::UnstartedRuntime::UnstartedMathFloor(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::mirror::EmulatedStackFrame::VisitRoots(art::RootVisitor*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::IntoKey(art::RuntimeArgumentMapKey<art::gc::space::LargeObjectSpaceType> const&)::{lambda(art::gc::space::LargeObjectSpaceType&)#1}, std::__1::allocator<{lambda(art::gc::space::LargeObjectSpaceType&)#1}>, void (art::gc::space::LargeObjectSpaceType&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::gc::space::LargeObjectSpaceType&)#1}> >*) const
MterpConstClass
art::ProfileCompilationInfo::LoadInternal(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoIgnore()::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>
std::__1::__tree_node_base<void*>*& std::__1::__tree<art::DexCacheResolvedClasses, std::__1::less<art::DexCacheResolvedClasses>, std::__1::allocator<art::DexCacheResolvedClasses> >::__find_equal<art::DexCacheResolvedClasses>(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, art::DexCacheResolvedClasses const&)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoIgnore()::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>
std::__1::__function::__func<void (*)(char const*), std::__1::allocator<void (*)(char const*)>, void (char const*)>::__clone() const
art::ProfileCompilationInfo::GetMethodHotness(art::MethodReference const&) const
art::BitVector::BitVector(art::BitVector const&, bool, art::Allocator*)
art::StackDumpVisitor::VisitFrame()
art::verifier::UnresolvedReferenceType::~UnresolvedReferenceType()
art::interpreter::UnstartedRuntime::UnstartedJNIVMStackGetStackClass2(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
art::hprof::Hprof::DumpFakeObjectArray(art::mirror::Object*, std::__1::set<art::mirror::Object*, std::__1::less<art::mirror::Object*>, std::__1::allocator<art::mirror::Object*> > const&)
art::detail::CmdlineParseArgument<art::Memory<1u> >::GetTypeName() const
std::__1::function<void (art::LogVerbosity&)>::swap(std::__1::function<void (art::LogVerbosity&)>&)
art::ThreadList::GetLockOwner()
art::Thread::CreatePeer(char const*, bool, _jobject*)
art::gc::accounting::SpaceBitmap<8u>::CopyFrom(art::gc::accounting::SpaceBitmap<8u>*)
art::VariantMapKey<art::MillisecondsToNanoseconds>::ValueClone(void*) const
art::StackVisitor::DescribeStack(art::Thread*)
deflateEnd
art::OatHeader::SetOatDexFilesOffset(unsigned int)
art::Thread::ThrowNewExceptionF(char const*, char const*, ...)
vtable for art::gc::Heap::HeapTrimTask
art::RuntimeArgumentMapKey<unsigned int>::~RuntimeArgumentMapKey()
vtable for art::gc::collector::MarkSweep
vtable for art::gc::collector::MarkSweep::CardScanTask
art::StackOverflowHandler::~StackOverflowHandler()
__register_frame_info_table
std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::overflow(int)
art::ThrowRuntimeException(char const*, ...)
art::mirror::Array::CreateMultiArray(art::Thread*, art::Handle<art::mirror::Class>, art::Handle<art::mirror::PrimitiveArray<int> >)
vtable for art::VariantMapKey<double>
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::IntoKey(art::RuntimeArgumentMapKey<art::ProfileSaverOptions> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ProfileSaverOptions& ()>::__clone() const
art::interpreter::UnstartedRuntime::UnstartedMemoryPeekLong(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::mirror::PrimitiveArray<signed char>::array_class_
art::Dbg::SuspendVM()
art::Dbg::ToFieldId(art::ArtField const*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::IntoKey(art::RuntimeArgumentMapKey<art::gc::space::LargeObjectSpaceType> const&)::{lambda(art::gc::space::LargeObjectSpaceType&)#1}, std::__1::allocator<{lambda(art::gc::space::LargeObjectSpaceType&)#1}>, void (art::gc::space::LargeObjectSpaceType&)>::__clone() const
art::CheckJNI::CallNonvirtualFloatMethodV(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, char*)
art::gc::collector::MarkCompact::VisitRoots(art::mirror::Object***, unsigned int, art::RootInfo const&)
vtable for art::VariantMapKey<void (*)(int)>
art::ClassLinker::EnsureInitialized(art::Thread*, art::Handle<art::mirror::Class>, bool, bool)
art::ElfFileImpl<ElfTypes32>::ElfFileImpl(unix_file::FdFile*, bool, bool, unsigned char*)
art::CodeInfo::GetDexRegisterMapAtDepth(unsigned char, art::InlineInfo, art::CodeInfoEncoding const&, unsigned int) const
art::WellKnownClasses::java_lang_reflect_Proxy_h
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1u> > const&)::{lambda(art::Memory<1u>&)#1}, std::__1::allocator<{lambda(art::Memory<1u>&)#1}>, void (art::Memory<1u>&)>::destroy_deallocate()
art::VariantMapKey<bool (*)()>::ValueClone(void*) const
art::JDWP::JdwpAdbState::ReceiveClientFd()
art::verifier::BooleanType::~BooleanType()
art::OatHeader::GetQuickImtConflictTrampoline() const
art::gc::accounting::SpaceBitmap<4096u>::ComputeBitmapSize(unsigned long long)
ExtractToMemory(void*, ZipEntry*, unsigned char*, unsigned int)
non-virtual thunk to art::gc::space::DlMallocSpace::~DlMallocSpace()
art::JNI::SetLongArrayRegion(_JNIEnv*, _jlongArray*, int, int, long long const*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoIgnore()::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>::destroy()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::XGcOption> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::XGcOption& ()>::operator()()
vtable for std::__1::__shared_ptr_emplace<art::gc::space::LargeObjectSpaceType, std::__1::allocator<art::gc::space::LargeObjectSpaceType> >
art::MemMapArena::~MemMapArena()
art::mirror::Class::FindInstanceField(art::ObjPtr<art::mirror::DexCache>, unsigned int)
art::ThreadList::DumpUnattachedThreads(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bool)
art::verifier::RegType::IsDoubleLo() const
art::Dbg::OutputDeclaredInterfaces(unsigned long long, art::JDWP::ExpandBuf*)
art::gc::accounting::ModUnionTableCardCache::ClearTable()
art::ArtMethod* art::FindMethodFromCode<(art::InvokeType)3, true>(unsigned int, art::ObjPtr<art::mirror::Object>*, art::ArtMethod*, art::Thread*)
std::__1::function<art::verifier::VerifyMode& ()>::swap(std::__1::function<art::verifier::VerifyMode& ()>&)
art::ObjectLock<art::mirror::Class>::WaitIgnoringInterrupts()
artAllocObjectFromCodeInitializedDlMallocInstrumented
void std::__1::vector<art::ClassLoaderContext::ClassLoaderInfo, std::__1::allocator<art::ClassLoaderContext::ClassLoaderInfo> >::__push_back_slow_path<art::ClassLoaderContext::ClassLoaderInfo>(art::ClassLoaderContext::ClassLoaderInfo&&)
art::gc::space::ContinuousSpace::Capacity() const
art::gc::space::MemoryToolLargeObjectMapSpace::IsZygoteLargeObject(art::Thread*, art::mirror::Object*) const
art::OatHeader::KeyHasValue(char const*, char const*, unsigned int) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(bool&)#1}, std::__1::allocator<{lambda(bool&)#1}>, void (bool&)>::destroy()
art::gc::collector::Iteration::Iteration()
art::ElfFile::FindSymbolAddress(unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
art::gc::Heap::HeapTrimTask::~HeapTrimTask()
vtable for art::detail::CmdlineParseArgument<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >
adler32_combine
art::DebugInstrumentationListener::MethodEntered(art::Thread*, art::Handle<art::mirror::Object>, art::ArtMethod*, unsigned int)
art::mirror::Class::GetDirectInterfaceTypeIdx(unsigned int)
art::Thread::DumpStack(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bool, BacktraceMap*, bool) const
art::CheckJNI::CallStaticLongMethod(_JNIEnv*, _jclass*, _jmethodID*, ...)
art::ElfFile::HasSection(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
art::RuntimeArgumentMap::HeapMinFree
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf64_Sym*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf64_Sym*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf64_Sym*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf64_Sym*>, void*>*)
MterpIputObjectQuick
art::DexFileVerifier::CheckHeader()
MappedZipFile::GetBasePtr() const
art::gc::space::RegionSpace::Region::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::Dbg::DumpRecentAllocations()
signed char* art::JNI::GetPrimitiveArray<_jbyteArray*, signed char, art::mirror::PrimitiveArray<signed char> >(_JNIEnv*, _jbyteArray*, unsigned char*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::JDWP::JdwpOptions& ()>::__clone(std::__1::__function::__base<art::JDWP::JdwpOptions&>*) const
art::OatFileManager::~OatFileManager()
art::ClassLinker::DecodeDexCache(art::Thread*, art::ClassLinker::DexCacheData const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1024u>& ()>::__clone(std::__1::__function::__base<art::Memory<1024u>&>*) const
art::BaseMutex::~BaseMutex()
art::CheckJNI::CallStaticIntMethod(_JNIEnv*, _jclass*, _jmethodID*, ...)
int art::interpreter::MterpSetStatic<unsigned char, (art::Primitive::Type)1>(unsigned int, unsigned char, art::ArtMethod*, art::Thread*, void (art::ArtField::*)(art::ObjPtr<art::mirror::Object>, unsigned char))
art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::~RuntimeArgumentMapKey()
art::gc::space::DlMallocSpace::GetObjectsAllocated()
bool art::interpreter::DoFieldGet<(art::FindFieldType)6, (art::Primitive::Type)4, true>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::jit::MarkCodeClosure::Run(art::Thread*)
art::dex::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::dex::StringIndex const&)
art::gc::accounting::MemoryRangeBitmap<1024u>::AtomicTestAndSet(unsigned int)
art::JNI::CallDoubleMethodA(_JNIEnv*, _jobject*, _jmethodID*, jvalue*)
art::mirror::Class::PrettyClassAndClassLoader()
art::OatHeader::GetValidationErrorMessage() const
art::gc::collector::ConcurrentCopying::GetAllocationStack()
art::WellKnownClasses::java_lang_Character_valueOf
art::OatFileAssistant::OatFileInfo::OatFileInfo(art::OatFileAssistant*, bool)
void std::__1::vector<std::__1::pair<unsigned int, _jobject*>, std::__1::allocator<std::__1::pair<unsigned int, _jobject*> > >::__push_back_slow_path<std::__1::pair<unsigned int, _jobject*> >(std::__1::pair<unsigned int, _jobject*>&&)
art::detail::CmdlineParseArgument<art::ExperimentalFlags>::GetNumTokens() const
art::verifier::LongLoType::Destroy()
art::jit::JitCodeCache::DoneCompilerUse(art::ArtMethod*, art::Thread*)
art::ElfFileImpl<ElfTypes64>::Begin() const
art::mirror::MethodHandleImpl::StaticClass()
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool> art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::CreateTypedBuilder<bool>()
art::EntrypointRequiresStackMap(art::QuickEntrypointEnum)
art::gc::accounting::RememberedSet::AssertAllDirtyCardsAreWithinSpace() const
art::ElfFileImpl<ElfTypes64>::GetRelNum(Elf64_Shdr&) const
art::JDWP::JdwpNetStateBase::MakePipe()
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::Memory<1024u>&)#1}, std::__1::allocator<{lambda(art::Memory<1024u>&)#1}>, void (art::Memory<1024u>&)>
art::SetQuickAllocEntryPointsInstrumented(bool)
art::ImageHeader::kImageMagic
std::__1::__function::__func<android::base::LogdLogger, std::__1::allocator<android::base::LogdLogger>, void (android::base::LogId, android::base::LogSeverity, char const*, char const*, unsigned int, char const*)>::__clone() const
art::ClassLoaderContext::GetClassLoaderClass(art::ClassLoaderContext::ClassLoaderType)
art::InternTable::Table::Remove(art::ObjPtr<art::mirror::String>)
art::InternTable::StringHashEquals::operator()(art::GcRoot<art::mirror::String> const&, art::InternTable::Utf8String const&) const
art::ObjPtr<art::mirror::Method> art::mirror::Class::GetDeclaredMethodInternal<(art::PointerSize)4, true>(art::Thread*, art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::String>, art::ObjPtr<art::mirror::ObjectArray<art::mirror::Class> >)
art::Trace::FreeStackTrace(std::__1::vector<art::ArtMethod*, std::__1::allocator<art::ArtMethod*> >*)
art::Dbg::ResumeVM()
art::jit::JitCodeCache::AllocateCode(unsigned int)
std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::reserve(unsigned int)
art::Mutex::~Mutex()
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > art::gc::allocator::RosAlloc::Run::FreeListToStr<false>(art::gc::allocator::RosAlloc::SlotFreeList<false>*)
art::Runtime::DumpLockHolders(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::verifier::LongHiType::IsLongHi() const
vtable for art::verifier::Cat1Type
art::Dbg::GetTypeTag(art::ObjPtr<art::mirror::Class>)
art::interpreter::UnstartedRuntime::UnstartedJNIMathExp(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
art::Dbg::exception_catch_event_ref_count_
art::gc::accounting::EmptyMarkObjectVisitor::MarkHeapReference(art::mirror::HeapReference<art::mirror::Object>*, bool)
art::StackOverflowHandler::StackOverflowHandler(art::FaultManager*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, unsigned int& ()>::~__func()
std::__1::basic_ifstream<char, std::__1::char_traits<char> >::~basic_ifstream()
art::ClassLinker::ResolveMethodHandleForMethod(art::Thread*, art::DexFile const*, art::DexFile::MethodHandleItem const&, art::ArtMethod*)
art::instrumentation::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::instrumentation::Instrumentation::InstrumentationLevel const&)
art::JDWP::JdwpState::~JdwpState()
art::CodeInfo::GetCatchStackMapForDexPc(unsigned int, art::CodeInfoEncoding const&) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>::__clone(std::__1::__function::__base<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&>*) const
art::verifier::VerifierDeps::Encode(std::__1::vector<art::DexFile const*, std::__1::allocator<art::DexFile const*> > const&, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >*) const
art::Mips64InstructionSetFeatures::Equals(art::InstructionSetFeatures const*) const
artGet64StaticFromCode
art::Locks::Init()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(double&)#1}, std::__1::allocator<{lambda(double&)#1}>, void (double&)>::~__func()
art::CheckJNI::NewCharArray(_JNIEnv*, int)
art::Thread::~Thread()
android::base::LogMessage::LogMessage(char const*, unsigned int, android::base::LogId, android::base::LogSeverity, int)
operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, jobjectRefType const&)
vtable for art::verifier::UnresolvedType
art::InstructionSetFeatures::FindVariantInArray(char const* const*, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::gc::collector::GarbageCollector::RegisterPause(unsigned long long)
art::CodeInfo::GetStackMapForDexPc(unsigned int, art::CodeInfoEncoding const&) const
art::IsValidPartOfMemberNameUtf8Slow(char const**)
art::dex::tracking::DexFileTrackingRegistrar::SetAllStringDataRegistration(bool)
art::ArmInstructionSetFeatures::~ArmInstructionSetFeatures()
void art::mirror::Object::VisitFieldsReferences<false, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::mirror::CopyReferenceFieldsWithReadBarrierVisitor>(unsigned int, art::mirror::CopyReferenceFieldsWithReadBarrierVisitor const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::XGcOption& ()>::~__func()
art::hprof::Hprof::~Hprof()
art::RuntimeArgumentMap::JITCodeCacheInitialCapacity
art::ObjectLock<art::mirror::ClassExt>::ObjectLock(art::Thread*, art::Handle<art::mirror::ClassExt>)
artQuickGetProxyThisObject
art::Transaction::ObjectLog::LogByteValue(art::MemberOffset, signed char, bool)
art::ObjectTryLock<art::mirror::Object>::~ObjectTryLock()
art::ClassLinker::AllocStackTraceElementArray(art::Thread*, unsigned int)
art::instrumentation::Instrumentation::UpdateMethodsCodeForJavaDebuggable(art::ArtMethod*, void const*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::IntoKey(art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::MillisecondsToNanoseconds& ()>::__clone() const
art::BitVector::Copy(art::BitVector const*)
art::gc::Heap::AssertThreadLocalBuffersAreRevoked(art::Thread*)
void art::mirror::Executable::SetArtMethod<false>(art::ArtMethod*)
art::ComputeGenericJniFrameSize::WalkHeader(art::BuildNativeCallFrameStateMachine<art::ComputeNativeCallFrameSize>*)
art::ti::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::ti::Agent const&)
art::verifier::MethodVerifier::CheckSignaturePolymorphicReceiver(art::Instruction const*)
art::hprof::EndianOutput::UpdateU4(unsigned int, unsigned int)
art::mirror::String::ResetClass()
art::gc::collector::ConcurrentCopying::ThreadFlipVisitor::~ThreadFlipVisitor()
art::instrumentation::Instrumentation::PopInstrumentationStackFrame(art::Thread*, unsigned int*, unsigned long long*, unsigned long long*)
art::CompilerFilter::IsAnyCompilationEnabled(art::CompilerFilter::Filter)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >& ()>::~__func()
art::Instruction::VRegC() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)::{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}, std::__1::allocator<{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}>, void (std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)>::__clone() const
art::gc::collector::MarkSweep::FindDefaultSpaceBitmap()
art::ScopedDebuggerThreadSuspension::ScopedDebuggerThreadSuspension(art::Thread*, unsigned long long)
art::IndirectReferenceTable::Resize(unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::jit::JitCodeCache::ClearData(art::Thread*, unsigned char*, unsigned char*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption> art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::CreateTypedBuilder<art::XGcOption>()
art::mirror::ObjectArray<art::mirror::Object>::CopyOf(art::Thread*, int)
art::OatFileManager::RegisterOatFile(std::__1::unique_ptr<art::OatFile const, std::__1::default_delete<art::OatFile const> >)
art::StringPiece::compare(art::StringPiece const&) const
art::gc::collector::MarkCompact::ResizeMarkStack(unsigned int)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::ProcessState const&)
art::JNI::CallStaticCharMethodA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
art::VariantMapKey<int (*)(__sFILE*, char const*, char*)>::~VariantMapKey()
art::MoveClassTableToPreZygoteVisitor::Visit(art::ObjPtr<art::mirror::ClassLoader>)
art::ProfileSaver::WakeUpSaver()
art::hprof::EndianOutput::StartNewRecord(unsigned char, unsigned int)
art::GetCalleeSaveOuterMethod(art::Thread*, art::CalleeSaveType)
art::OatHeader::GetMagic() const
std::__1::__hash_table<_jclass*, std::__1::hash<_jclass*>, std::__1::equal_to<_jclass*>, std::__1::allocator<_jclass*> >::rehash(unsigned int)
art::OatQuickMethodHeader::ToNativeQuickPc(art::ArtMethod*, unsigned int, bool, bool) const
art::OS::CreateEmptyFileWriteOnly(char const*)
art::gc::space::ImageSpaceLoader::FixupObjectVisitor::operator()(art::mirror::Object*) const
inflateInit_
art::OatFileManager::GetPrimaryOatFile() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1u> > const&)::{lambda(art::Memory<1u>&)#1}, std::__1::allocator<{lambda(art::Memory<1u>&)#1}>, void (art::Memory<1u>&)>::operator()(art::Memory<1u>&)
vtable for art::verifier::UnresolvedSuperClass
virtual thunk to std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream()
art::mirror::Class::ProxyDescriptorEquals(char const*)
unsigned int art::gc::accounting::CardTable::Scan<true, art::gc::collector::MarkSweep::ScanObjectVisitor>(art::gc::accounting::SpaceBitmap<8u>*, unsigned char*, unsigned char*, art::gc::collector::MarkSweep::ScanObjectVisitor const&, unsigned char)
art::detail::CmdlineParseArgument<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::MaybeMatches(art::TokenRange const&)
art::RuntimeArgumentMap::NativeBridge
art::ReaderWriterMutex::~ReaderWriterMutex()
art::JDWP::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::JDWP::JdwpModKind const&)
art::OatHeader::GetQuickToInterpreterBridge() const
art::Thread::InstallImplicitProtection()
art::gc::accounting::SpaceBitmap<8u>::SpaceBitmap(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::MemMap*, unsigned int*, unsigned int, void const*, unsigned int)
art::ArtMethod::GetNameAsString(art::Thread*)
art::gc::collector::MarkSweep::ReMarkRoots()
art::Runtime::GetHashTableMaxLoadFactor() const
art::jit::JitCodeCache::AddProfilingInfoInternal(art::Thread*, art::ArtMethod*, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&)
art::CheckJNI::GetStringUTFLength(_JNIEnv*, _jstring*)
art::CheckJNI::SetBooleanArrayRegion(_JNIEnv*, _jbooleanArray*, int, int, unsigned char const*)
art::ScopedCheck::TracePossibleHeapValue(art::ScopedObjectAccess&, bool, char, art::JniValueType, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::verifier::UnresolvedSuperClass::~UnresolvedSuperClass()
art::JDWP::InitAdbTransport(art::JDWP::JdwpState*, art::JDWP::JdwpOptions const*)
art::gc::allocator::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::gc::allocator::RosAlloc::PageMapKind const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::IntoKey(art::RuntimeArgumentMapKey<unsigned int> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, unsigned int& ()>::operator()()
art::gc::Heap::PreSweepingGcVerification(art::gc::collector::GarbageCollector*)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::IntoKey(art::RuntimeArgumentMapKey<unsigned int> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, unsigned int& ()>
std::__1::__shared_ptr_emplace<art::Memory<1024u>, std::__1::allocator<art::Memory<1024u> > >::~__shared_ptr_emplace()
art::CheckJNI::GetShortField(_JNIEnv*, _jobject*, _jfieldID*)
art::verifier::RegisterLine::CopyResultRegister2(art::verifier::MethodVerifier*, unsigned int)
art::mirror::PrimitiveArray<unsigned short>::Memcpy(int, art::ObjPtr<art::mirror::PrimitiveArray<unsigned short> >, int, int)
vtable for art::ReferenceMapVisitor<art::RootCallbackVisitor, true>
art::gc::space::LargeObjectSpace::GetBytesAllocated()
art::ProfileCompilationInfo::GetMethod(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned short) const
art::mirror::Class::FindClassMethod(art::StringPiece const&, art::Signature const&, art::PointerSize)
art::VariantMapKey<int (*)(__sFILE*, char const*, char*)>::ValueDelete(void*) const
void std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >::emplace_back<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::CheckJNI::CallStaticVoidMethodV(_JNIEnv*, _jclass*, _jmethodID*, char*)
art::mirror::String::IsValueNull()
non-virtual thunk to art::gc::space::DlMallocSpace::LogFragmentationAllocFailure(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, unsigned int)
art::gc::accounting::SpaceBitmap<8u>::AtomicTestAndSet(art::mirror::Object const*)
art::verifier::MethodVerifier::ResolveClassAndCheckAccess(art::dex::TypeIndex)
art::CheckJNI::NewIntArray(_JNIEnv*, int)
art::CheckJNI::CallIntMethodV(_JNIEnv*, _jobject*, _jmethodID*, char*)
art::gc::accounting::SpaceBitmap<4096u>::SetHeapLimit(unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoIgnore()::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>::~__func()
art::ThrowClassCircularityError(art::ObjPtr<art::mirror::Class>)
art::gc::collector::MarkCompact::MarkingPhase()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(bool&)#1}, std::__1::allocator<{lambda(bool&)#1}>, void (bool&)>::~__func()
std::__1::basic_filebuf<char, std::__1::char_traits<char> >::seekoff(long long, std::__1::ios_base::seekdir, unsigned int)
art::CurrentMethodVisitor::~CurrentMethodVisitor()
art::verifier::UnresolvedUninitializedRefType::IsUnresolvedAndUninitializedReference() const
artAllocStringFromBytesFromCodeRegion
std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >& std::__1::__invoke_void_return_wrapper<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&>::__call<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)::{lambda()#1}&>(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)::{lambda()#1}&)
art::ThreadPool::AddTask(art::Thread*, art::Task*)
art::mirror::Throwable::GetStackDepth()
art::ClassLinker::CleanupClassLoaders()
art::OatFile::OpenWritable(unix_file::FdFile*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::JNI::GetLongField(_JNIEnv*, _jobject*, _jfieldID*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoKey(art::RuntimeArgumentMapKey<art::Unit> const&)::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>::destroy_deallocate()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1024u>& ()>::destroy_deallocate()
std::__1::function<art::gc::space::LargeObjectSpaceType& ()>::swap(std::__1::function<art::gc::space::LargeObjectSpaceType& ()>&)
art::gc::AllocRecordStackTraceElement::ComputeLineNumber() const
art::annotations::GetAnnotationForMethodParameter(art::ArtMethod*, unsigned int, art::Handle<art::mirror::Class>)
art::JDWP::JdwpNetStateBase::JdwpNetStateBase(art::JDWP::JdwpState*)
art::OatFileAssistant::Dex2Oat(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
android::base::Trim(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::arm::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::arm::SRegister const&)
art::gc::accounting::ModUnionTableReferenceCache::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
void art::mirror::Object::VisitFieldsReferences<false, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::Verification::BFSFindReachable>(unsigned int, art::gc::Verification::BFSFindReachable const&)
art::ProfileCompilationInfo::GetResolvedClasses(std::__1::vector<art::DexFile const*, std::__1::allocator<art::DexFile const*> > const&) const
art::Monitor::TryLockLocked(art::Thread*)
art::verifier::UnresolvedUninitializedRefType::IsUnresolvedTypes() const
art::WellKnownClasses::java_lang_reflect_Method
bool art::ClassLinker::CheckInvokeClassMismatch<true, art::ClassLinker::CheckInvokeClassMismatch<true>(art::ObjPtr<art::mirror::DexCache>, art::InvokeType, unsigned int, art::ObjPtr<art::mirror::ClassLoader>)::{lambda()#1}>(art::ObjPtr<art::mirror::DexCache>, art::InvokeType, art::ClassLinker::CheckInvokeClassMismatch<true>(art::ObjPtr<art::mirror::DexCache>, art::InvokeType, unsigned int, art::ObjPtr<art::mirror::ClassLoader>)::{lambda()#1})
art::QuasiAtomic::SwapMutexRead64(long long const volatile*)
art::ElfFileImpl<ElfTypes64>::Setup(unix_file::FdFile*, int, int, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
void art::mirror::DexCache::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::accounting::AddToReferenceArrayVisitor>(art::ObjPtr<art::mirror::Class>, art::gc::accounting::AddToReferenceArrayVisitor const&)
art::Runtime::PreZygoteFork()
non-virtual thunk to art::gc::space::ZygoteSpace::RevokeThreadLocalBuffers(art::Thread*)
void std::__1::vector<_jclass*, std::__1::allocator<_jclass*> >::__push_back_slow_path<_jclass*>(_jclass*&&)
art::RuntimeArgumentMap::Verbose
void art::mirror::Object::VisitFieldsReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor>(unsigned int, art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor const&)
art::JDWP::JdwpState::UnregisterEventById(unsigned int)
art::gc::collector::MarkSweep::CheckpointMarkThreadRoots::~CheckpointMarkThreadRoots()
art::Arm64InstructionSetFeatures::FromCpuInfo()
art::RuntimeCallbacks::RemoveRuntimeSigQuitCallback(art::RuntimeSigQuitCallback*)
art::ProfileCompilationInfo::AddMethod(art::ProfileMethodInfo const&)
art::detail::CmdlineParseArgument<art::TraceClockSource>::ParseArgument(art::TokenRange const&, unsigned int*)
artThrowDivZeroFromCode
art::Monitor::Notify(art::Thread*)
art::gc::space::DlMallocSpace::SetFootprintLimit(unsigned int)
art::JavaVMExt::UpdateGlobal(art::Thread*, void*, art::ObjPtr<art::mirror::Object>)
art::Dbg::RequestDeoptimizationLocked(art::DeoptimizationRequest const&)
art::WellKnownClasses::dalvik_system_VMRuntime
vtable for art::BuildQuickArgumentVisitor
art::JDWP::Request::ReadValue(unsigned int)
art::gc::space::Space::IsDlMallocSpace() const
art::gc::accounting::SpaceBitmap<4096u>::ComputeHeapSize(unsigned long long)
void art::mirror::Class::FixupNativePointers<(art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::gc::space::ImageSpaceLoader::FixupObjectAdapter>(art::mirror::Class*, art::PointerSize, art::gc::space::ImageSpaceLoader::FixupObjectAdapter const&)
art::gc::space::FreeListSpace::FreeListSpace(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::MemMap*, unsigned char*, unsigned char*)
void art::mirror::Object::VisitFieldsReferences<false, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::collector::MarkVisitor>(unsigned int, art::gc::collector::MarkVisitor const&)
vtable for std::__1::__shared_ptr_emplace<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >
std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::JNI::GetStaticIntField(_JNIEnv*, _jclass*, _jfieldID*)
FileWriter::~FileWriter()
art::Dbg::field_write_event_ref_count_
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::IntoKey(art::RuntimeArgumentMapKey<art::LogVerbosity> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::LogVerbosity& ()>::~__func()
art::CheckJNI::CallNonvirtualCharMethodV(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, char*)
art::ClassLinker::FindArrayClass(art::Thread*, art::ObjPtr<art::mirror::Class>*)
art::gc::collector::SemiSpace::DelayReferenceReferent(art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::Reference>)
void std::__1::vector<art::gc::accounting::SpaceBitmap<4096u>*, std::__1::allocator<art::gc::accounting::SpaceBitmap<4096u>*> >::__push_back_slow_path<art::gc::accounting::SpaceBitmap<4096u>* const&>(art::gc::accounting::SpaceBitmap<4096u>* const&)
art::gc::space::ZygoteSpace::AsZygoteSpace()
art::TypeLookupTable::Insert(art::TypeLookupTable::Entry const&, unsigned int)
art::Barrier::~Barrier()
art::ClassLinker::MoveClassTableToPreZygote()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::IntoKey(art::RuntimeArgumentMapKey<double> const&)::{lambda(double&)#1}, std::__1::allocator<{lambda(double&)#1}>, void (double&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(double&)#1}> >*) const
art::gc::space::Space::IsRosAllocSpace() const
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)6, true, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::verifier::CharType::~CharType()
art::detail::CmdlineParseArgument<art::verifier::VerifyMode>::~CmdlineParseArgument()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::IntoKey(art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds> const&)::{lambda(art::MillisecondsToNanoseconds&)#1}, std::__1::allocator<{lambda(art::MillisecondsToNanoseconds&)#1}>, void (art::MillisecondsToNanoseconds&)>::~__func()
art::BitVector::SetInitialBits(unsigned int)
artAllocStringFromStringFromCodeRosAlloc
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::OatFileAssistant::OatStatus)
art::JDWP::JdwpAdbState::Shutdown()
vtable for art::hprof::NetStateEndianOutput
art::MemMap::Sync()
art::NoopAllocator::Alloc(unsigned int)
art::ThreadPoolWorker::~ThreadPoolWorker()
art::JDWP::operator!=(art::JDWP::JdwpLocation const&, art::JDWP::JdwpLocation const&)
vtable for art::jit::MarkCodeVisitor
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::BackgroundGcOption> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::BackgroundGcOption& ()>::destroy()
art::Thread::GetLongJumpContext()
art::JavaVMExt::DeleteGlobalRef(art::Thread*, _jobject*)
art::ClassLinker::IsQuickGenericJniStub(void const*) const
art::gc::accounting::SpaceBitmap<8u>::SetName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::gc::accounting::SpaceBitmap<4096u>::Size() const
art::VariantMapKey<std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > >*>::ValueDelete(void*) const
guard variable for art::Memory<1u>::Name()::str
art::JNI::CallNonvirtualVoidMethod(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, ...)
art::OatFile::BssBegin() const
void std::__1::vector<char*, std::__1::allocator<char*> >::__push_back_slow_path<char*>(char*&&)
art::DexFile::GetCallSiteId(unsigned int) const
void std::__1::vector<art::MemMap*, std::__1::allocator<art::MemMap*> >::__push_back_slow_path<art::MemMap*>(art::MemMap*&&)
art::gc::allocator::RosAlloc::Run::Dump()
art::CheckJNI::DeleteGlobalRef(_JNIEnv*, _jobject*)
art::Dbg::IsCollected(unsigned long long, bool*)
art::gc::accounting::SpaceBitmap<4096u>::ClearVisitor::ClearVisitor(art::gc::accounting::SpaceBitmap<4096u>*)
art::mirror::CallSite::VisitRoots(art::RootVisitor*)
std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >& art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination::GetOrCreateFromMap<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >(art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > const&)
art::VariantMapKey<art::BackgroundGcOption>::~VariantMapKey()
art::CheckJNI::CallByteMethodA(_JNIEnv*, _jobject*, _jmethodID*, jvalue*)
art::ClassLoaderContext::Create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::verifier::VerifyMode& ()>::~__func()
art::gc::collector::SemiSpace::FinishPhase()
art::IndirectReferenceTable::Trim()
_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKhEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IS6_EES8_S8_
art::OatHeader::Flatten(art::SafeMap<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const*)
art::detail::CmdlineParseArgument<bool>::GetNumTokens() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::IntoKey(art::RuntimeArgumentMapKey<unsigned int> const&)::{lambda(unsigned int&)#1}, std::__1::allocator<{lambda(unsigned int&)#1}>, void (unsigned int&)>::__clone() const
art::JavaVMExt::SetCheckJniEnabled(bool)
void std::__1::vector<art::verifier::VerifyError, std::__1::allocator<art::verifier::VerifyError> >::__push_back_slow_path<art::verifier::VerifyError const&>(art::verifier::VerifyError const&)
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<art::gc::space::LargeObjectSpaceType>(art::RuntimeArgumentMapKey<art::gc::space::LargeObjectSpaceType> const&)
art::gc::space::RosAllocSpace::AllocWithGrowth(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
bool art::interpreter::DoFieldGet<(art::FindFieldType)2, (art::Primitive::Type)3, true>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::gc::Heap::IncrementDisableMovingGC(art::Thread*)
art::ElfFileImpl<ElfTypes64>::FindSymbolAddress(unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
art::gc::ZygoteCompactingCollector::~ZygoteCompactingCollector()
art::verifier::BooleanType::Destroy()
art::mirror::PrimitiveArray<long long>::AllocateAndFill(art::Thread*, long long const*, unsigned int)
art::FaultManager::FaultManager()
non-virtual thunk to art::gc::space::RegionSpace::Alloc(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)4, true, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::OatDexFile::GetOatClassOffset(unsigned short) const
art::verifier::RegTypeCache::FillPrimitiveAndSmallConstantTypes()
art::RememberForGcArgumentVisitor::Visit()
art::interpreter::UnstartedRuntime::UnstartedJNIUnsafeGetIntVolatile(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1u>& ()>
art::ClassLinker::FindClassInBaseDexClassLoaderClassPath(art::ScopedObjectAccessAlreadyRunnable&, char const*, unsigned int, art::Handle<art::mirror::ClassLoader>)
_jintArray* art::JNI::NewPrimitiveArray<_jintArray*, art::mirror::PrimitiveArray<int> >(_JNIEnv*, int)
art::mirror::PrimitiveArray<short>::Get(int)
artAllocObjectFromCodeWithChecksRegionTLABInstrumented
artAllocStringFromStringFromCodeBumpPointer
art::mirror::Class::java_lang_Class_
inflateResetKeep
art::hprof::Hprof::WriteFixedHeader()
art::mirror::PrimitiveArray<signed char>::Alloc(art::Thread*, unsigned int)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::IntoKey(art::RuntimeArgumentMapKey<art::gc::space::LargeObjectSpaceType> const&)
art::gc::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::gc::WeakRootState const&)
std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char>, void*>, std::__1::__tree_node_destructor<art::ArenaAllocatorAdapter<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char>, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const>, true>, art::ArenaAllocatorAdapter<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char> > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned char const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned char const&)
art::GetResolvedClassesVisitor::~GetResolvedClassesVisitor()
art::VariantMapKey<art::InstructionSet>::~VariantMapKey()
_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEC2INS_11__wrap_iterIPKS6_EEEET_NS_9enable_ifIXaasr21__is_forward_iteratorISE_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISE_E9referenceEEE5valueESE_E4typeE
__jit_debug_descriptor
art::Dbg::GetThisObject(unsigned long long, unsigned long long, unsigned long long*)
art::mirror::EmulatedStackFrame::ResetClass()
art::InternTable::AddTableFromMemory(unsigned char const*)
vtable for art::verifier::UnresolvedMergedType
art::gc::Heap::ThreadFlipEnd(art::Thread*)
MterpNewArray
art::verifier::RegTypeCache::ResolveClass(char const*, art::mirror::ClassLoader*)
artInvokeDirectTrampolineWithAccessCheck
vtable for art::gc::space::Space
art::gc::Heap::DisallowNewAllocationRecords() const
art::CheckJNI::GetFloatArrayElements(_JNIEnv*, _jfloatArray*, unsigned char*)
art::ClassLinker::CreateImtConflictTable(unsigned int, art::LinearAlloc*, art::PointerSize)
art::JDWP::Request::ReadLocation()
art::InstrumentationStackVisitor::~InstrumentationStackVisitor()
art::JDWP::expandBufAddUtf8String(art::JDWP::ExpandBuf*, char const*)
non-virtual thunk to art::gc::collector::ConcurrentCopying::~ConcurrentCopying()
art::verifier::ConflictType::CreateInstance(art::mirror::Class*, art::StringPiece const&, unsigned short)
art::OatHeader::GetInterpreterToCompiledCodeBridge() const
art::JNI::GetObjectArrayElement(_JNIEnv*, _jobjectArray*, int)
art::GetDalvikCache(char const*, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, bool*, bool*, bool*)
art::gc::allocator::RosAlloc::AllocRun(art::Thread*, unsigned int)
art::gc::collector::GarbageCollector::ResetMeasurements()
art::Dbg::GetSourceFile(unsigned long long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::gc::accounting::CardTable::ClearCardRange(unsigned char*, unsigned char*)
art::ElfFileImpl<ElfTypes64>::Size() const
art::gc::allocator::RosAlloc::FootprintLimit()
art::Runtime::GetSystemThreadGroup() const
art::OatHeader::RelocateOat(long)
non-virtual thunk to art::gc::collector::MarkCompact::~MarkCompact()
art::DumpFramesWithTypeStackVisitor::~DumpFramesWithTypeStackVisitor()
art::verifier::RegType::IsConstantTypes() const
art::Dbg::MatchField(unsigned long long, unsigned long long, art::ArtField*)
art::JNI::DeleteLocalRef(_JNIEnv*, _jobject*)
art::Trace::UseWallClock()
art::ConvertUtf16ToModifiedUtf8(char*, unsigned int, unsigned short const*, unsigned int)
art::ImageHeader::RelocateImageMethods(long)
art::register_java_lang_Throwable(_JNIEnv*)
art::mirror::PrimitiveArray<int>* art::JNI::DecodeAndCheckArrayType<_jintArray*, int, art::mirror::PrimitiveArray<int> >(art::ScopedObjectAccess&, _jintArray*, char const*, char const*)
art::GetThreadName(int)
art::Transaction::ObjectLog::LogBooleanValue(art::MemberOffset, unsigned char, bool)
art::gc::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::gc::CollectorType const&)
art::gc::space::BumpPointerSpace::Clear()
std::__1::vector<std::__1::pair<art::GcRoot<art::mirror::Class>, art::verifier::RegType const*>, art::ScopedArenaAllocatorAdapter<std::__1::pair<art::GcRoot<art::mirror::Class>, art::verifier::RegType const*> > >::reserve(unsigned int)
art::gc::space::RegionSpace::ToSpaceSize()
JNI_GetCreatedJavaVMs
art::CheckJNI::GetCharArrayRegion(_JNIEnv*, _jcharArray*, int, int, unsigned short*)
art::jit::MarkCodeVisitor::~MarkCodeVisitor()
std::__1::function<void (art::ParseStringList<(char)58>&)>::swap(std::__1::function<void (art::ParseStringList<(char)58>&)>&)
art::ObjectRegistry::DisableCollection(unsigned long long)
art::JNI::CallStaticVoidMethodV(_JNIEnv*, _jclass*, _jmethodID*, char*)
art::verifier::RegisterLine::CheckConstructorReturn(art::verifier::MethodVerifier*) const
art::ThrowArithmeticExceptionDivideByZero()
art::ClassLinker::EnsureResolved(art::Thread*, char const*, art::ObjPtr<art::mirror::Class>)
art::InternTable::Table::Table()
art::detail::CmdlineParseArgument<art::ExperimentalFlags>::MaybeMatches(art::TokenRange const&)
art::CheckJNI::CallStaticDoubleMethodV(_JNIEnv*, _jclass*, _jmethodID*, char*)
std::__1::basic_filebuf<char, std::__1::char_traits<char> >::imbue(std::__1::locale const&)
art::gc::Heap::RequestConcurrentGCAndSaveObject(art::Thread*, bool, art::ObjPtr<art::mirror::Object>*)
art::X86InstructionSetFeatures::AddFeaturesFromSplitString(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::IntoKey(art::RuntimeArgumentMapKey<art::verifier::VerifyMode> const&)::{lambda(art::verifier::VerifyMode&)#1}, std::__1::allocator<{lambda(art::verifier::VerifyMode&)#1}>, void (art::verifier::VerifyMode&)>::~__func()
art::BuildGenericJniFrameVisitor::Visit()
_ZNSt3__16vectorIPN3art6mirror13HeapReferenceINS2_6ObjectEEENS_9allocatorIS6_EEE6assignIPS6_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_
art::mirror::Class::FindDeclaredInstanceField(art::StringPiece const&, art::StringPiece const&)
art::Trace::DumpMethodList(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, std::__1::set<art::ArtMethod*, std::__1::less<art::ArtMethod*>, std::__1::allocator<art::ArtMethod*> > const&)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::CompleteArgument()
art::ClassTable::ClassTable()
bool art::mirror::ObjectArray<art::mirror::Array>::CheckAssignable<(art::VerifyObjectFlags)0>(art::ObjPtr<art::mirror::Array>)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::LogVerbosity&)#1}, std::__1::allocator<{lambda(art::LogVerbosity&)#1}>, void (art::LogVerbosity&)>::__clone() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ExperimentalFlags& ()>::operator()()
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::CalleeSaveType const&)
art::verifier::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::verifier::FailureKind const&)
art::gc::space::LargeObjectMapSpace::GetBeginEndAtomic() const
art::ProfileSaver::NotifyJitActivityInternal()
art::interpreter::UnstartedRuntime::UnstartedMemoryPeekByte(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
void art::mirror::DexCache::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::collector::MarkVisitor>(art::ObjPtr<art::mirror::Class>, art::gc::collector::MarkVisitor const&)
art::OatHeader::GetImageFileLocationOatChecksum() const
void std::__1::vector<art::mirror::Class*, std::__1::allocator<art::mirror::Class*> >::__push_back_slow_path<art::mirror::Class*>(art::mirror::Class*&&)
art::ObjectTryLock<art::mirror::Object>::Acquired() const
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<unsigned short, art::ProfileCompilationInfo::DexPcData>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, art::ProfileCompilationInfo::DexPcData>, std::__1::less<unsigned short>, true>, art::ArenaAllocatorAdapter<std::__1::__value_type<unsigned short, art::ProfileCompilationInfo::DexPcData> > >::__find_equal<unsigned short>(std::__1::__tree_const_iterator<std::__1::__value_type<unsigned short, art::ProfileCompilationInfo::DexPcData>, std::__1::__tree_node<std::__1::__value_type<unsigned short, art::ProfileCompilationInfo::DexPcData>, void*>*, int>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, unsigned short const&)
bool art::mirror::Executable::CreateFromArtMethod<(art::PointerSize)4, true>(art::ArtMethod*)
MterpAputObject
deflatePrime
vtable for art::verifier::UninitializedThisReferenceType
art::ImageHeader::GetImageMethod(art::ImageHeader::ImageMethod) const
art::ClassLinker::GetQuickOatCodeFor(art::ArtMethod*)
art::JNIEnvExt::SetTableOverride(JNINativeInterface const*)
art::ProfileCompilationInfo::GenerateTestProfile(int, std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > >&, unsigned int)
art::verifier::ImpreciseConstLoType::IsImpreciseConstantLo() const
art::BuildGenericJniFrameVisitor::BuildGenericJniFrameVisitor(art::Thread*, bool, bool, char const*, unsigned int, art::ArtMethod***)
art::CumulativeLogger::AddPair(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long long)
art::gc::space::BumpPointerSpace::LogFragmentationAllocFailure(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >& ()>::~__func()
art::ClassLinker::LookupClasses(char const*, std::__1::vector<art::ObjPtr<art::mirror::Class>, std::__1::allocator<art::ObjPtr<art::mirror::Class> > >&)
art::instrumentation::Instrumentation::GetQuickCodeFor(art::ArtMethod*, art::PointerSize) const
art::detail::CmdlineParseArgument<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::~CmdlineParseArgument()
art::JNIEnvExt::DumpReferenceTables(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
unix_file::FdFile::Open(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)
art::verifier::RegTypeCache::primitive_initialized_
art::DexFileVerifier::CheckAndGetHandlerOffsets(art::DexFile::CodeItem const*, unsigned int*, unsigned int)
bool art::interpreter::DoIGetQuick<(art::Primitive::Type)0>(art::ShadowFrame&, art::Instruction const*, unsigned short)
art::verifier::RegType::Merge(art::verifier::RegType const&, art::verifier::RegTypeCache*, art::verifier::MethodVerifier*) const
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Dbg::HpsgWhen const&)
art::CompilerFilter::IsAotCompilationEnabled(art::CompilerFilter::Filter)
art::interpreter::UnstartedRuntime::UnstartedClassGetSignatureAnnotation(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::ProfileCompilationInfo::AddResolvedClasses(art::DexCacheResolvedClasses const&)
art::JNI::ToReflectedField(_JNIEnv*, _jclass*, _jfieldID*, unsigned char)
art::mirror::PrimitiveArray<signed char>::GetData()
art::RuntimeArgumentMap::IgnoreMaxFootprint
art::ArmInstructionSetFeatures::GetFeatureString() const
art::gc::Heap::PostGcVerificationPaused(art::gc::collector::GarbageCollector*)
art::LockCountData::AddMonitor(art::Thread*, art::mirror::Object*)
art::verifier::MethodVerifier::GetCaughtExceptionType()
__register_frame_info
art::ClassLinker::LookupResolvedField(unsigned int, art::ObjPtr<art::mirror::DexCache>, art::ObjPtr<art::mirror::ClassLoader>, bool)
art::gc::Heap::SetSpaceAsDefault(art::gc::space::ContinuousSpace*)
art::DexFile::FindStringId(char const*) const
art::ParsedOptions::ParsedOptions()
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, art::ClassLinker::MethodTranslation>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, art::ClassLinker::MethodTranslation>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, art::ClassLinker::MethodTranslation>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, art::ClassLinker::MethodTranslation> > >::rehash(unsigned int)
vtable for art::detail::CmdlineParseArgument<art::Unit>
vtable for art::detail::CmdlineParseArgument<art::BackgroundGcOption>
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::Memory<1024u>&)#1}, std::__1::allocator<{lambda(art::Memory<1024u>&)#1}>, void (art::Memory<1024u>&)>::operator()(art::Memory<1024u>&)
art::Mutex::Mutex(char const*, art::LockLevel, bool)
art::instrumentation::Instrumentation::Instrumentation()
art::SignalSet::Wait()
art::ArtMethod::JniShortName()
art::ManagedStack::ShadowFramesContain(art::StackReference<art::mirror::Object>*) const
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(char const*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::verifier::VerifyMode& ()>::destroy_deallocate()
art::RuntimeArgumentMap::MethodTraceStreaming
art::ZipEntry::IsAlignedTo(unsigned int)
art::JDWP::JdwpAdbState::~JdwpAdbState()
art::gc::space::MemoryToolMallocSpace<art::gc::space::RosAllocSpace, 8u, false, true>::AllocationSize(art::mirror::Object*, unsigned int*)
art::ThreadPool::~ThreadPool()
art::verifier::RegType::IsConstantShort() const
unsigned char art::JDWP::Request::ReadEnum1<unsigned char>(char const*)
art::interpreter::InitInterpreterTls(art::Thread*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::IntoKey(art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds> const&)::{lambda(art::MillisecondsToNanoseconds&)#1}, std::__1::allocator<{lambda(art::MillisecondsToNanoseconds&)#1}>, void (art::MillisecondsToNanoseconds&)>::destroy_deallocate()
art::Transaction::RecordStrongStringRemoval(art::ObjPtr<art::mirror::String>)
art::CheckJNI::SetLongArrayRegion(_JNIEnv*, _jlongArray*, int, int, long long const*)
art::gc::collector::ConcurrentCopying::FlipThreadRoots()
art::InternTable::AddNewTable()
art::gc::space::MemoryToolMallocSpace<art::gc::space::DlMallocSpace, 8u, true, false>::Free(art::Thread*, art::mirror::Object*)
art::JNI::GetIntField(_JNIEnv*, _jobject*, _jfieldID*)
art::mirror::PrimitiveArray<signed char>::SetArrayClass(art::ObjPtr<art::mirror::Class>)
art::verifier::ConstantType::IsConstantTypes() const
art::Monitor::VisitLocks(art::StackVisitor*, void (*)(art::mirror::Object*, void*), void*, bool)
void art::ClassTable::VisitRoots<art::gc::VerifyReferenceVisitor>(art::gc::VerifyReferenceVisitor const&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > android::base::Join<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::ObjectTryLock<art::mirror::Class>::~ObjectTryLock()
art::StackVisitor::GetVReg(art::ArtMethod*, unsigned short, art::VRegKind, unsigned int*) const
art::TimingLogger::StartTiming(char const*)
art::CheckJNI::GetStaticBooleanField(_JNIEnv*, _jclass*, _jfieldID*)
art::DeoptimizationRequest::Method() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >& ()>::destroy()
art::Thread::InitCardTable()
art::hprof::Hprof::LookupClassId(art::mirror::Class*)
art::ArtMethod* art::ClassLinker::GetResolvedMethod<(art::InvokeType)1, (art::ClassLinker::ResolveMode)1>(unsigned int, art::ArtMethod*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::IntoKey(art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::MillisecondsToNanoseconds& ()>::~__func()
art::VariantMapKey<bool>::~VariantMapKey()
art::MemMap::SetSize(unsigned int)
art::gc::accounting::MemoryRangeBitmap<16u>::AtomicTestAndSet(unsigned int)
art::RuntimeArgumentMap::Dex2Oat
art::CatchHandlerIterator::CatchHandlerIterator(art::DexFile::CodeItem const&, unsigned int)
art::DexFileVerifier::CheckInterAnnotationsDirectoryItem()
art::RuntimeArgumentMap::LockProfThreshold
art::verifier::UnresolvedUninitializedRefType::~UnresolvedUninitializedRefType()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoIgnore()::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>::destroy()
art::gc::accounting::SpaceBitmap<4096u>::OffsetToMask(unsigned int)
art::ArtField::PrettyField(bool)
art::interpreter::UnstartedRuntime::UnstartedMemoryPeekByteArray(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::ThreadPool::TryGetTask(art::Thread*)
vtable for art::instrumentation::InstallStubsClassVisitor
art::jit::JitCodeCache::DataCacheSizeLocked()
art::Runtime::RemoveSystemWeakHolder(art::gc::AbstractSystemWeakHolder*)
art::VdexFile::Header::Header(unsigned int, unsigned int, unsigned int, unsigned int)
art::mirror::Class::InitializeClassVisitor::operator()(art::ObjPtr<art::mirror::Object>, unsigned int) const
art::verifier::PreciseReferenceType::GetAssignmentTypeImpl() const
OpenArchiveFd(int, char const*, void**, bool)
art::JniMethodFastStart(art::Thread*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >& ()>::operator()()
art::WellKnownClasses::dalvik_system_DelegateLastClassLoader
art::StackVisitor::SetReturnPc(unsigned int)
artGet64InstanceFromCompiledCode
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1024u> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1024u>& ()>::destroy_deallocate()
art::instrumentation::Instrumentation::ResetQuickAllocEntryPoints()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::IntoKey(art::RuntimeArgumentMapKey<art::gc::space::LargeObjectSpaceType> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::gc::space::LargeObjectSpaceType& ()>::destroy()
art::ElfFileImpl<ElfTypes32>::GetRela(Elf32_Shdr&, unsigned int) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::IntoKey(art::RuntimeArgumentMapKey<art::verifier::VerifyMode> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::verifier::VerifyMode& ()>::__clone(std::__1::__function::__base<art::verifier::VerifyMode&>*) const
vtable for art::VariantMapKey<art::XGcOption>
art::WellKnownClasses::java_lang_ThreadGroup_removeThread
art::QuickExceptionHandler::QuickExceptionHandler(art::Thread*, bool)
art::RuntimeArgumentMap::JniOptsForceCopy
std::__1::__tree<art::dex::TypeIndex, std::__1::less<art::dex::TypeIndex>, art::ArenaAllocatorAdapter<art::dex::TypeIndex> >::destroy(std::__1::__tree_node<art::dex::TypeIndex, void*>*)
art::GetIndirectRefKindString(art::IndirectRefKind const&)
non-virtual thunk to art::gc::space::DlMallocSpace::GetBytesAllocated()
std::__1::function<art::LogVerbosity& ()>::swap(std::__1::function<art::LogVerbosity& ()>&)
art::CheckJNI::GetDoubleField(_JNIEnv*, _jobject*, _jfieldID*)
art::verifier::FloatType::IsFloat() const
art::detail::CmdlineParseArgument<art::ParseStringList<(char)58> >::MaybeMatches(art::TokenRange const&)
art::verifier::RegType::IsUninitializedThisReference() const
vtable for art::BuildGenericJniFrameVisitor
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Instruction::IndexType const&)
art::Dbg::gDisposed
std::__1::__shared_ptr_emplace<double, std::__1::allocator<double> >::__on_zero_shared_weak()
art::Transaction::InternStringLog::InternStringLog(art::ObjPtr<art::mirror::String>, art::Transaction::InternStringLog::StringKind, art::Transaction::InternStringLog::StringOp)
void art::mirror::Object::VisitReferences<false, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::FixupInternVisitor, art::FixupInternVisitor>(art::FixupInternVisitor const&, art::FixupInternVisitor const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::gc::space::LargeObjectSpaceType& ()>::__clone(std::__1::__function::__base<art::gc::space::LargeObjectSpaceType&>*) const
art::ElfFileImpl<ElfTypes32>::CheckAndSet(unsigned int, char const*, unsigned char**, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::detail::CmdlineParseArgument<art::XGcOption>::~CmdlineParseArgument()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::IntoKey(art::RuntimeArgumentMapKey<art::TraceClockSource> const&)::{lambda(art::TraceClockSource&)#1}, std::__1::allocator<{lambda(art::TraceClockSource&)#1}>, void (art::TraceClockSource&)>::destroy()
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::LogVerbosity& ()>
art::ElfFileImpl<ElfTypes64>::ElfFileImpl(unix_file::FdFile*, bool, bool, unsigned char*)
art::gc::space::RosAllocSpace::CreateAllocator(void*, unsigned int, unsigned int, unsigned int, bool)
art::gc::collector::ConcurrentCopying::GrayAllDirtyImmuneObjects()
bool art::interpreter::DoInvokePolymorphic<true>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::Memory<1u>&)#1}, std::__1::allocator<{lambda(art::Memory<1u>&)#1}>, void (art::Memory<1u>&)>
_Unwind_Find_FDE
art::gc::Heap::VerifyMissingCardMarks()
art::mirror::Object* art::gc::Heap::AllocObjectWithAllocator<true, true, art::mirror::SetLengthToUsableSizeVisitor>(art::Thread*, art::ObjPtr<art::mirror::Class>, unsigned int, art::gc::AllocatorType, art::mirror::SetLengthToUsableSizeVisitor const&)
art::ProfileCompilationInfo::ProfileCompilationInfo(art::ArenaPool*)
art::SuspensionHandler::Action(int, siginfo*, void*)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::IndirectReferenceTable::ResizableCapacity const&)
art::mirror::PrimitiveArray<unsigned short>::GetWithoutChecks(int)
non-virtual thunk to art::gc::space::BumpPointerSpace::LogFragmentationAllocFailure(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, unsigned int)
std::__1::__hash_table<art::OatQuickMethodHeader*, std::__1::hash<art::OatQuickMethodHeader*>, std::__1::equal_to<art::OatQuickMethodHeader*>, std::__1::allocator<art::OatQuickMethodHeader*> >::rehash(unsigned int)
art::gc::allocator::RosAlloc::SetFootprintLimit(unsigned int)
art::gJniSleepForeverStub
art::verifier::UninitializedThisReferenceType::IsUninitializedThisReference() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::IntoKey(art::RuntimeArgumentMapKey<art::ProfileSaverOptions> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ProfileSaverOptions& ()>::destroy()
art::ElfFileImpl<ElfTypes64>::FixupDebugSections(unsigned long long)
android::base::LogMessage::LogMessage(char const*, unsigned int, android::base::LogId, android::base::LogSeverity, int)
non-virtual thunk to art::gc::space::ZygoteSpace::Free(art::Thread*, art::mirror::Object*)
art::Dbg::GetSystemThreadGroupId()
void art::ClassTable::VisitRoots<art::gc::collector::MarkCompact::UpdateReferenceVisitor>(art::gc::collector::MarkCompact::UpdateReferenceVisitor const&)
art::WellKnownClasses::java_lang_Short_valueOf
art::instrumentation::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::instrumentation::InterpreterHandlerTable const&)
art::WellKnownClasses::java_lang_Boolean_valueOf
non-virtual thunk to art::gc::space::ZygoteSpace::AllocationSize(art::mirror::Object*, unsigned int*)
art::detail::CmdlineParseArgument<art::verifier::VerifyMode>::ParseArgumentSingle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::CheckJNI::CallStaticShortMethodV(_JNIEnv*, _jclass*, _jmethodID*, char*)
art::ClassTable::ClearStrongRoots()
art::Dbg::PrepareInvokeMethod(unsigned int, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned int, unsigned long long*, art::JDWP::JdwpTag*, unsigned int)
art::ElfFileImpl<ElfTypes64>::FixupProgramHeaders(unsigned long long)
art::RuntimeArgumentMapKey<void (*)()>::~RuntimeArgumentMapKey()
art::JNI::CallNonvirtualFloatMethodA(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, jvalue*)
art::CheckJNI::DeleteLocalRef(_JNIEnv*, _jobject*)
art::VariantMapKey<unsigned int>::~VariantMapKey()
art::interpreter::UnstartedRuntime::UnstartedJNIStringCompareTo(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
_jbyteArray* art::JNI::NewPrimitiveArray<_jbyteArray*, art::mirror::PrimitiveArray<signed char> >(_JNIEnv*, int)
unsigned int& art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination::GetOrCreateFromMap<unsigned int>(art::RuntimeArgumentMapKey<unsigned int> const&)
art::X86_64InstructionSetFeatures::GetInstructionSet() const
vtable for art::DeoptimizeStackVisitor
art::LogVerbosity& art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination::GetOrCreateFromMap<art::LogVerbosity>(art::RuntimeArgumentMapKey<art::LogVerbosity> const&)
art::Thread::ProtectStack(bool)
art::JNI::CallStaticByteMethod(_JNIEnv*, _jclass*, _jmethodID*, ...)
art::VdexFile::GetNextDexFileData(unsigned char const*) const
deflateSetHeader
bool art::interpreter::DoInvokeCustom<true>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)
art::detail::CmdlineParseArgument<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::SaveArgument(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > const&)
art::gc::collector::MarkSweep::ScanGrayObjects(bool, unsigned char)
art::verifier::ImpreciseConstHiType::~ImpreciseConstHiType()
art::MemStats::MemStats(char const*, art::ArenaAllocatorStatsImpl<false> const*, art::Arena const*, int)
art::dex::tracking::DexFileTrackingRegistrar::SetAllInsnsRegistration(bool)
non-virtual thunk to art::gc::space::ZygoteSpace::~ZygoteSpace()
vtable for art::gc::space::FreeListSpace
art::ClassTable::Insert(art::ObjPtr<art::mirror::Class>)
art::WellKnownClasses::java_lang_StackOverflowError
art::Dbg::GetClassName(art::mirror::Class*)
art::mirror::PrimitiveArray<unsigned char>::GetData() const
artSet16StaticFromCode
art::DexFileVerifier::CheckInterSection()
art::ElfFileImpl<ElfTypes32>::GetFilePath() const
art::annotations::GetEnclosingMethod(art::Handle<art::mirror::Class>)
art::mirror::ClassExt::dalvik_system_ClassExt_
android::base::RemoveFileIfExists(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
bool art::interpreter::DoFilledNewArray<false, true, true>(art::Instruction const*, art::ShadowFrame const&, art::Thread*, art::JValue*)
art::gc::accounting::MemoryRangeBitmap<1024u>::MemoryRangeBitmap(art::MemMap*, unsigned int, unsigned int)
art::gc::collector::SemiSpace::SemiSpace(art::gc::Heap*, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::gc::space::ZygoteSpace::CanMoveObjects() const
art::JNI::NewObject(_JNIEnv*, _jclass*, _jmethodID*, ...)
art::ArtMethod* art::FindMethodFast<(art::InvokeType)2, true>(unsigned int, art::ObjPtr<art::mirror::Object>, art::ArtMethod*)
bool art::interpreter::DoFieldGet<(art::FindFieldType)2, (art::Primitive::Type)6, false>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::VariantMapKey<art::ProfileSaverOptions>::Clone() const
non-virtual thunk to art::gc::space::RosAllocSpace::FreeList(art::Thread*, unsigned int, art::mirror::Object**)
art::interpreter::AbortTransactionF(art::Thread*, char const*, ...)
vtable for art::verifier::UndefinedType
art::verifier::MethodVerifier::FindLocksAtDexPc(art::ArtMethod*, unsigned int, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >*)
art::WellKnownClasses::java_lang_IllegalAccessError
non-virtual thunk to art::gc::collector::MarkCompact::MarkHeapReference(art::mirror::HeapReference<art::mirror::Object>*, bool)
MterpLogNullObjectException
art::gc::Heap::PushOnAllocationStackWithInternalGC(art::Thread*, art::ObjPtr<art::mirror::Object>*)
art::ThreadList::Register(art::Thread*)
art::BitVector::Subtract(art::BitVector const*)
_jcharArray* art::JNI::NewPrimitiveArray<_jcharArray*, art::mirror::PrimitiveArray<unsigned short> >(_JNIEnv*, int)
art::ScopedArenaAllocator::~ScopedArenaAllocator()
art::JDWP::JdwpOptions::~JdwpOptions()
art::ClassLinker::FillImtFromSuperClass(art::Handle<art::mirror::Class>, art::ArtMethod*, art::ArtMethod*, bool*, art::ArtMethod**)
art::annotations::GetAnnotationsForClass(art::Handle<art::mirror::Class>)
art::JII::GetEnv(_JavaVM*, void**, int)
art::detail::CmdlineParseArgument<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::ParseArgumentSingle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::gc::Heap::ConcurrentGCTask::Run(art::Thread*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}, std::__1::allocator<{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}>, void (std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)>::destroy_deallocate()
art::Trace::MeasureClockOverhead()
art::gc::collector::MarkCompact::MoveObjects()
art::gc::space::FreeListSpace::IsZygoteLargeObject(art::Thread*, art::mirror::Object*) const
std::__1::__tree<char const*, art::CharPointerComparator, std::__1::allocator<char const*> >::destroy(std::__1::__tree_node<char const*, void*>*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::BackgroundGcOption> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::BackgroundGcOption& ()>::~__func()
std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::pbackfail(int)
art::CheckJNI::CallNonvirtualBooleanMethodV(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, char*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>::~__func()
art::x86::X86Context::~X86Context()
art::DexFileVerifier::CheckInterMethodIdItem()
MterpMaybeDoOnStackReplacement
vtable for art::MoveClassTableToPreZygoteVisitor
art::Thread::ActivateSingleStepControl(art::SingleStepControl*)
art::gc::collector::MarkSweep::MarkingPhase()
art::verifier::RegType::~RegType()
art::Barrier::GetCount(art::Thread*)
art::gc::space::ImageSpace::CanMoveObjects() const
art::OatDexFile::FindClassDef(art::DexFile const&, char const*, unsigned int)
art::WellKnownClasses::java_util_ArrayList_size
art::Dbg::VisitRoots(art::RootVisitor*)
void std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void const*>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void const*> > >::__push_back_slow_path<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void const*> >(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void const*>&&)
art::mirror::ObjectArray<art::mirror::Object>::AssignableMemmove(int, art::ObjPtr<art::mirror::ObjectArray<art::mirror::Object> >, int, int)
art::ElfFileImpl<ElfTypes32>::GetString(unsigned int, unsigned int) const
art::mirror::PrimitiveArray<long long>::Alloc(art::Thread*, unsigned int)
art::WellKnownClasses::libcore_util_EmptyArray
art::verifier::DoubleLoType::CreateInstance(art::mirror::Class*, art::StringPiece const&, unsigned short)
void art::JNI::GetPrimitiveArrayRegion<_jlongArray*, long long, art::mirror::PrimitiveArray<long long> >(_JNIEnv*, _jlongArray*, int, int, long long*)
art::ClassLinker::InitWithoutImage(std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::QuasiAtomic::GetSwapMutex(long long const volatile*)
art::gc::space::RosAllocSpace::AssertAllThreadLocalBuffersAreRevoked()
art::WellKnownClasses::LateInit(_JNIEnv*)
art::Locks::breakpoint_lock_
std::__1::__vector_base<_jclass*, std::__1::allocator<_jclass*> >::~__vector_base()
art::verifier::PreciseConstHiType::Dump() const
art::GuardedCopy::DebugAlloc(unsigned int)
art::gc::TaskProcessor::UpdateTargetRunTime(art::Thread*, art::gc::HeapTask*, unsigned long long)
art::CheckJNI::CallStaticDoubleMethod(_JNIEnv*, _jclass*, _jmethodID*, ...)
unsigned int std::__1::__sort5<art::gc::accounting::AtomicStack<art::mirror::Object>::ObjectComparator&, art::StackReference<art::mirror::Object>*>(art::StackReference<art::mirror::Object>*, art::StackReference<art::mirror::Object>*, art::StackReference<art::mirror::Object>*, art::StackReference<art::mirror::Object>*, art::StackReference<art::mirror::Object>*, art::gc::accounting::AtomicStack<art::mirror::Object>::ObjectComparator&)
art::JNI::CallLongMethodA(_JNIEnv*, _jobject*, _jmethodID*, jvalue*)
art::InstructionSetFeatures::FromVariant(art::InstructionSet, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::ObjectRegistry::Demote(art::ObjectRegistryEntry&)
art::TypeLookupTable::TypeLookupTable(unsigned char const*, unsigned char const*, unsigned int)
non-virtual thunk to art::gc::space::MemoryToolLargeObjectMapSpace::~MemoryToolLargeObjectMapSpace()
art::gc::accounting::SpaceBitmap<4096u>::CopyFrom(art::gc::accounting::SpaceBitmap<4096u>*)
android::base::StringAppendF(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, char const*, ...)
art::JavaVMExt::DeleteWeakGlobalRef(art::Thread*, _jobject*)
art::gc::accounting::AtomicStack<art::mirror::Object>::Create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned int)
art::X86InstructionSetFeatures::GetInstructionSet() const
art::mirror::Constructor::ResetArrayClass()
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::gc::collector::RootPrinter>(art::gc::collector::RootPrinter&, art::PointerSize)
art::InitializeNativeBridge(_JNIEnv*, char const*)
art::gc::collector::MarkSweep::VerifySuspendedThreadRoots(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::mirror::MethodType::PrettyDescriptor()
zError
art::BitVector::EnsureSize(unsigned int)
art::CheckJNI::CallNonvirtualShortMethodV(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, char*)
art::VariantMapKey<art::LogVerbosity>::~VariantMapKey()
std::__1::basic_istream<char, std::__1::char_traits<char> >& std::__1::getline<char, std::__1::char_traits<char>, std::__1::allocator<char> >(std::__1::basic_istream<char, std::__1::char_traits<char> >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, char)
artSetObjStaticFromCompiledCode
artInstrumentationMethodExitFromCode
art::ProfileCompilationInfo::ProfileCompilationInfo(art::ArenaPool*)
void std::__1::vector<std::__1::unique_ptr<art::MemMap, std::__1::default_delete<art::MemMap> >, std::__1::allocator<std::__1::unique_ptr<art::MemMap, std::__1::default_delete<art::MemMap> > > >::__push_back_slow_path<std::__1::unique_ptr<art::MemMap, std::__1::default_delete<art::MemMap> > >(std::__1::unique_ptr<art::MemMap, std::__1::default_delete<art::MemMap> >&&)
_Unwind_FindEnclosingFunction
art::mirror::MethodHandlesLookup::GetDefault(art::Thread*)
art::StackVisitor::GetVRegPair(art::ArtMethod*, unsigned short, art::VRegKind, art::VRegKind, unsigned long long*) const
art::ArtMethod* art::ClassLinker::ResolveMethod<(art::ClassLinker::ResolveMode)1>(art::Thread*, unsigned int, art::ArtMethod*, art::InvokeType)
art::Runtime::SetImtConflictMethod(art::ArtMethod*)
art::mirror::Object* art::gc::Heap::AllocObjectWithAllocator<true, true, art::mirror::SetStringCountAndValueVisitorFromCharArray>(art::Thread*, art::ObjPtr<art::mirror::Class>, unsigned int, art::gc::AllocatorType, art::mirror::SetStringCountAndValueVisitorFromCharArray const&)
art::InstrumentationStackVisitor::VisitFrame()
art::gc::accounting::CardTable::Create(unsigned char const*, unsigned int)
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::SharedLibrary*>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::SharedLibrary*>, void*>*, int>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::SharedLibrary*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::SharedLibrary*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::SharedLibrary*> > >::__emplace_unique_key_args<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::SharedLibrary* const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::SharedLibrary* const&)
artAllocStringFromCharsFromCodeRosAllocInstrumented
art::gc::accounting::CardTable::kCardDirty
art::ArtField* art::FindFieldFromCode<(art::FindFieldType)7, true>(unsigned int, art::ArtMethod*, art::Thread*, unsigned int)
vtable for art::Dbg::DbgClassLoadCallback
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)
std::__1::unordered_set<art::dex::TypeIndex, std::__1::hash<art::dex::TypeIndex>, std::__1::equal_to<art::dex::TypeIndex>, std::__1::allocator<art::dex::TypeIndex> >::unordered_set(std::__1::unordered_set<art::dex::TypeIndex, std::__1::hash<art::dex::TypeIndex>, std::__1::equal_to<art::dex::TypeIndex>, std::__1::allocator<art::dex::TypeIndex> > const&)
art::ScopedCheck::CheckArray(art::ScopedObjectAccess&, _jarray*)
art::ObjPtr<art::mirror::Constructor> art::mirror::Class::GetDeclaredConstructorInternal<(art::PointerSize)4, false>(art::Thread*, art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::ObjectArray<art::mirror::Class> >)
art::mirror::EmulatedStackFrame::static_class_
art::Transaction::ArrayLog::Undo(art::mirror::Array*) const
non-virtual thunk to art::gc::space::LargeObjectSpace::GetBytesAllocated()
art::jit::ScopedJitSuspend::ScopedJitSuspend()
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::BufferedRootVisitor<16u> >(art::BufferedRootVisitor<16u>&, art::PointerSize)
art::detail::CmdlineParserArgumentInfo<double>::CompleteArgument()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::IntoKey(art::RuntimeArgumentMapKey<art::ExperimentalFlags> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ExperimentalFlags& ()>::destroy()
art::DeleteJITCodeEntry(art::JITCodeEntry*)
art::detail::CmdlineParseArgument<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::ParseArgumentSingle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::gc::space::LargeObjectSpaceType&)#1}, std::__1::allocator<{lambda(art::gc::space::LargeObjectSpaceType&)#1}>, void (art::gc::space::LargeObjectSpaceType&)>::__clone() const
art::verifier::MethodVerifier::CodeFlowVerifyInstruction(unsigned int*)
std::__1::__tree_iterator<std::__1::__value_type<unsigned int, unsigned int>, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned int>, void*>*, int> std::__1::__tree<std::__1::__value_type<unsigned int, unsigned int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned int>, std::__1::less<unsigned int>, true>, art::ScopedArenaAllocatorAdapter<std::__1::__value_type<unsigned int, unsigned int> > >::__emplace_multi<std::__1::pair<unsigned int const, unsigned int> const&>(std::__1::pair<unsigned int const, unsigned int> const&)
art::ParsedOptions::Usage(char const*, ...)
art::mirror::Constructor* art::mirror::Constructor::CreateFromArtMethod<(art::PointerSize)8, true>(art::Thread*, art::ArtMethod*)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::InstructionSet const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1u> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1u>& ()>::~__func()
art::OS::OpenFileForReading(char const*)
vtable for art::MipsInstructionSetFeatures
art::gc::Heap::DisableGCForShutdown()
art::OatFile::~OatFile()
art::verifier::MethodVerifier::Verify()
art::JNI::CallNonvirtualCharMethodA(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, jvalue*)
std::__1::__shared_ptr_emplace<art::TraceClockSource, std::__1::allocator<art::TraceClockSource> >::~__shared_ptr_emplace()
art::ClassTable::NumReferencedZygoteClasses() const
art::CheckJNI::GetStaticIntField(_JNIEnv*, _jclass*, _jfieldID*)
art::JDWP::JdwpAdbState::ControlSock()
void art::gc::accounting::SpaceBitmap<8u>::VisitMarkedRange<art::gc::accounting::ModUnionScanImageRootVisitor&>(unsigned int, unsigned int, art::gc::accounting::ModUnionScanImageRootVisitor&) const
art::gc::Heap::GetGcTime() const
art::mirror::Object::IdentityHashCode()
art::gc::accounting::ModUnionTableCardCache::UpdateAndMarkReferences(art::MarkObjectVisitor*)
art::detail::CmdlineParseArgument<art::gc::space::LargeObjectSpaceType>::GetNumTokens() const
art::verifier::PreciseConstType::~PreciseConstType()
artAllocObjectFromCodeResolvedBumpPointer
unix_file::FdFile::~FdFile()
std::__1::__hash_table<std::__1::__hash_value_type<art::gc::AllocRecordStackTrace const*, unsigned int>, std::__1::__unordered_map_hasher<art::gc::AllocRecordStackTrace const*, std::__1::__hash_value_type<art::gc::AllocRecordStackTrace const*, unsigned int>, art::gc::HashAllocRecordTypesPtr<art::gc::AllocRecordStackTrace>, true>, std::__1::__unordered_map_equal<art::gc::AllocRecordStackTrace const*, std::__1::__hash_value_type<art::gc::AllocRecordStackTrace const*, unsigned int>, art::gc::EqAllocRecordTypesPtr<art::gc::AllocRecordStackTrace>, true>, std::__1::allocator<std::__1::__hash_value_type<art::gc::AllocRecordStackTrace const*, unsigned int> > >::rehash(unsigned int)
art::RuntimeArgumentMap::BootClassPath
art::ClassLoadCallback::ClassPreDefine(char const*, art::Handle<art::mirror::Class>, art::Handle<art::mirror::ClassLoader>, art::DexFile const&, art::DexFile::ClassDef const&, art::DexFile const**, art::DexFile::ClassDef const**)
art::JNI::CallStaticIntMethodV(_JNIEnv*, _jclass*, _jmethodID*, char*)
inflateReset
art::GetTaskStats(int, char*, int*, int*, int*)
art::detail::CmdlineParseArgument<art::ProfileSaverOptions>::ParseArgumentSingle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::VariantMapKey<art::XGcOption>::~VariantMapKey()
art::Thread::RunCheckpointFunction()
art::gc::collector::ConcurrentCopying::~ConcurrentCopying()
art::gc::collector::MarkCompact::CalculateObjectForwardingAddresses()
art::gc::space::LargeObjectMapSpace::LargeObjectMapSpace(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::ProfileCompilationInfo::Save(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long long*)
std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::VdexFile::GetDexFileIndex(art::DexFile const&) const
art::StackMap::kNoDexRegisterMap
art::Thread::FindOrCreateDebuggerShadowFrame(unsigned int, unsigned int, art::ArtMethod*, unsigned int)
art::DebugInstrumentationListener::FieldRead(art::Thread*, art::Handle<art::mirror::Object>, art::ArtMethod*, unsigned int, art::ArtField*)
art::JNI::NewString(_JNIEnv*, unsigned short const*, int)
art::JDWP::expandBufAdd1(art::JDWP::ExpandBuf*, unsigned char)
art::Thread::DecodeJObject(_jobject*) const
art::ThrowWrappedIOException(char const*, ...)
vtable for art::UpdateEntryPointsClassVisitor
art::mirror::PrimitiveArray<signed char>::AllocateAndFill(art::Thread*, signed char const*, unsigned int)
art::LoadNativeBridge(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf64_Sym*>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf64_Sym*>, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf64_Sym*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf64_Sym*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf64_Sym*> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::gc::collector::MarkSweep::GetGcType() const
art::JNI::GetMethodID(_JNIEnv*, _jclass*, char const*, char const*)
art::jit::JitCodeCache::MoreCore(void const*, int)
art::mirror::PrimitiveArray<double>::GetData() const
art::JNIEnvExt::GetFunctionTable(bool)
void art::JNI::SetPrimitiveArrayRegion<_jlongArray*, long long, art::mirror::PrimitiveArray<long long> >(_JNIEnv*, _jlongArray*, int, int, long long const*)
art::ClassLinker::AttemptSupertypeVerification(art::Thread*, art::Handle<art::mirror::Class>, art::Handle<art::mirror::Class>)
art::JNI::SetIntField(_JNIEnv*, _jobject*, _jfieldID*, int)
art::mirror::Reference::VisitRoots(art::RootVisitor*)
art::detail::CmdlineParserArgumentInfo<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::CompleteArgument()
art::SignalSet::Block()
art::ClassLinker::CreateProxyClass(art::ScopedObjectAccessAlreadyRunnable&, _jstring*, _jobjectArray*, _jobject*, _jobjectArray*, _jobjectArray*)
vtable for art::jit::MarkCodeClosure
non-virtual thunk to art::gc::collector::MarkSweep::MarkHeapReference(art::mirror::HeapReference<art::mirror::Object>*, bool)
art::ElfFileImpl<ElfTypes64>::GetSectionHeaderNum() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>::destroy_deallocate()
art::jit::JitCodeCache::AllowInlineCacheAccess()
art::verifier::DoubleLoType const* art::verifier::RegTypeCache::CreatePrimitiveTypeInstance<art::verifier::DoubleLoType>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::ArenaStack::UpdatePeakStatsAndRestore(art::ArenaAllocatorStatsImpl<false> const&)
art::gc::space::ZygoteSpace::SweepCallback(unsigned int, art::mirror::Object**, void*)
art::Monitor::RemoveFromWaitSet(art::Thread*)
art::ElfOatFile::~ElfOatFile()
unix_file::FdFile::MarkUnchecked()
art::JNI::CallStaticShortMethod(_JNIEnv*, _jclass*, _jmethodID*, ...)
art::Thread::InitStringEntryPoints()
art::Indenter::xsputn(char const*, int)
vtable for art::verifier::UnresolvedReferenceType
art::DexFile::DecodeDebugLocalInfo(art::DexFile::CodeItem const*, bool, unsigned int, void (*)(void*, art::DexFile::LocalInfo const&), void*) const
art::jit::Jit::StopProfileSaver()
mspace_independent_comalloc
non-virtual thunk to art::gc::collector::ConcurrentCopying::MarkObject(art::mirror::Object*)
art::StackVisitor::~StackVisitor()
art::JNI::GetStaticByteField(_JNIEnv*, _jclass*, _jfieldID*)
art::OatHeader::UpdateChecksumWithHeaderData()
create_mspace_with_base
std::__1::__tree<std::__1::__value_type<unsigned char const*, std::__1::vector<art::mirror::HeapReference<art::mirror::Object>*, std::__1::allocator<art::mirror::HeapReference<art::mirror::Object>*> > >, std::__1::__map_value_compare<unsigned char const*, std::__1::__value_type<unsigned char const*, std::__1::vector<art::mirror::HeapReference<art::mirror::Object>*, std::__1::allocator<art::mirror::HeapReference<art::mirror::Object>*> > >, std::__1::less<unsigned char const*>, true>, std::__1::allocator<std::__1::__value_type<unsigned char const*, std::__1::vector<art::mirror::HeapReference<art::mirror::Object>*, std::__1::allocator<art::mirror::HeapReference<art::mirror::Object>*> > > > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned char const*, std::__1::vector<art::mirror::HeapReference<art::mirror::Object>*, std::__1::allocator<art::mirror::HeapReference<art::mirror::Object>*> > >, void*>*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::CompleteArgument()
non-virtual thunk to art::gc::collector::ConcurrentCopying::IsMarked(art::mirror::Object*)
art::JNI::GetStaticBooleanField(_JNIEnv*, _jclass*, _jfieldID*)
art::WellKnownClasses::org_apache_harmony_dalvik_ddmc_Chunk_length
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::verifier::VerifyMode& ()>::destroy()
art::gc::collector::MarkSweep::BindBitmaps()
art::LinkFieldsComparator::operator()(art::ArtField*, art::ArtField*)
art::hprof::NetStateEndianOutput::HandleFlush(unsigned char const*, unsigned int)
art::JNI::ReleaseDoubleArrayElements(_JNIEnv*, _jdoubleArray*, double*, int)
non-virtual thunk to art::gc::space::DlMallocSpace::Free(art::Thread*, art::mirror::Object*)
art::gc::Verification::CollectRootVisitor::~CollectRootVisitor()
art::mirror::String::Equals(art::StringPiece const&)
art::FindFieldFast(unsigned int, art::ArtMethod*, art::FindFieldType, unsigned int)
art::Thread::FinishStartup()
art::verifier::PreciseConstLoType::Dump() const
art::CheckJNI::GetJavaVM(_JNIEnv*, _JavaVM**)
art::DexLayoutSection::Subsection::Madvise(art::DexFile const*, int) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, bool& ()>::operator()()
art::gc::space::RegionSpace::GetObjectsAllocated()
art::Thread::CurrentFromGdb()
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_string()
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)5, false, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::Monitor::Monitor(art::Thread*, art::Thread*, art::mirror::Object*, int, unsigned int)
art::CheckJNI::CallFloatMethodA(_JNIEnv*, _jobject*, _jmethodID*, jvalue*)
std::__1::__split_buffer<std::__1::tuple<void const*, unsigned int, bool>*, std::__1::allocator<std::__1::tuple<void const*, unsigned int, bool>*>&>::push_back(std::__1::tuple<void const*, unsigned int, bool>*&&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>::__clone() const
art::verifier::RegType::IsInteger() const
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)5, false, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::ArtField::ProxyFindSystemClass(char const*)
art::gc::collector::SemiSpace::SweepLargeObjects(bool)
non-virtual thunk to art::gc::collector::PartialMarkSweep::~PartialMarkSweep()
art::DexRegisterLocationCatalog::GetDexRegisterLocation(unsigned int) const
art::Locks::unexpected_signal_lock_
art::JavaVMExt::HandleGetEnv(void**, int)
art::ProfileSaver::NotifyJitActivity()
art::OatFileAssistant::Lock(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::verifier::VerifyMode&)#1}, std::__1::allocator<{lambda(art::verifier::VerifyMode&)#1}>, void (art::verifier::VerifyMode&)>::destroy_deallocate()
art::verifier::RegTypeCache::Uninitialized(art::verifier::RegType const&, unsigned int)
unix_file::FdFile::CheckUsage() const
art::gc::Heap::AssertAllBumpPointerSpaceThreadLocalBuffersAreRevoked()
__register_frame_info_table_bases
art::gc::Heap::RequestConcurrentGC(art::Thread*, art::gc::GcCause, bool)
art::Dbg::GetThreadDebugSuspendCount(unsigned long long, art::JDWP::ExpandBuf*)
art::mirror::Method::SetArrayClass(art::mirror::Class*)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::DexFile const&)
artQuickProxyInvokeHandler
art::Thread::VerifyStackImpl()
art::gc::accounting::MemoryRangeBitmap<16u>::Clear(unsigned int)
art::detail::CmdlineParserArgumentInfo<art::MillisecondsToNanoseconds>::~CmdlineParserArgumentInfo()
artGet32InstanceFromCompiledCode
art::WellKnownClasses::org_apache_harmony_dalvik_ddmc_Chunk_data
art::jit::JitCodeCache::IncreaseCodeCacheCapacity()
art::VariantMapKey<art::TraceClockSource>::ValueDelete(void*) const
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::InvokeType const&)
artSetShortInstanceFromCode
art::JNI::CallStaticBooleanMethodA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
art::ObjectLock<art::mirror::Object>::ObjectLock(art::Thread*, art::Handle<art::mirror::Object>)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::IntoKey(art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::MillisecondsToNanoseconds& ()>::destroy_deallocate()
art::instrumentation::Instrumentation::EnableDeoptimization()
art::jit::Jit::DeleteThreadPool()
art::LinearAlloc::GetUsedMemory() const
art::ObjectLock<art::mirror::Class>::ObjectLock(art::Thread*, art::Handle<art::mirror::Class>)
void std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__push_back_slow_path<unsigned int const&>(unsigned int const&)
art::gc::space::MallocSpace::NonGrowthLimitCapacity() const
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::CompilerFilter::Filter const&)
art::gc::space::BumpPointerSpace::GetType() const
artThrowNullPointerExceptionFromCode
art::Thread::GetCpuMicroTime() const
vtable for art::gc::collector::ConcurrentCopying::ActivateReadBarrierEntrypointsCheckpoint
art::ObjectRegistry::ContainsLocked(art::Thread*, art::ObjPtr<art::mirror::Object>, int, art::ObjectRegistryEntry**)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::ReaderWriterMutex const&)
art::JDWP::JdwpState::Create(art::JDWP::JdwpOptions const*)
art::ElfFileImpl<ElfTypes64>::GetHashBucketNum() const
void art::mirror::Class::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::gc::collector::SemiSpace::MarkObjectVisitor>(art::ObjPtr<art::mirror::Class>, art::gc::collector::SemiSpace::MarkObjectVisitor const&)
art::OatFile::IsDebuggable() const
std::__1::__deque_base<art::ArtField*, std::__1::allocator<art::ArtField*> >::~__deque_base()
art::gc::collector::ConcurrentCopying::GetCollectorType() const
art::detail::CmdlineParserArgumentInfo<art::Memory<1024u> >::~CmdlineParserArgumentInfo()
art::CumulativeLogger::SetName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::JNI::ReleaseStringCritical(_JNIEnv*, _jstring*, unsigned short const*)
art::gc::allocator::RosAlloc::AllocFromRun(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::gc::allocator::RosAlloc::Run::Verify(art::Thread*, art::gc::allocator::RosAlloc*, bool)
art::ObjectLock<art::mirror::Class>::Notify()
art::verifier::ByteType::Destroy()
art::mirror::Class::FindConstructor(art::StringPiece const&, art::PointerSize)
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)3, false, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::gc::collector::MarkSweep::CardScanTask::~CardScanTask()
art::mirror::PrimitiveArray<float>::GetWithoutChecks(int)
art::ScopedCheck::CheckVarArgs(art::ScopedObjectAccess&, art::VarArgs const*)
art::mirror::MethodHandleImpl::ResetClass()
art::gc::AllocRecordObjectMap::BroadcastForNewAllocationRecords()
MterpInstanceOf
art::mirror::PrimitiveArray<int>::Set(int, int)
art::WellKnownClasses::dalvik_system_PathClassLoader
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int> art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::CreateTypedBuilder<unsigned int>()
art::detail::CmdlineParseArgument<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::ParseArgument(art::TokenRange const&, unsigned int*)
art::CheckJNI::ToReflectedField(_JNIEnv*, _jclass*, _jfieldID*, unsigned char)
art::CheckJNI::CallCharMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)
art::DexFile::~DexFile()
art::interpreter::EnterInterpreterFromDeoptimize(art::Thread*, art::ShadowFrame*, bool, art::JValue*)
art::interpreter::UnstartedRuntime::UnstartedUnsafeCompareAndSwapLong(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::ElfFileImpl<ElfTypes32>::FixupProgramHeaders(unsigned int)
art::gc::space::ContinuousMemMapAllocSpace::GetMarkBitmap() const
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<art::DexFile const*, std::__1::vector<art::dex::TypeIndex, art::ScopedArenaAllocatorAdapter<art::dex::TypeIndex> > >, std::__1::__tree_node<std::__1::__value_type<art::DexFile const*, std::__1::vector<art::dex::TypeIndex, art::ScopedArenaAllocatorAdapter<art::dex::TypeIndex> > >, void*>*, int>, bool> std::__1::__tree<std::__1::__value_type<art::DexFile const*, std::__1::vector<art::dex::TypeIndex, art::ScopedArenaAllocatorAdapter<art::dex::TypeIndex> > >, std::__1::__map_value_compare<art::DexFile const*, std::__1::__value_type<art::DexFile const*, std::__1::vector<art::dex::TypeIndex, art::ScopedArenaAllocatorAdapter<art::dex::TypeIndex> > >, std::__1::less<art::DexFile const*>, true>, art::ScopedArenaAllocatorAdapter<std::__1::__value_type<art::DexFile const*, std::__1::vector<art::dex::TypeIndex, art::ScopedArenaAllocatorAdapter<art::dex::TypeIndex> > > > >::__emplace_unique_key_args<art::DexFile const*, art::DexFile const*&, std::__1::vector<art::dex::TypeIndex, art::ScopedArenaAllocatorAdapter<art::dex::TypeIndex> > >(art::DexFile const* const&, art::DexFile const*&, std::__1::vector<art::dex::TypeIndex, art::ScopedArenaAllocatorAdapter<art::dex::TypeIndex> >&&)
art::Transaction::RecordWriteFieldShort(art::mirror::Object*, art::MemberOffset, short, bool)
art::InternTable::SweepInternTableWeaks(art::IsMarkedVisitor*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)
bool art::interpreter::DoFilledNewArray<true, false, false>(art::Instruction const*, art::ShadowFrame const&, art::Thread*, art::JValue*)
unsigned long long art::ObjectRegistry::Add<art::mirror::Object>(art::Handle<art::mirror::Object>)
art::VariantMapKey<unsigned int>::ValueDelete(void*) const
art::ClassLinker::GetDescriptorForProxy(art::ObjPtr<art::mirror::Class>)
art::WellKnownClasses::org_apache_harmony_dalvik_ddmc_Chunk_type
art::JDWP::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::JDWP::JdwpStepSize const&)
art::gc::space::RosAllocSpace::Clear()
art::IndirectReferenceTable::~IndirectReferenceTable()
art::RootInfo::~RootInfo()
art::JNI::ExceptionClear(_JNIEnv*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::BackgroundGcOption&)#1}, std::__1::allocator<{lambda(art::BackgroundGcOption&)#1}>, void (art::BackgroundGcOption&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::BackgroundGcOption&)#1}> >*) const
art::verifier::BooleanType::GetAssignmentTypeImpl() const
art::gc::Heap::CheckPreconditionsForAllocObject(art::ObjPtr<art::mirror::Class>, unsigned int)
art::ti::Agent::DoLoadHelper(bool, int*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::gc::accounting::SpaceBitmap<4096u>::SpaceBitmap(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::MemMap*, unsigned int*, unsigned int, void const*, unsigned int)
art::jit::Jit::StartProfileSaver(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::TraceClockSource&)#1}, std::__1::allocator<{lambda(art::TraceClockSource&)#1}>, void (art::TraceClockSource&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::TraceClockSource&)#1}> >*) const
std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::ReleaseOrDefault<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)
art::Dbg::SetFieldValue(unsigned long long, unsigned long long, unsigned long long, int)
art::gc::accounting::HeapBitmap::AddLargeObjectBitmap(art::gc::accounting::SpaceBitmap<4096u>*)
art::WellKnownClasses::java_lang_invoke_MethodHandle_invoke
art::ProfileCompilationInfo::kProfileVersion
art::verifier::MethodVerifier::MethodVerifier(art::Thread*, art::DexFile const*, art::Handle<art::mirror::DexCache>, art::Handle<art::mirror::ClassLoader>, art::DexFile::ClassDef const&, art::DexFile::CodeItem const*, unsigned int, art::ArtMethod*, unsigned int, bool, bool, bool, bool, bool)
artAllocArrayFromCodeResolvedTLAB
void art::mirror::Object::VisitFieldsReferences<false, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor>(unsigned int, art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor const&)
art::gc::collector::ConcurrentCopying::ActivateReadBarrierEntrypointsCheckpoint::Run(art::Thread*)
art::instrumentation::Instrumentation::DexPcMovedEventImpl(art::Thread*, art::ObjPtr<art::mirror::Object>, art::ArtMethod*, unsigned int) const
art::MemoryRegion::CopyFrom(unsigned int, art::MemoryRegion const&) const
art::verifier::UnresolvedReferenceType::IsUnresolvedTypes() const
art::gc::collector::MarkSweep::MarkObjectParallel(art::mirror::Object*)
_ZNSt3__16vectorIPKcNS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_
art::x86::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::x86::Register const&)
art::verifier::MethodVerifier::VerifyMethodAndDump(art::Thread*, art::VariableIndentationOutputStream*, unsigned int, art::DexFile const*, art::Handle<art::mirror::DexCache>, art::Handle<art::mirror::ClassLoader>, art::DexFile::ClassDef const&, art::DexFile::CodeItem const*, art::ArtMethod*, unsigned int)
_tr_flush_bits
art::CheckJNI::CallStaticIntMethodV(_JNIEnv*, _jclass*, _jmethodID*, char*)
bool art::interpreter::DoFieldGet<(art::FindFieldType)6, (art::Primitive::Type)3, false>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::ProfileCompilationInfo::GroupClassesByDex(std::__1::set<art::ProfileCompilationInfo::ClassReference, std::__1::less<art::ProfileCompilationInfo::ClassReference>, art::ArenaAllocatorAdapter<art::ProfileCompilationInfo::ClassReference> > const&, art::SafeMap<unsigned char, std::__1::vector<art::dex::TypeIndex, std::__1::allocator<art::dex::TypeIndex> >, std::__1::less<unsigned char>, std::__1::allocator<std::__1::pair<unsigned char const, std::__1::vector<art::dex::TypeIndex, std::__1::allocator<art::dex::TypeIndex> > > > >*)
art::Transaction::RecordWriteField64(art::mirror::Object*, art::MemberOffset, unsigned long long, bool)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::XGcOption& ()>
art::WellKnownClasses::java_lang_annotation_Annotation__array
art::JNI::SetFloatArrayRegion(_JNIEnv*, _jfloatArray*, int, int, float const*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::IntoKey(art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions> const&)
MterpSetShortStatic
art::ClassLinker::CreateProxyMethod(art::Handle<art::mirror::Class>, art::ArtMethod*, art::ArtMethod*)
art::ImageHeader::GetMagic() const
art::StackVisitor::GetVRegFromOptimizedCode(art::ArtMethod*, unsigned short, art::VRegKind, unsigned int*) const
art::OatHeader::GetQuickGenericJniTrampolineOffset() const
art::verifier::RegTypeCache::MakeUnresolvedReference()
vtable for std::__1::basic_streambuf<char, std::__1::char_traits<char> >
art::Monitor::FailedUnlock(art::mirror::Object*, unsigned int, unsigned int, art::Monitor*)
unix_file::FdFile::ResetOffset()
art::CumulativeLogger::CumulativeLogger(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
non-virtual thunk to art::gc::collector::GarbageCollector::~GarbageCollector()
art::JavaVMExt::TrimGlobals()
art::CHAStackVisitor::~CHAStackVisitor()
art::gc::Heap::CreateThreadPool()
art::OatFile::OatClass::GetOatMethodOffsetsOffset(unsigned int) const
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::LockLevel const&)
art::JDWP::JdwpNetStateBase::~JdwpNetStateBase()
art::gc::TaskProcessor::Start(art::Thread*)
void art::mirror::Class::GetAccessFlagsDCheck<(art::VerifyObjectFlags)1>()
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)3, true, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::JNI::NewDoubleArray(_JNIEnv*, int)
art::ObjectRegistry::IsCollected(unsigned long long)
void art::ClassTable::VisitRoots<art::FixupInternVisitor>(art::FixupInternVisitor const&)
art::gc::allocator::RosAlloc::Trim()
art::CmdlineType<art::JDWP::JdwpOptions>::ParseJdwpOption(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::JDWP::JdwpOptions*)
art::MipsInstructionSetFeatures::FromBitmap(unsigned int)
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::uflow()
art::verifier::FloatType::Dump() const
art::DexFile::ReadUnsignedInt(unsigned char const*, int, bool)
art::PLUGIN_DEINITIALIZATION_FUNCTION_NAME
art::ClassLinker::ResolveMethodHandleForField(art::Thread*, art::DexFile::MethodHandleItem const&, art::ArtMethod*)
art::verifier::UnresolvedUninitializedRefType::CheckInvariants() const
artReadBarrierMark
_ZN3art6detail11ToStringAnyINS_6MemoryILj1024EEEEENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERKT_PNS4_9enable_ifIXsr25SupportsInsertionOperatorISB_EE5valueEvE4typeE
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::IntoKey(art::RuntimeArgumentMapKey<art::ExperimentalFlags> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ExperimentalFlags& ()>::~__func()
art::verifier::RegTypeCache::InsertClass(art::StringPiece const&, art::mirror::Class*, bool)
art::gc::Heap::~Heap()
std::__1::__hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> >::rehash(unsigned int)
art::FixupArtMethodArrayVisitor::Visit(art::ArtMethod*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::IntoKey(art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions> const&)::{lambda(art::JDWP::JdwpOptions&)#1}, std::__1::allocator<{lambda(art::JDWP::JdwpOptions&)#1}>, void (art::JDWP::JdwpOptions&)>::destroy()
art::Runtime::EnvSnapshot::GetSnapshot() const
art::BaseMutex::CheckSafeToWait(art::Thread*)
void std::__1::vector<art::DexFileAndClassPair, std::__1::allocator<art::DexFileAndClassPair> >::__push_back_slow_path<art::DexFileAndClassPair>(art::DexFileAndClassPair&&)
art::Dbg::DdmSendChunkV(unsigned int, iovec const*, int)
art::JNI::NewObjectV(_JNIEnv*, _jclass*, _jmethodID*, char*)
vtable for art::FaultHandler
art::JNI::CallLongMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)
art::Dbg::GetOwnedMonitors(unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >*, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >*)
art::ElfFile::~ElfFile()
art::gc::accounting::HeapBitmap::RemoveContinuousSpaceBitmap(art::gc::accounting::SpaceBitmap<8u>*)
art::ProfileSaver::Run()
art::OatMethodOffsets::OatMethodOffsets(unsigned int)
art::ElfFile::ElfFile(art::ElfFileImpl<ElfTypes64>*)
art::RuntimeArgumentMap::PropertiesList
art::CheckJNI::CallStaticShortMethod(_JNIEnv*, _jclass*, _jmethodID*, ...)
art::InternTable::InternStrongImageString(art::ObjPtr<art::mirror::String>)
art::JNI::CallNonvirtualFloatMethodV(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, char*)
art::JobjectComparator::operator()(_jobject*, _jobject*) const
art::OatHeader::GetJniDlsymLookupOffset() const
art::ReaderWriterMutex::IsSharedHeld(art::Thread const*) const
art::jit::JitCodeCache::NotifyCompilationOf(art::ArtMethod*, art::Thread*, bool)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::IntoKey(art::RuntimeArgumentMapKey<bool> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, bool& ()>::__clone(std::__1::__function::__base<bool&>*) const
artGetObjStaticFromCompiledCode
art::DexFileVerifier::CheckConstructorProperties(unsigned int, unsigned int)
art::DexRegisterMap::GetLocationInternalKind(unsigned short, unsigned short, art::CodeInfo const&, art::CodeInfoEncoding const&) const
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Instruction::Signatures const&)
art::ElfOatFile::PreLoad()
art::ClassLoaderContext::EncodeContext(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool) const
art::VariantMapKey<art::JDWP::JdwpOptions>::ValueClone(void*) const
art::verifier::MethodVerifier::CodeFlowVerifyMethod()
art::interpreter::EnterInterpreterFromEntryPoint(art::Thread*, art::DexFile::CodeItem const*, art::ShadowFrame*)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::IntoKey(art::RuntimeArgumentMapKey<double> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, double& ()>
std::__1::__vector_base<art::Breakpoint, std::__1::allocator<art::Breakpoint> >::~__vector_base()
art::gc::space::DlMallocSpace::AsDlMallocSpace()
artGet32StaticFromCompiledCode
art::gc::accounting::ModUnionTableReferenceCache::~ModUnionTableReferenceCache()
bool art::interpreter::DoCall<false, false>(art::ArtMethod*, art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)
art::detail::CmdlineParseArgument<art::Memory<1024u> >::ParseArgumentSingle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::Context::Create()
art::Dbg::DdmBroadcast(bool)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*)
art::JII::DestroyJavaVM(_JavaVM*)
art::mirror::String::AllocFromUtf16(art::Thread*, int, unsigned short const*)
art::SignalCatcher::ShouldHalt()
art::Arm64InstructionSetFeatures::FromBitmap(unsigned int)
art::gc::Heap::GetBlockingGcTime() const
art::CmdlineType<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::ParseAndAppend(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)
art::RuntimeArgumentMapKey<art::verifier::VerifyMode>::~RuntimeArgumentMapKey()
art::ClassLoaderContext::EncodeContextForOatFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
art::OatFileAssistant::GetRequiredDexChecksums()
art::Thread::PopVerifier(art::verifier::MethodVerifier*)
art::dex::tracking::DexFileTrackingRegistrar::SetDexSections()
art::ReferenceTable::ReferenceTable(char const*, unsigned int, unsigned int)
art::WellKnownClasses::java_lang_ThreadGroup_systemThreadGroup
art::Runtime::VisitNonConcurrentRoots(art::RootVisitor*, art::VisitRootFlags)
art::verifier::RegType::IsUndefined() const
art::interpreter::ArtInterpreterToCompiledCodeBridge(art::Thread*, art::ArtMethod*, art::ShadowFrame*, unsigned short, art::JValue*)
MterpInvokeVirtualQuick
art::BitVector::~BitVector()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::BackgroundGcOption> const&)::{lambda(art::BackgroundGcOption&)#1}, std::__1::allocator<{lambda(art::BackgroundGcOption&)#1}>, void (art::BackgroundGcOption&)>::destroy()
art::VariantMapKey<art::Memory<1u> >::ValueDelete(void*) const
art::mirror::Class::DumpClass(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, int)
art::gc::space::ImageSpace::CreateBootImage(char const*, art::InstructionSet, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::IntoKey(art::RuntimeArgumentMapKey<art::TraceClockSource> const&)::{lambda(art::TraceClockSource&)#1}, std::__1::allocator<{lambda(art::TraceClockSource&)#1}>, void (art::TraceClockSource&)>::operator()(art::TraceClockSource&)
art::Runtime::RecordWriteFieldBoolean(art::mirror::Object*, art::MemberOffset, unsigned char, bool) const
art::gc::accounting::Bitmap::Bitmap(art::MemMap*, unsigned int)
art::verifier::RegisterLine::SetRegToLockDepth(unsigned int, unsigned int)
art::SignalCatcher::HandleSigQuit()
art::BuildInternalStackTraceVisitor<true>::AddFrame(art::ArtMethod*, unsigned int)
art::HexDump::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::DexFileVerifier::CheckInterCallSiteIdItem()
art::gc::allocator::RosAlloc::numOfPages
art::gc::Heap::AllowNewAllocationRecords() const
art::ImageHeader::RelocateImage(long)
art::JniMethodFastEnd(unsigned int, art::Thread*)
art::gc::accounting::SpaceBitmap<8u>::ComputeHeapSize(unsigned long long)
art::verifier::ConflictType::~ConflictType()
std::__1::__tree<std::__1::__value_type<art::detail::VariantMapKeyRaw const*, void*>, std::__1::__map_value_compare<art::detail::VariantMapKeyRaw const*, std::__1::__value_type<art::detail::VariantMapKeyRaw const*, void*>, art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::KeyComparator, true>, std::__1::allocator<std::__1::__value_type<art::detail::VariantMapKeyRaw const*, void*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<art::detail::VariantMapKeyRaw const*, void*>, void*>*)
mspace_footprint
art::OatFileBase* art::OatFileBase::OpenOatFile<art::ElfOatFile>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned char*, unsigned char*, bool, bool, bool, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::IntoKey(art::RuntimeArgumentMapKey<unsigned int> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, unsigned int& ()>::destroy()
art::Dbg::GetThreadStatus(unsigned long long, art::JDWP::JdwpThreadStatus*, art::JDWP::JdwpSuspendStatus*)
art::DexFile::GetMultiDexChecksums(char const*, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::gc::Heap::GetBlockingGcCount() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::IntoKey(art::RuntimeArgumentMapKey<double> const&)::{lambda(double&)#1}, std::__1::allocator<{lambda(double&)#1}>, void (double&)>::__clone() const
std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::IntoKey(art::RuntimeArgumentMapKey<art::LogVerbosity> const&)
art::gc::space::ZygoteSpace::Clear()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}> >*) const
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setbuf(char*, int)
art::interpreter::CheckMterpAsmConstants()
art::BitVector::DumpHelper(char const*, std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >&) const
art::VariantMapKey<art::Memory<1024u> >::~VariantMapKey()
art::mirror::PrimitiveArray<unsigned char>::Memmove(int, art::ObjPtr<art::mirror::PrimitiveArray<unsigned char> >, int, int)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType> art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::CreateTypedBuilder<art::gc::space::LargeObjectSpaceType>()
art::ElfFileImpl<ElfTypes32>::GetSymbol(unsigned int, unsigned int) const
art::ArtMethod* art::verifier::MethodVerifier::VerifyInvocationArgsFromIterator<art::verifier::MethodParamListDescriptorIterator>(art::verifier::MethodParamListDescriptorIterator*, art::Instruction const*, art::verifier::MethodType, bool, art::ArtMethod*)
art::Primitive::Descriptor(art::Primitive::Type)
art::gc::accounting::SpaceBitmap<4096u>::AtomicTestAndSet(art::mirror::Object const*)
art::QuickArgumentVisitor::~QuickArgumentVisitor()
art::jit::Jit::jit_compiler_handle_
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::TraceClockSource&)#1}, std::__1::allocator<{lambda(art::TraceClockSource&)#1}>, void (art::TraceClockSource&)>::destroy()
art::interpreter::UnstartedRuntime::UnstartedJNIObjectInternalClone(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
art::Thread::DeactivateSingleStepControl()
art::gc::space::BumpPointerSpace::RevokeAllThreadLocalBuffers()
vtable for art::VerifyRootVisitor
art::gc::Heap::SetIdealFootprint(unsigned int)
art::detail::CmdlineParseArgument<art::gc::space::LargeObjectSpaceType>::ParseArgumentSingle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
vtable for art::RuntimeArgumentMapKey<bool (*)()>
inflate
vtable for art::GetResolvedClassesVisitor
art::CmdlineType<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::ParseAndAppend(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)
std::__1::basic_filebuf<char, std::__1::char_traits<char> >::basic_filebuf()
art::ClassLinker::WaitForInitializeClass(art::Handle<art::mirror::Class>, art::Thread*, art::ObjectLock<art::mirror::Class>&)
art::ProfileCompilationInfo::GetMethodsRegionSize(art::ProfileCompilationInfo::DexFileData const&)
vtable for art::RuntimeArgumentMapKey<art::Unit>
art::CheckJNI::NewBooleanArray(_JNIEnv*, int)
art::DexFile::CreateSignature(art::StringPiece const&) const
art::ConvertModifiedUtf8ToUtf16(unsigned short*, char const*)
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::gc::collector::ConcurrentCopying::VerifyNoMissingCardMarkVisitor const>(art::gc::collector::ConcurrentCopying::VerifyNoMissingCardMarkVisitor const&, art::PointerSize)
art::gc::space::ImageSpaceLoader::FixupArtMethodVisitor::~FixupArtMethodVisitor()
art::gc::space::BumpPointerSpace::GetObjectsAllocated()
void std::__1::__sift_down<std::__1::less<art::DexFileAndClassPair>&, std::__1::__wrap_iter<art::DexFileAndClassPair*> >(std::__1::__wrap_iter<art::DexFileAndClassPair*>, std::__1::__wrap_iter<art::DexFileAndClassPair*>, std::__1::less<art::DexFileAndClassPair>&, std::__1::iterator_traits<std::__1::__wrap_iter<art::DexFileAndClassPair*> >::difference_type, std::__1::__wrap_iter<art::DexFileAndClassPair*>)
art::detail::CmdlineParseArgument<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::GetNumTokens() const
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::CompleteArgument()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::ExperimentalFlags&)#1}, std::__1::allocator<{lambda(art::ExperimentalFlags&)#1}>, void (art::ExperimentalFlags&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::ExperimentalFlags&)#1}> >*) const
art::gc::ScopedGCCriticalSection::~ScopedGCCriticalSection()
art::Runtime::GetMainThreadGroup() const
art::ElfFile::Begin() const
non-virtual thunk to art::gc::space::MallocSpace::~MallocSpace()
std::__1::__shared_ptr_emplace<unsigned int, std::__1::allocator<unsigned int> >::__on_zero_shared()
std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<art::gc::AllocRecordStackTraceElement const*, unsigned int>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<art::gc::AllocRecordStackTraceElement const*, unsigned int>, std::__1::__unordered_map_hasher<art::gc::AllocRecordStackTraceElement const*, std::__1::__hash_value_type<art::gc::AllocRecordStackTraceElement const*, unsigned int>, art::gc::HashAllocRecordTypesPtr<art::gc::AllocRecordStackTraceElement>, true>, std::__1::__unordered_map_equal<art::gc::AllocRecordStackTraceElement const*, std::__1::__hash_value_type<art::gc::AllocRecordStackTraceElement const*, unsigned int>, art::gc::EqAllocRecordTypesPtr<art::gc::AllocRecordStackTraceElement>, true>, std::__1::allocator<std::__1::__hash_value_type<art::gc::AllocRecordStackTraceElement const*, unsigned int> > >::find<art::gc::AllocRecordStackTraceElement const*>(art::gc::AllocRecordStackTraceElement const* const&)
std::__1::__deque_base<std::__1::tuple<void const*, unsigned int, bool>, std::__1::allocator<std::__1::tuple<void const*, unsigned int, bool> > >::~__deque_base()
art::hprof::EndianOutputBuffered::HandleEndRecord()
art::detail::CmdlineParserArgumentInfo<art::MillisecondsToNanoseconds>::CompleteArgument()
art::RuntimeArgumentMap::BootClassPathDexList
art::Runtime::AbortTransactionAndThrowAbortError(art::Thread*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
non-virtual thunk to art::gc::collector::StickyMarkSweep::~StickyMarkSweep()
art::detail::CmdlineParseArgument<double>::GetTypeName() const
art::gc::space::ImageSpaceLoader::Load(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::ElfFileImpl<ElfTypes32>::GetSectionHeaderNum() const
art::gc::collector::PartialMarkSweep::~PartialMarkSweep()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>::__clone() const
art::verifier::UnresolvedMergedType::IsUnresolvedTypes() const
non-virtual thunk to art::gc::collector::MarkSweep::MarkObject(art::mirror::Object*)
art::ArenaAllocator::~ArenaAllocator()
art::ElfFileImpl<ElfTypes32>::CheckSectionsExist(unix_file::FdFile*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
art::gc::allocator::RosAlloc::~RosAlloc()
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<art::detail::VariantMapKeyRaw const*, void*>, std::__1::__tree_node<std::__1::__value_type<art::detail::VariantMapKeyRaw const*, void*>, void*>*, int>, bool> std::__1::__tree<std::__1::__value_type<art::detail::VariantMapKeyRaw const*, void*>, std::__1::__map_value_compare<art::detail::VariantMapKeyRaw const*, std::__1::__value_type<art::detail::VariantMapKeyRaw const*, void*>, art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::KeyComparator, true>, std::__1::allocator<std::__1::__value_type<art::detail::VariantMapKeyRaw const*, void*> > >::__emplace_unique_key_args<art::detail::VariantMapKeyRaw const*, std::__1::pair<art::detail::VariantMapKeyRaw const* const, void*> >(art::detail::VariantMapKeyRaw const* const&, std::__1::pair<art::detail::VariantMapKeyRaw const* const, void*>&&)
std::__1::__hash_table<std::__1::__hash_value_type<art::ArtMethod*, unsigned int>, std::__1::__unordered_map_hasher<art::ArtMethod*, std::__1::__hash_value_type<art::ArtMethod*, unsigned int>, std::__1::hash<art::ArtMethod*>, true>, std::__1::__unordered_map_equal<art::ArtMethod*, std::__1::__hash_value_type<art::ArtMethod*, unsigned int>, std::__1::equal_to<art::ArtMethod*>, true>, std::__1::allocator<std::__1::__hash_value_type<art::ArtMethod*, unsigned int> > >::__rehash(unsigned int)
art::VisitClassLoaderClassesVisitor::~VisitClassLoaderClassesVisitor()
MterpThreadFenceForConstructor
art::CheckJII::GetEnv(_JavaVM*, void**, int)
art::gc::collector::ConcurrentCopying::VerifyNoMissingCardMarkVisitor::CheckReference(art::mirror::Object*, int) const
art::mirror::Throwable::SetClass(art::ObjPtr<art::mirror::Class>)
non-virtual thunk to art::gc::ZygoteCompactingCollector::~ZygoteCompactingCollector()
art::jit::Jit::JitAtFirstUse()
void art::JNI::GetPrimitiveArrayRegion<_jdoubleArray*, double, art::mirror::PrimitiveArray<double> >(_JNIEnv*, _jdoubleArray*, int, int, double*)
art::verifier::MethodVerifier::Init()
art::jit::JitCodeCache::LookupMethodHeader(unsigned int, art::ArtMethod*)
art::gc::AllocRecordObjectMap::AllocRecordObjectMap()
artAllocStringFromStringFromCodeRegion
art::gc::collector::ConcurrentCopying::InitializePhase()
art::OatFileManager::GetBootOatFiles() const
art::Dbg::ToJdwpThreadStatus(art::ThreadState)
std::__1::basic_filebuf<char, std::__1::char_traits<char> >::pbackfail(int)
get_crc_table
std::__1::__split_buffer<art::instrumentation::InstrumentationStackFrame*, std::__1::allocator<art::instrumentation::InstrumentationStackFrame*> >::push_front(art::instrumentation::InstrumentationStackFrame* const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(bool&)#1}, std::__1::allocator<{lambda(bool&)#1}>, void (bool&)>::__clone() const
art::OatFileAssistant::~OatFileAssistant()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::gc::space::LargeObjectSpaceType& ()>::destroy()
art::VariantMapKey<art::JDWP::JdwpOptions>::~VariantMapKey()
art::Thread::Interrupt(art::Thread*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoKey(art::RuntimeArgumentMapKey<art::Unit> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>::__clone() const
virtual thunk to std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()
art::mirror::MethodHandleImpl::static_class_
art::DlOpenOatFile::~DlOpenOatFile()
art::ElfFileImpl<ElfTypes32>::Size() const
art::BitVector::NumSetBits(unsigned int const*, unsigned int)
art::JNI::SetFloatField(_JNIEnv*, _jobject*, _jfieldID*, float)
art::ClassLinker::CreateProxyConstructor(art::Handle<art::mirror::Class>, art::ArtMethod*)
bool art::interpreter::DoIPutQuick<(art::Primitive::Type)5, true>(art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::JNI::CallNonvirtualIntMethod(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, ...)
art::Dbg::UpdateDebugger(art::Thread*, art::mirror::Object*, art::ArtMethod*, unsigned int, int, art::JValue const*)
std::__1::__shared_ptr_emplace<art::Memory<1u>, std::__1::allocator<art::Memory<1u> > >::~__shared_ptr_emplace()
art::Allocator::~Allocator()
art::mirror::PrimitiveArray<int>::Alloc(art::Thread*, unsigned int)
art::gc::space::MemoryToolLargeObjectMapSpace::Alloc(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
std::__1::function<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >& ()>::swap(std::__1::function<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >& ()>&)
art::ProfileSaver::HasSeenMethod(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, art::MethodReference)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)::{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}, std::__1::allocator<{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}>, void (std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)>
art::verifier::MethodVerifier::FindAccessedFieldAtDexPc(art::ArtMethod*, unsigned int)
art::JDWP::JdwpNetStateBase::ConsumeBytes(unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1u> > const&)::{lambda(art::Memory<1u>&)#1}, std::__1::allocator<{lambda(art::Memory<1u>&)#1}>, void (art::Memory<1u>&)>::~__func()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::IntoKey(art::RuntimeArgumentMapKey<unsigned int> const&)::{lambda(unsigned int&)#1}, std::__1::allocator<{lambda(unsigned int&)#1}>, void (unsigned int&)>::~__func()
art::gc::collector::MarkCompact::RevokeAllThreadLocalBuffers()
art::Runtime::AddCurrentRuntimeFeaturesAsDex2OatArguments(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::IntoKey(art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions> const&)::{lambda(art::JDWP::JdwpOptions&)#1}, std::__1::allocator<{lambda(art::JDWP::JdwpOptions&)#1}>, void (art::JDWP::JdwpOptions&)>::operator()(art::JDWP::JdwpOptions&)
void art::mirror::VisitDexCachePairs<art::mirror::MethodType, (art::ReadBarrierOption)0, art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor>(std::__1::atomic<art::mirror::DexCachePair<art::mirror::MethodType> >*, unsigned int, art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor const&)
art::JniMethodStartSynchronized(_jobject*, art::Thread*)
art::ArenaAllocatorMemoryTool::DoMakeUndefined(void*, unsigned int)
art::CheckJNI::SetStaticObjectField(_JNIEnv*, _jclass*, _jfieldID*, _jobject*)
art::mirror::Class::FindInterfaceMethod(art::StringPiece const&, art::StringPiece const&, art::PointerSize)
art::gc::space::BumpPointerSpace::Contains(art::mirror::Object const*) const
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<art::Unit>(art::RuntimeArgumentMapKey<art::Unit> const&)
art::mirror::Field::GetArtField()
art::mirror::ClassExt::VisitRoots(art::RootVisitor*)
art::mirror::Method::VisitRoots(art::RootVisitor*)
art::Thread::DeoptimizeWithDeoptimizationException(art::JValue*)
art::gc::collector::SemiSpace::ResizeMarkStack(unsigned int)
art::gc::space::BumpPointerSpace::~BumpPointerSpace()
art::verifier::MethodVerifier::CheckBranchTarget(unsigned int)
art::ProfileCompilationInfo::SafeBuffer::CompareAndAdvance(unsigned char const*, unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)::{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}, std::__1::allocator<{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}>, void (std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)>::__clone() const
art::Runtime::SweepSystemWeaks(art::IsMarkedVisitor*)
artSetShortStaticFromCode
art::Runtime::SetJavaDebuggable(bool)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::TraceClockSource& ()>::destroy()
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::mirror::CopyReferenceFieldsWithReadBarrierVisitor const>(art::mirror::CopyReferenceFieldsWithReadBarrierVisitor const&, art::PointerSize)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool> art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::WithValues<bool>(std::initializer_list<bool>)
art::JValue art::interpreter::ExecuteSwitchImpl<true, true>(art::Thread*, art::DexFile::CodeItem const*, art::ShadowFrame&, art::JValue, bool)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
art::mirror::PrimitiveArray<float>::Set(int, float)
art::GetAndroidData()
art::mirror::PrimitiveArray<long long>::Memcpy(int, art::ObjPtr<art::mirror::PrimitiveArray<long long> >, int, int)
art::gc::collector::MarkSweep::MarkStackTask<false>::~MarkStackTask()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>::destroy_deallocate()
art::gc::collector::MarkSweep::RecursiveMark()
void art::gc::accounting::CardTable::ModifyCardsAtomic<art::gc::AgeCardVisitor, art::gc::accounting::RememberedSetCardVisitor>(unsigned char*, unsigned char*, art::gc::AgeCardVisitor const&, art::gc::accounting::RememberedSetCardVisitor const&)
art::verifier::MethodVerifier::VerifyMethod(art::Thread*, unsigned int, art::DexFile const*, art::Handle<art::mirror::DexCache>, art::Handle<art::mirror::ClassLoader>, art::DexFile::ClassDef const&, art::DexFile::CodeItem const*, art::ArtMethod*, unsigned int, art::CompilerCallbacks*, bool, art::verifier::HardFailLogMode, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::interpreter::UnstartedRuntime::UnstartedIntegerParseInt(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::BitVector::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) const
std::__1::__shared_ptr_emplace<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::~__shared_ptr_emplace()
deflateResetKeep
art::ClassLoaderContext::ExtractClassLoaderType(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::JNI::RegisterNatives(_JNIEnv*, _jclass*, JNINativeMethod const*, int)
art::ProfileCompilationInfo::GetOrAddDexFileData(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned int)
art::QuickExceptionHandler::DumpFramesWithType(art::Thread*, bool)
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
vtable for art::detail::CmdlineParseArgument<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >
art::WellKnownClasses::libcore_reflect_AnnotationMember_init
non-virtual thunk to art::gc::space::DlMallocSpace::~DlMallocSpace()
art::gc::space::ImageSpace::ExtractMultiImageLocations(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::XGcOption> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::XGcOption& ()>::destroy()
art::JNI::CallStaticLongMethod(_JNIEnv*, _jclass*, _jmethodID*, ...)
art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions>::~RuntimeArgumentMapKey()
art::Runtime::VisitThreadRoots(art::RootVisitor*, art::VisitRootFlags)
art::MemMapArena::~MemMapArena()
art::Runtime::Create(art::RuntimeArgumentMap&&)
art::verifier::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::verifier::VerifyMode const&)
art::EntrypointCanTriggerGC(art::QuickEntrypointEnum)
art::Transaction::RecordWeakStringRemoval(art::ObjPtr<art::mirror::String>)
art::IndirectReferenceTable::SetSegmentState(art::IRTSegmentState)
int* art::JNI::GetPrimitiveArray<_jintArray*, int, art::mirror::PrimitiveArray<int> >(_JNIEnv*, _jintArray*, unsigned char*)
art::WellKnownClasses::java_lang_ThreadGroup_parent
art::mirror::PrimitiveArray<long long>::GetData()
art::verifier::VerifierDeps::AddFieldResolution(art::DexFile const&, unsigned int, art::ArtField*)
std::__1::__tree<std::__1::__value_type<unsigned int, art::Transaction::ObjectLog::FieldValue>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, art::Transaction::ObjectLog::FieldValue>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, art::Transaction::ObjectLog::FieldValue> > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned int, art::Transaction::ObjectLog::FieldValue>, void*>*)
art::ArenaPool::ArenaPool(bool, bool, char const*)
art::Thread::DumpJavaStack(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bool, bool) const
art::hprof::Hprof::ProcessHeap(bool)
art::instrumentation::Instrumentation::ShouldNotifyMethodEnterExitEvents() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)::{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}, std::__1::allocator<{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}>, void (std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)>::~__func()
art::Dbg::PostThreadDeath(art::Thread*)
std::__1::function<void (art::Unit&)>::swap(std::__1::function<void (art::Unit&)>&)
MterpInvokeDirectRange
art::ElfFileImpl<ElfTypes64>::GetString(Elf64_Shdr&, unsigned int) const
void art::mirror::Class::VisitNativeRoots<(art::ReadBarrierOption)0, art::mirror::ReadBarrierOnNativeRootsVisitor const>(art::mirror::ReadBarrierOnNativeRootsVisitor const&, art::PointerSize)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1u>& ()>::~__func()
art::ClassLinker::IsQuickToInterpreterBridge(void const*) const
art::gc::collector::ConcurrentCopying::VerifyGrayImmuneObjects()
vtable for art::gc::space::ZygoteSpace
float* art::JNI::GetPrimitiveArray<_jfloatArray*, float, art::mirror::PrimitiveArray<float> >(_JNIEnv*, _jfloatArray*, unsigned char*)
art::RuntimeArgumentMap::ForceNativeBridge
art::VariantMapKey<art::TraceClockSource>::~VariantMapKey()
art::ObjectTryLock<art::mirror::Object>::ObjectTryLock(art::Thread*, art::Handle<art::mirror::Object>)
bool art::DoInvokePolymorphic<true>(art::Thread*, art::ArtMethod*, art::ShadowFrame&, art::Handle<art::mirror::MethodHandle>, art::Handle<art::mirror::MethodType>, unsigned int const (&) [5], unsigned int, art::JValue*)
art::VariantMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::~VariantMapKey()
art::XGcOption& art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination::GetOrCreateFromMap<art::XGcOption>(art::RuntimeArgumentMapKey<art::XGcOption> const&)
art::DexRegisterLocationCatalog::FindLocationOffset(unsigned int) const
art::gc::accounting::MemoryRangeBitmap<16u>::CoverBegin() const
art::VariantMapKey<art::BackgroundGcOption>::Clone() const
art::MallocArena::MallocArena(unsigned int)
art::gc::collector::MarkSweep::GetCollectorType() const
guard variable for art::mirror::PrimitiveArray<float>::array_class_
art::VariantMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::Clone() const
art::ParsedOptions::ProcessSpecialOptions(std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void const*>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void const*> > > const&, art::RuntimeArgumentMap*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)
vtable for art::gc::collector::MarkSweep::MarkStackTask<false>
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::IntoKey(art::RuntimeArgumentMapKey<art::verifier::VerifyMode> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::verifier::VerifyMode& ()>::~__func()
art::BaseMutex::~BaseMutex()
art::JNI::CallStaticFloatMethodV(_JNIEnv*, _jclass*, _jmethodID*, char*)
non-virtual thunk to art::gc::space::LargeObjectSpace::~LargeObjectSpace()
art::gc::accounting::MemoryRangeBitmap<16u>::MemoryRangeBitmap(art::MemMap*, unsigned int, unsigned int)
void std::__1::vector<art::ObjPtr<art::mirror::Class>, art::ScopedArenaAllocatorAdapter<art::ObjPtr<art::mirror::Class> > >::__push_back_slow_path<art::ObjPtr<art::mirror::Class> const&>(art::ObjPtr<art::mirror::Class> const&)
art::OatFileAssistant::GetDexOptNeeded(art::CompilerFilter::Filter, bool, bool, art::ClassLoaderContext*)
art::gc::collector::ConcurrentCopying::BindBitmaps()
art::JDWP::JdwpTypeTag art::JDWP::Request::ReadEnum1<art::JDWP::JdwpTypeTag>(char const*)
art::PrettySize(long long)
void art::mirror::Class::VisitNativeRoots<(art::ReadBarrierOption)0, art::gc::Verification::BFSFindReachable const>(art::gc::Verification::BFSFindReachable const&, art::PointerSize)
std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)>, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)>, void*> > > > std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)> > >::__construct_node<std::__1::pair<char const*, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)> >(std::__1::pair<char const*, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)>&&)
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<art::ParseStringList<(char)58> >(art::RuntimeArgumentMapKey<art::ParseStringList<(char)58> > const&)
art::jit::Jit::Jit()
art::verifier::UninitializedType::IsNonZeroReferenceTypes() const
art::DexFile::OpenFile(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::gc::space::MemoryToolMallocSpace<art::gc::space::DlMallocSpace, 8u, true, false>::AllocThreadUnsafe(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::verifier::RegTypeCache::FindClass(art::mirror::Class*, bool) const
vtable for art::NeedsDeoptimizationVisitor
art::JavaVMExt::JniAbort(char const*, char const*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >& ()>::__clone() const
vtable for art::VariantMapKey<art::verifier::VerifyMode>
art::VariantMapKey<art::LogVerbosity>::Clone() const
art::FaultHandler::FaultHandler(art::FaultManager*)
void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::collector::MarkVisitor, art::gc::collector::MarkSweep::DelayReferenceReferentVisitor>(art::gc::collector::MarkVisitor const&, art::gc::collector::MarkSweep::DelayReferenceReferentVisitor const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::IntoKey(art::RuntimeArgumentMapKey<art::TraceClockSource> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::TraceClockSource& ()>::operator()()
art::verifier::RegTypeCache::FromUnresolvedMerge(art::verifier::RegType const&, art::verifier::RegType const&, art::verifier::MethodVerifier*)
std::__1::function<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >& ()>::swap(std::__1::function<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >& ()>&)
art::gc::collector::ConcurrentCopying::ProcessFalseGrayStack()
art::Runtime::IsShuttingDown(art::Thread*)
art::Monitor::Lock(art::Thread*)
art::Dbg::WatchLocation(art::JDWP::JdwpLocation const*, art::DeoptimizationRequest*)
art::MemMap::HasMemMap(art::MemMap*)
art::ElfFileImpl<ElfTypes32>::ApplyOatPatchesTo(char const*, unsigned int)
art::gc::collector::ConcurrentCopying::FlipCallback::~FlipCallback()
art::ArtMethod* art::FindMethodFromCode<(art::InvokeType)3, false>(unsigned int, art::ObjPtr<art::mirror::Object>*, art::ArtMethod*, art::Thread*)
art::detail::CmdlineParseArgument<art::ParseStringList<(char)58> >::GetNumTokens() const
art::gc::accounting::EmptyMarkObjectVisitor::MarkObject(art::mirror::Object*)
art::IsValidDescriptor(char const*)
art::verifier::VerifierDeps::VerifierDeps(std::__1::vector<art::DexFile const*, std::__1::allocator<art::DexFile const*> > const&, art::ArrayRef<unsigned char const>)
vtable for art::gc::collector::ConcurrentCopying
art::Mutex::~Mutex()
art::GetJniNativeInterface()
art::gc::accounting::SpaceBitmap<8u>::Dump() const
art::JDWP::JdwpState::PostVMStart()
art::gc::space::MallocSpace::CreateMemMap(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned int*, unsigned int*, unsigned int*, unsigned char*)
art::gc::accounting::HeapBitmap::AddContinuousSpaceBitmap(art::gc::accounting::SpaceBitmap<8u>*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::IntoKey(art::RuntimeArgumentMapKey<art::ParseStringList<(char)58> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ParseStringList<(char)58>& ()>::~__func()
art::ElfFileImpl<ElfTypes32>::Load(unix_file::FdFile*, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::IntoKey(art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions> const&)::{lambda(art::JDWP::JdwpOptions&)#1}, std::__1::allocator<{lambda(art::JDWP::JdwpOptions&)#1}>, void (art::JDWP::JdwpOptions&)>::~__func()
art::ClassLinker::PerformClassVerification(art::Thread*, art::Handle<art::mirror::Class>, art::verifier::HardFailLogMode, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::IndirectReferenceTable::IsValid() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ParseStringList<(char)58>& ()>::destroy()
art::mirror::Object* art::gc::Heap::AllocNonMovableObject<true, art::VoidFunctor>(art::Thread*, art::ObjPtr<art::mirror::Class>, unsigned int, art::VoidFunctor const&)
art::mirror::Object* art::gc::Heap::AllocLargeObject<false, art::mirror::SetStringCountAndBytesVisitor>(art::Thread*, art::ObjPtr<art::mirror::Class>*, unsigned int, art::mirror::SetStringCountAndBytesVisitor const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::IntoKey(art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::MillisecondsToNanoseconds& ()>::destroy()
art::RuntimeArgumentMapKey<art::TraceClockSource>::~RuntimeArgumentMapKey()
art::Thread::~Thread()
art::OatFileAssistant::OatFileInfo::ReleaseFileForUse()
inflateUndermine
std::__1::deque<art::instrumentation::InstrumentationStackFrame, std::__1::allocator<art::instrumentation::InstrumentationStackFrame> >::__move_backward_and_check(std::__1::__deque_iterator<art::instrumentation::InstrumentationStackFrame, art::instrumentation::InstrumentationStackFrame*, art::instrumentation::InstrumentationStackFrame&, art::instrumentation::InstrumentationStackFrame**, int, 204>, std::__1::__deque_iterator<art::instrumentation::InstrumentationStackFrame, art::instrumentation::InstrumentationStackFrame*, art::instrumentation::InstrumentationStackFrame&, art::instrumentation::InstrumentationStackFrame**, int, 204>, std::__1::__deque_iterator<art::instrumentation::InstrumentationStackFrame, art::instrumentation::InstrumentationStackFrame*, art::instrumentation::InstrumentationStackFrame&, art::instrumentation::InstrumentationStackFrame**, int, 204>, art::instrumentation::InstrumentationStackFrame const*&)
art::mirror::PrimitiveArray<unsigned char>::Alloc(art::Thread*, unsigned int)
art::BoxPrimitive(art::Primitive::Type, art::JValue const&)
void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::accounting::AddToReferenceArrayVisitor, art::VoidFunctor>(art::gc::accounting::AddToReferenceArrayVisitor const&, art::VoidFunctor const&)
art::ReferenceTable::Add(art::ObjPtr<art::mirror::Object>)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::XGcOption& ()>::__clone() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >& ()>::__clone(std::__1::__function::__base<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&>*) const
artAllocStringFromBytesFromCodeDlMallocInstrumented
art::ArtField* art::FindFieldFromCode<(art::FindFieldType)6, false>(unsigned int, art::ArtMethod*, art::Thread*, unsigned int)
art::verifier::RegisterLine::SetRegisterTypeWide(art::verifier::MethodVerifier*, unsigned int, art::verifier::RegType const&, art::verifier::RegType const&)
art::verifier::VerifierDeps::AddClassResolution(art::DexFile const&, art::dex::TypeIndex, art::mirror::Class*)
art::ObjectTryLock<art::mirror::Object>::~ObjectTryLock()
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)::{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}::operator()(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&) const
art::ElfFileImpl<ElfTypes64>::GetSectionHeadersStart() const
art::gc::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::gc::HomogeneousSpaceCompactResult const&)
vtable for art::instrumentation::InstrumentationListener
art::verifier::RegType::IsByte() const
bool art::PerformConversions<art::ShadowFrameGetter<false>, art::mirror::EmulatedStackFrameAccessor>(art::Thread*, art::Handle<art::mirror::MethodType>, art::Handle<art::mirror::MethodType>, art::ShadowFrameGetter<false>*, art::mirror::EmulatedStackFrameAccessor*, int)
art::ParseDouble(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char, double, double, double*, void (*)(char const*, ...))
art::ThrowNullPointerExceptionForMethodAccess(unsigned int, art::InvokeType)
art::ScopedCheck::CheckReflectedMethod(art::ScopedObjectAccess&, _jobject*)
art::Dbg::SetAllocTrackingEnabled(bool)
vtable for art::CatchLocationFinder
art::Locks::logging_lock_
art::ClassListCreator::~ClassListCreator()
void std::__1::vector<art::gc::space::DiscontinuousSpace*, std::__1::allocator<art::gc::space::DiscontinuousSpace*> >::__push_back_slow_path<art::gc::space::DiscontinuousSpace* const&>(art::gc::space::DiscontinuousSpace* const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::LogVerbosity&)#1}, std::__1::allocator<{lambda(art::LogVerbosity&)#1}>, void (art::LogVerbosity&)>::operator()(art::LogVerbosity&)
art::DexFileVerifier::CheckList(unsigned int, char const*, unsigned char const**)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::MillisecondsToNanoseconds&)#1}, std::__1::allocator<{lambda(art::MillisecondsToNanoseconds&)#1}>, void (art::MillisecondsToNanoseconds&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::MillisecondsToNanoseconds&)#1}> >*) const
art::Runtime::RecordWriteField64(art::mirror::Object*, art::MemberOffset, unsigned long long, bool) const
art::gc::space::LargeObjectSpace::IsAllocSpace() const
art::verifier::VerifierDeps::ValidateDependencies(art::Handle<art::mirror::ClassLoader>, art::Thread*) const
art::interpreter::UnstartedRuntime::UnstartedClassGetDeclaringClass(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::Thread::CreateNativeThread(_JNIEnv*, _jobject*, unsigned int, bool)
art::WellKnownClasses::java_lang_Thread_daemon
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::StackVisitor::StackWalkKind const&)
art::gc::space::ContinuousMemMapAllocSpace::IsAllocSpace() const
art::mirror::PrimitiveArray<double>::Set(int, double)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::IntoKey(art::RuntimeArgumentMapKey<art::ParseStringList<(char)58> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ParseStringList<(char)58>& ()>
vtable for art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsVisitor
art::verifier::RegType::IsChar() const
art::gc::space::RegionSpace::AssertThreadLocalBuffersAreRevoked(art::Thread*)
art::ArtField::GetOffsetDCheck()
art::Dbg::GetSignature(unsigned long long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::CheckJNI::SetPrimitiveArrayRegion(char const*, art::Primitive::Type, _JNIEnv*, _jarray*, int, int, void const*)
art::instrumentation::Instrumentation::FieldReadEventImpl(art::Thread*, art::ObjPtr<art::mirror::Object>, art::ArtMethod*, unsigned int, art::ArtField*) const
art::jit::JitCodeCache::ContainsPc(void const*) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::IntoKey(art::RuntimeArgumentMapKey<art::LogVerbosity> const&)::{lambda(art::LogVerbosity&)#1}, std::__1::allocator<{lambda(art::LogVerbosity&)#1}>, void (art::LogVerbosity&)>::~__func()
std::__1::__shared_ptr_emplace<void (*)(), std::__1::allocator<void (*)()> >::__on_zero_shared_weak()
art::gc::space::ZygoteSpace::ZygoteSpace(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::MemMap*, unsigned int)
art::Runtime::SetFaultMessage(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::ClassLinker::AddImageSpace(art::gc::space::ImageSpace*, art::Handle<art::mirror::ClassLoader>, _jobjectArray*, char const*, std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
virtual thunk to std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream()
art::CheckJNI::NewFloatArray(_JNIEnv*, int)
art::ElfFileImpl<ElfTypes32>::GetProgramHeader(unsigned int) const
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::CompleteArgument()
art::interpreter::UnstartedRuntime::UnstartedClassGetDeclaredMethod(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, unsigned int>, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned int>, void*>*, int>, bool> std::__1::__tree<std::__1::__value_type<unsigned int, unsigned int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned int>, std::__1::less<unsigned int>, true>, art::ScopedArenaAllocatorAdapter<std::__1::__value_type<unsigned int, unsigned int> > >::__emplace_unique_key_args<unsigned int, unsigned int const&, unsigned int const&>(unsigned int const&, unsigned int const&, unsigned int const&)
art::ReaderWriterMutex::~ReaderWriterMutex()
art::JDWP::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::JDWP::JdwpTransportType const&)
art::ElfFileImpl<ElfTypes64>::GetRel(Elf64_Shdr&, unsigned int) const
art::OatFile::OatClass::GetOatMethodOffsets(unsigned int) const
art::MonitorInfo::MonitorInfo(art::mirror::Object*)
art::ObjectRegistry::~ObjectRegistry()
art::ProfileCompilationInfo::DeflateBuffer(unsigned char const*, unsigned int, unsigned int*)
art::gc::space::RegionSpace::Region::MarkAsAllocated(art::gc::space::RegionSpace*, unsigned int)
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::showmanyc()
art::JNI::PushLocalFrame(_JNIEnv*, int)
art::ElfFileImpl<ElfTypes32>::FixupRelocations(unsigned int)
MterpHandleException
art::MallocAllocator::Free(void*)
art::WellKnownClasses::java_lang_ThreadGroup_groups
art::interpreter::UnstartedRuntime::UnstartedMathSin(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::verifier::LongLoType::CreateInstance(art::mirror::Class*, art::StringPiece const&, unsigned short)
art::gc::collector::SemiSpace::SemiSpace(art::gc::Heap*, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
MappedZipFile::ReadAtOffset(unsigned char*, unsigned int, long long)
art::CheckJNI::CallStaticObjectMethodA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Instruction::Format const&)
art::gc::space::LargeObjectSpace::~LargeObjectSpace()
art::verifier::RegType::VisitRoots(art::RootVisitor*, art::RootInfo const&) const
art::ClassTable::CopyWithoutLocks(art::ClassTable const&)
art::gc::space::RegionSpace::RevokeAllThreadLocalBuffers()
art::JNIEnvExt::SegmentStateOffset(unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::IntoKey(art::RuntimeArgumentMapKey<art::TraceClockSource> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::TraceClockSource& ()>::__clone() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::IntoKey(art::RuntimeArgumentMapKey<bool> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, bool& ()>::~__func()
art::mirror::PrimitiveArray<unsigned short>::GetData()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(double&)#1}, std::__1::allocator<{lambda(double&)#1}>, void (double&)>::destroy_deallocate()
art::gc::collector::Iteration::GetEstimatedThroughput() const
non-virtual thunk to art::gc::space::RosAllocSpace::RevokeAllThreadLocalBuffers()
art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::~RuntimeArgumentMapKey()
art::verifier::ConstantType::IsOne() const
art::detail::CmdlineParseArgument<art::Memory<1u> >::~CmdlineParseArgument()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoIgnore()::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>::destroy_deallocate()
art::mirror::CallSite::static_class_
art::JDWP::JdwpState::PostException(art::JDWP::EventLocation const*, art::mirror::Throwable*, art::JDWP::EventLocation const*, art::mirror::Object*)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::ObjectRegistryEntry const&)
art::RuntimeArgumentMap::HeapMaxFree
vtable for art::gc::space::LargeObjectSpace
art::NeedsDeoptimizationVisitor::VisitFrame()
art::interpreter::UnstartedRuntime::UnstartedJNIThrowableNativeFillInStackTrace(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
art::Transaction::RecordStrongStringInsertion(art::ObjPtr<art::mirror::String>)
art::CheckJNI::RegisterNatives(_JNIEnv*, _jclass*, JNINativeMethod const*, int)
art::detail::CmdlineParseArgument<bool>::ParseArgument(art::TokenRange const&, unsigned int*)
art::OatHeader::OatHeader(art::InstructionSet, art::InstructionSetFeatures const*, unsigned int, art::SafeMap<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const*)
art::gc::collector::StickyMarkSweep::GetGcType() const
art::Monitor::Monitor(art::Thread*, art::Thread*, art::mirror::Object*, int)
art::detail::CmdlineParseArgument<art::JDWP::JdwpOptions>::ParseArgumentSingle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::JDWP::Request::ReadModKind()
art::ScopedCheck::TraceNonHeapValue(char, art::JniValueType, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
vtable for art::hprof::EndianOutput
art::instrumentation::Instrumentation::DisableMethodTracing(char const*)
art::Mutex::ExclusiveLock(art::Thread*)
art::ElfFileImpl<ElfTypes64>::FindSymbolByName(unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::IntoKey(art::RuntimeArgumentMapKey<art::LogVerbosity> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::LogVerbosity& ()>::__clone() const
art::gc::collector::ConcurrentCopying::DumpPerformanceInfo(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
non-virtual thunk to art::gc::space::MemoryToolMallocSpace<art::gc::space::RosAllocSpace, 8u, false, true>::Free(art::Thread*, art::mirror::Object*)
art::PrettyJavaAccessFlags(unsigned int)
art::VariantMapKey<std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > >*>::~VariantMapKey()
art::gc::collector::MarkSweep::UpdateAndMarkModUnion()
art::Thread::HandleScopeVisitRoots(art::RootVisitor*, unsigned int)
art::detail::CmdlineParseArgument<art::TraceClockSource>::MaybeMatches(art::TokenRange const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::MillisecondsToNanoseconds& ()>::~__func()
art::StackVisitor::GetNextMethodAndDexPc(art::ArtMethod**, unsigned int*)
art::gc::space::DlMallocSpace::GetBytesAllocated()
void art::ImtConflictTable::Visit<art::ImageHeader::VisitPackedImtConflictTables<art::gc::space::ImageSpaceLoader::FixupObjectAdapter>(art::gc::space::ImageSpaceLoader::FixupObjectAdapter const&, unsigned char*, art::PointerSize) const::{lambda(std::__1::pair<art::ArtMethod*, art::ArtMethod*> const&)#1}>(art::ImageHeader::VisitPackedImtConflictTables<art::gc::space::ImageSpaceLoader::FixupObjectAdapter>(art::gc::space::ImageSpaceLoader::FixupObjectAdapter const&, unsigned char*, art::PointerSize) const::{lambda(std::__1::pair<art::ArtMethod*, art::ArtMethod*> const&)#1} const&, art::PointerSize)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ParseStringList<(char)58>& ()>::~__func()
artAllocStringFromCharsFromCodeRegionInstrumented
art::mirror::PrimitiveArray<signed char>::VisitRoots(art::RootVisitor*)
art::JDWP::Request::ReadMethodId()
art::mirror::PrimitiveArray<signed char>::GetData() const
art::RuntimeCallbacks::RemoveThreadLifecycleCallback(art::ThreadLifecycleCallback*)
art::ArtMethod::GetNonObsoleteMethod()
art::ArtField* art::FindFieldFromCode<(art::FindFieldType)3, true>(unsigned int, art::ArtMethod*, art::Thread*, unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>::~__func()
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >& ()>
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoKey(art::RuntimeArgumentMapKey<art::Unit> const&)::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>
art::ProfileCompilationInfo::OfflineProfileMethodInfo::operator==(art::ProfileCompilationInfo::OfflineProfileMethodInfo const&) const
art::OatFile::GetOatDexFile(char const*, unsigned int const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
art::mirror::PrimitiveArray<short>* art::JNI::DecodeAndCheckArrayType<_jshortArray*, short, art::mirror::PrimitiveArray<short> >(art::ScopedObjectAccess&, _jshortArray*, char const*, char const*)
art::WellKnownClasses::dalvik_system_DexPathList
art::gc::Heap::IsCompilingBoot() const
art::verifier::MethodVerifier::UpdateRegisters(unsigned int, art::verifier::RegisterLine*, bool)
art::InternTable::Table::Find(art::ObjPtr<art::mirror::String>)
void art::ArtField::SetByte<false>(art::ObjPtr<art::mirror::Object>, signed char)
void art::mirror::DexCache::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::accounting::ModUnionUpdateObjectReferencesVisitor>(art::ObjPtr<art::mirror::Class>, art::gc::accounting::ModUnionUpdateObjectReferencesVisitor const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::BackgroundGcOption& ()>::operator()()
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)5, true, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
android::base::ReadFileToString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, bool)
art::hprof::Hprof::WriteStackTraces()
art::mirror::Field* art::mirror::Field::CreateFromArtField<(art::PointerSize)8, false>(art::Thread*, art::ArtField*, bool)
art::JDWP::expandBufAddLocation(art::JDWP::ExpandBuf*, art::JDWP::JdwpLocation const&)
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf32_Sym*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf32_Sym*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf32_Sym*> > >::__find_equal<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf32_Sym*> >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf32_Sym*> const&)
void art::mirror::DexCache::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::gc::collector::ConcurrentCopying::RefFieldsVisitor>(art::ObjPtr<art::mirror::Class>, art::gc::collector::ConcurrentCopying::RefFieldsVisitor const&)
art::gc::Heap::RequestTrim(art::Thread*)
art::GetIsoDate()
art::gc::space::DlMallocSpace::Alloc(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
bool art::interpreter::DoIGetQuick<(art::Primitive::Type)5>(art::ShadowFrame&, art::Instruction const*, unsigned short)
art::gc::collector::MarkSweep::VerifySystemWeakVisitor::IsMarked(art::mirror::Object*)
art::gc::space::BumpPointerSpace::RevokeThreadLocalBuffersLocked(art::Thread*)
art::RuntimeArgumentMap::HeapGrowthLimit
art::ThreadPool::StopWorkers(art::Thread*)
non-virtual thunk to art::gc::space::LargeObjectSpace::FreeList(art::Thread*, unsigned int, art::mirror::Object**)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption> art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::CreateTypedBuilder<art::BackgroundGcOption>()
art::Runtime::CreateJit()
art::verifier::ShortType::Destroy()
art::verifier::ByteType::IsByte() const
vtable for art::MallocArena
art::gc::space::DlMallocSpace::CreateInstance(art::MemMap*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, void*, unsigned char*, unsigned char*, unsigned char*, unsigned int, bool)
art::Runtime::Create(std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void const*>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void const*> > > const&, bool)
art::gc::collector::ConcurrentCopying::MarkingPhase()
art::ElfFile::GetSectionOffsetAndSize(char const*, unsigned long long*, unsigned long long*) const
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Instruction::ExtendedFlags const&)
art::gc::Heap::TrimIndirectReferenceTables(art::Thread*)
art::mirror::ObjectArray<art::mirror::Object*>::Alloc(art::Thread*, art::ObjPtr<art::mirror::Class>, int, art::gc::AllocatorType)
android::base::LogMessage::~LogMessage()
art::verifier::VerifierDeps::AddMethodResolution(art::DexFile const&, unsigned int, art::ArtMethod*)
art::JValue art::interpreter::ExecuteSwitchImpl<false, false>(art::Thread*, art::DexFile::CodeItem const*, art::ShadowFrame&, art::JValue, bool)
art::LockCountData::CheckAllMonitorsReleasedOrThrow(art::Thread*)
art::detail::CmdlineParseArgument<art::ExperimentalFlags>::ParseArgument(art::TokenRange const&, unsigned int*)
art::ThrowInternalError(char const*, ...)
mspace_footprint_limit
art::LogHelper::LogLineLowStack(char const*, unsigned int, android::base::LogSeverity, char const*)
art::gc::space::MallocSpace::CreateZygoteSpace(char const*, bool, art::gc::space::MallocSpace**)
art::gc::space::RegionSpace::Region::Unfree(art::gc::space::RegionSpace*, unsigned int)
std::__1::function<art::ParseStringList<(char)58>& ()>::swap(std::__1::function<art::ParseStringList<(char)58>& ()>&)
art::StackVisitor::GetVRegPairFromDebuggerShadowFrame(unsigned short, art::VRegKind, art::VRegKind, unsigned long long*) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(unsigned int&)#1}, std::__1::allocator<{lambda(unsigned int&)#1}>, void (unsigned int&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(unsigned int&)#1}> >*) const
art::BitVector::BitVector(art::BitVector const&, bool, art::Allocator*)
art::mirror::EmulatedStackFrame* art::mirror::EmulatedStackFrame::CreateFromShadowFrameAndArgs<true>(art::Thread*, art::Handle<art::mirror::MethodType>, art::Handle<art::mirror::MethodType>, art::ShadowFrame const&, unsigned int, unsigned int const (&) [5])
MterpSputObject
art::ElfFileImpl<ElfTypes32>::GetDynamicNum() const
void art::mirror::Object::VisitFieldsReferences<false, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::accounting::CheckReferenceVisitor>(unsigned int, art::gc::accounting::CheckReferenceVisitor const&)
art::InvokeVirtualOrInterfaceWithVarArgs(art::ScopedObjectAccessAlreadyRunnable const&, _jobject*, _jmethodID*, char*)
art::gc::collector::ConcurrentCopying::DisableMarkingCheckpoint::Run(art::Thread*)
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)1, art::gc::collector::ConcurrentCopying::VerifyNoMissingCardMarkVisitor const>(art::gc::collector::ConcurrentCopying::VerifyNoMissingCardMarkVisitor const&, art::PointerSize)
art::StringTable::WriteTo(std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >&) const
art::CheckJNI::SetStaticLongField(_JNIEnv*, _jclass*, _jfieldID*, long long)
void art::mirror::Object::VisitFieldsReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::accounting::ModUnionUpdateObjectReferencesVisitor>(unsigned int, art::gc::accounting::ModUnionUpdateObjectReferencesVisitor const&)
art::ThreadPoolWorker::~ThreadPoolWorker()
art::mirror::Class::FindInterfaceMethod(art::StringPiece const&, art::Signature const&, art::PointerSize)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}, std::__1::allocator<{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}>, void (std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)>::destroy()
std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream()
art::TimingLogger::Verify()
art::hprof::EndianOutputBuffered::HandleU2List(unsigned short const*, unsigned int)
void std::__1::vector<art::gc::allocator::RosAlloc::Run*, std::__1::allocator<art::gc::allocator::RosAlloc::Run*> >::__push_back_slow_path<art::gc::allocator::RosAlloc::Run* const&>(art::gc::allocator::RosAlloc::Run* const&)
art::Dbg::GetStaticFieldValue(unsigned long long, unsigned long long, art::JDWP::ExpandBuf*)
art::gc::accounting::ModUnionTableReferenceCache::UpdateAndMarkReferences(art::MarkObjectVisitor*)
art::VisitClassLoaderClassesVisitor::Visit(art::ObjPtr<art::mirror::ClassLoader>)
art::WellKnownClasses::org_apache_harmony_dalvik_ddmc_DdmServer_broadcast
non-virtual thunk to art::gc::space::FreeListSpace::~FreeListSpace()
art::gc::space::RosAllocSpace::Trim()
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)3, true, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::WellKnownClasses::java_lang_ClassNotFoundException
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>::destroy()
art::RuntimeArgumentMap::AgentPath
art::gc::Heap::GetBootImagesSize(unsigned int*, unsigned int*, unsigned int*, unsigned int*)
art::OatFile::Open(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned char*, unsigned char*, bool, bool, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::IntoKey(art::RuntimeArgumentMapKey<art::ExperimentalFlags> const&)::{lambda(art::ExperimentalFlags&)#1}, std::__1::allocator<{lambda(art::ExperimentalFlags&)#1}>, void (art::ExperimentalFlags&)>::~__func()
art::interpreter::CheckInterpreterAsmConstants()
art::gc::space::ImageSpace::LoadBootImage(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::InstructionSet, std::__1::vector<art::gc::space::ImageSpace*, std::__1::allocator<art::gc::space::ImageSpace*> >*, unsigned char**)
art::verifier::UndefinedType::Destroy()
_tr_align
art::OatFile::OatMethod::LinkMethod(art::ArtMethod*) const
art::jit::JitCodeCache::ShouldDoFullCollection()
art::WellKnownClasses::java_lang_ClassLoader_loadClass
art::gc::space::RegionSpace::~RegionSpace()
art::QuickExceptionHandler::DeoptimizeSingleFrame(art::DeoptimizationKind)
art::MutatorMutex::~MutatorMutex()
art::gc::Heap::RemoveGcPauseListener()
FileWriter::Append(unsigned char*, unsigned int)
vtable for art::ThreadPoolWorker
art::GetCalleeSaveMethodCallerAndOuterMethod(art::Thread*, art::CalleeSaveType)
art::Transaction::RecordWeakStringInsertion(art::ObjPtr<art::mirror::String>)
virtual thunk to std::__1::basic_ostream<char, std::__1::char_traits<char> >::~basic_ostream()
art::ClassLinker::VerifyClass(art::Thread*, art::Handle<art::mirror::Class>, art::verifier::HardFailLogMode)
art::DexFile::OpenDex(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
void art::Thread::VisitRoots<true>(art::RootVisitor*)
art::verifier::RegType::IsShort() const
artHandleFillArrayDataFromCode
art::RuntimeArgumentMap::HookIsSensitiveThread
art::VariantMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::ValueDelete(void*) const
art::verifier::RegType::CanAssignArray(art::verifier::RegType const&, art::verifier::RegTypeCache&, art::Handle<art::mirror::ClassLoader>, art::verifier::MethodVerifier*, bool*) const
art::gc::allocator::RosAlloc::ObjectsAllocatedCallback(void*, void*, unsigned int, void*)
art::VariantMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::ValueDelete(void*) const
art::mirror::Constructor::ResetClass()
art::StackVisitor::SetVRegPair(art::ArtMethod*, unsigned short, unsigned long long, art::VRegKind, art::VRegKind)
non-virtual thunk to art::gc::space::BumpPointerSpace::~BumpPointerSpace()
art::JNI::CallNonvirtualObjectMethodA(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, jvalue*)
art::gc::space::FreeListSpace::GetAllocationInfoForAddress(unsigned int)
art::DlOpenOatFile::Dlopen(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned char*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
void art::StackVisitor::WalkStack<(art::StackVisitor::CountTransitions)1>(bool)
MterpLogArrayIndexException
art::gc::collector::MarkCompact::SweepSystemWeaks()
art::MemMap::ContainedWithinExistingMap(unsigned char*, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::ti::Agent::Agent(art::ti::Agent&&)
art::InvokeWithVarArgs(art::ScopedObjectAccessAlreadyRunnable const&, _jobject*, _jmethodID*, char*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::BackgroundGcOption& ()>::destroy()
art::VariantMapKey<art::MillisecondsToNanoseconds>::~VariantMapKey()
art::gc::space::Space::IsAllocSpace() const
art::ti::Agent::Attach(int*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
void art::Thread::DumpThreadOffset<(art::PointerSize)8>(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, unsigned int)
_Unwind_DeleteException
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::BackgroundGcOption> const&)::{lambda(art::BackgroundGcOption&)#1}, std::__1::allocator<{lambda(art::BackgroundGcOption&)#1}>, void (art::BackgroundGcOption&)>::~__func()
art::Memory<1u>::Name()::str
art::ElfFileImpl<ElfTypes64>::GetSectionHeader(unsigned int) const
art::VariantMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::~VariantMapKey()
vtable for art::GetClassLoadersVisitor
art::OatHeader::GetImageFileLocationOatDataBegin() const
art::gc::space::ZygoteSpace::RevokeAllThreadLocalBuffers()
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::CompleteArgument()
vtable for art::hprof::EndianOutputBuffered
art::Trace::DecodeTraceMethod(unsigned int)
art::gc::collector::MarkSweep::CheckpointMarkThreadRoots::VisitRoots(art::mirror::CompressedReference<art::mirror::Object>**, unsigned int, art::RootInfo const&)
art::WellKnownClasses::java_lang_Runtime_nativeLoad
art::mirror::Object* art::gc::Heap::AllocObjectWithAllocator<true, true, art::mirror::Class::InitializeClassVisitor>(art::Thread*, art::ObjPtr<art::mirror::Class>, unsigned int, art::gc::AllocatorType, art::mirror::Class::InitializeClassVisitor const&)
non-virtual thunk to art::gc::collector::ConcurrentCopying::~ConcurrentCopying()
art::RuntimeArgumentMap::UseTombstonedTraces
art::gc::Heap::CreateMallocSpaceFromMemMap(art::MemMap*, unsigned int, unsigned int, unsigned int, char const*, bool)
art::JII::AttachCurrentThreadInternal(_JavaVM*, _JNIEnv**, void*, bool)
std::__1::__tree_node_base<void*>*& std::__1::__tree<art::verifier::VerifierDeps::MethodResolution, std::__1::less<art::verifier::VerifierDeps::MethodResolution>, std::__1::allocator<art::verifier::VerifierDeps::MethodResolution> >::__find_equal<art::verifier::VerifierDeps::MethodResolution>(std::__1::__tree_const_iterator<art::verifier::VerifierDeps::MethodResolution, std::__1::__tree_node<art::verifier::VerifierDeps::MethodResolution, void*>*, int>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, art::verifier::VerifierDeps::MethodResolution const&)
bool art::interpreter::DoFieldGet<(art::FindFieldType)2, (art::Primitive::Type)6, true>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::RuntimeArgumentMap::JdwpOptions
art::JNI::GetByteArrayRegion(_JNIEnv*, _jbyteArray*, int, int, signed char*)
art::Locks::user_code_suspension_lock_
art::RuntimeArgumentMap::Zygote
art::BaseMutex::ContentionLogData::AddToWaitTime(unsigned long long)
bool art::interpreter::DoIPutQuick<(art::Primitive::Type)4, false>(art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::JDWP::JdwpState::NextEventSerial()
_jshortArray* art::JNI::NewPrimitiveArray<_jshortArray*, art::mirror::PrimitiveArray<short> >(_JNIEnv*, int)
art::verifier::RegisterLine::MergeRegisters(art::verifier::MethodVerifier*, art::verifier::RegisterLine const*)
art::Dbg::SetArrayElements(unsigned long long, int, int, art::JDWP::Request*)
art::detail::CmdlineParseArgument<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::~CmdlineParseArgument()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, double& ()>::operator()()
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)
art::ArenaBitVectorAllocator<art::ArenaAllocator>::Alloc(unsigned int)
art::InternTable::Size() const
art::ClassLinker::ResolveMethodType(art::DexFile const&, unsigned int, art::Handle<art::mirror::DexCache>, art::Handle<art::mirror::ClassLoader>)
art::Trace::~Trace()
art::gc::accounting::HeapBitmap::Test(art::mirror::Object const*)
art::interpreter::UnstartedRuntime::UnstartedJNIMathLog(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
art::InternTable::Table::Table()
art::gc::accounting::SpaceBitmap<4096u>::Clear()
std::__1::__shared_ptr_emplace<art::InstructionSet, std::__1::allocator<art::InstructionSet> >::~__shared_ptr_emplace()
art::GuardedCopy::AbortF(char const*, char const*, ...)
std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(bool)
art::mirror::Throwable::java_lang_Throwable_
art::VariantMapKey<void (*)(int)>::~VariantMapKey()
std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(double)
art::CheckJNI::GetIntArrayRegion(_JNIEnv*, _jintArray*, int, int, int*)
art::DotToDescriptor(char const*)
art::verifier::DoubleHiType::Destroy()
vtable for art::detail::CmdlineParseArgument<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >
art::gc::collector::SemiSpace::SetFromSpace(art::gc::space::ContinuousMemMapAllocSpace*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>::destroy_deallocate()
art::WellKnownClasses::java_util_ArrayList
std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(int)
non-virtual thunk to art::gc::collector::SemiSpace::MarkObject(art::mirror::Object*)
art::TypeLookupTable::RawDataLength(unsigned int)
std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(unsigned int)
art::ClassLinker::LoadClass(art::Thread*, art::DexFile const&, art::DexFile::ClassDef const&, art::Handle<art::mirror::Class>)
art::gc::Heap::SwapSemiSpaces()
art::TimingLogger::TimingLogger(char const*, bool, bool)
art::gc::Heap::GetObjectsAllocated() const
std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(long)
art::CheckJNI::SetBooleanField(_JNIEnv*, _jobject*, _jfieldID*, unsigned char)
art::OatHeader::GetInterpreterToCompiledCodeBridgeOffset() const
art::gc::space::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::gc::space::SpaceType const&)
vtable for art::OatFile
art::ClassLinker::LookupResolvedMethod(unsigned int, art::ObjPtr<art::mirror::DexCache>, art::ObjPtr<art::mirror::ClassLoader>)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::verifier::VerifyMode&)#1}, std::__1::allocator<{lambda(art::verifier::VerifyMode&)#1}>, void (art::verifier::VerifyMode&)>::destroy()
std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(unsigned short)
art::VariantMapKey<art::gc::space::LargeObjectSpaceType>::~VariantMapKey()
void std::__1::__sort<std::__1::__less<std::__1::tuple<unsigned int, unsigned int, bool>, std::__1::tuple<unsigned int, unsigned int, bool> >&, std::__1::tuple<unsigned int, unsigned int, bool>*>(std::__1::tuple<unsigned int, unsigned int, bool>*, std::__1::tuple<unsigned int, unsigned int, bool>*, std::__1::__less<std::__1::tuple<unsigned int, unsigned int, bool>, std::__1::tuple<unsigned int, unsigned int, bool> >&)
std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(long long)
vtable for art::VariantMapKey<art::gc::space::LargeObjectSpaceType>
std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(unsigned long long)
art::CheckJNI::CallNonvirtualDoubleMethodV(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, char*)
art::gc::Heap::GetReferringObjects(art::VariableSizedHandleScope&, art::Handle<art::mirror::Object>, int, std::__1::vector<art::Handle<art::mirror::Object>, std::__1::allocator<art::Handle<art::mirror::Object> > >&)
art::Monitor::Wait(art::Thread*, art::mirror::Object*, long long, int, bool, art::ThreadState)
std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>::swap(std::__1::function<void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>&)
art::ArtMethod::IsImagePointerSize(art::PointerSize)
art::detail::CmdlineParseArgument<art::ExperimentalFlags>::~CmdlineParseArgument()
art::Dbg::deoptimization_requests_
art::CompilerFilter::NameOfFilter(art::CompilerFilter::Filter)
art::detail::CmdlineParserArgumentInfo<art::Memory<1u> >::~CmdlineParserArgumentInfo()
art::Dbg::GetArrayLength(unsigned long long, int*)
art::ObjPtr<art::mirror::Method> art::mirror::Class::GetDeclaredMethodInternal<(art::PointerSize)8, false>(art::Thread*, art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::String>, art::ObjPtr<art::mirror::ObjectArray<art::mirror::Class> >)
std::__1::basic_ostream<char, std::__1::char_traits<char> >::~basic_ostream()
bool art::DexFileVerifier::CheckIntraClassDataItemMethods<true>(art::ClassDataItemIterator*, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int> >*, bool*, art::dex::TypeIndex*, art::DexFile::ClassDef const**)
art::ElfFileImpl<ElfTypes64>::SetMap(unix_file::FdFile*, art::MemMap*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::ElfOatFile::PreSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::verifier::RegisterLine::CheckUnaryOp(art::verifier::MethodVerifier*, art::Instruction const*, art::verifier::RegType const&, art::verifier::RegType const&)
art::mirror::PrimitiveArray<long long>::array_class_
art::ProgramInvocationShortName()
art::JDWP::JdwpState::AcquireJdwpTokenForEvent(unsigned long long)
void art::gc::collector::RootPrinter::VisitRoot<art::mirror::Object>(art::mirror::CompressedReference<art::mirror::Object>*)
art::JDWP::JdwpState::JdwpState(art::JDWP::JdwpOptions const*)
art::gc::accounting::MemoryRangeBitmap<16u>::CoverEnd() const
art::Dbg::DisableCollection(unsigned long long)
art::OatHeader::GetInstructionSetFeaturesBitmap() const
artInvokeVirtualTrampolineWithAccessCheck
void std::__1::vector<art::ProfileCompilationInfo::DexFileData*, art::ArenaAllocatorAdapter<art::ProfileCompilationInfo::DexFileData*> >::__push_back_slow_path<art::ProfileCompilationInfo::DexFileData* const&>(art::ProfileCompilationInfo::DexFileData* const&)
art::RuntimeArgumentMap::CompilerCallbacksPtr
art::RuntimeArgumentMap::ConcGCThreads
std::__1::__shared_ptr_emplace<art::verifier::VerifyMode, std::__1::allocator<art::verifier::VerifyMode> >::__on_zero_shared_weak()
art::verifier::ImpreciseConstType::IsImpreciseConstant() const
art::ClassLinker::SetupClass(art::DexFile const&, art::DexFile::ClassDef const&, art::Handle<art::mirror::Class>, art::ObjPtr<art::mirror::ClassLoader>)
art::Dbg::GetReferenceType(unsigned long long, art::JDWP::ExpandBuf*)
art::gc::collector::GarbageCollector::RecordFree(art::gc::collector::ObjectBytePair const&)
art::instrumentation::Instrumentation::Instrumentation()
art::instrumentation::Instrumentation::GetCurrentInstrumentationLevel() const
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)
art::WellKnownClasses::libcore_reflect_AnnotationFactory
art::ResolveStringFromCode(art::ArtMethod*, art::dex::StringIndex)
art::ElfFileImpl<ElfTypes64>::GetSymbolTable(unsigned int)
art::JNI::ReleaseStringUTFChars(_JNIEnv*, _jstring*, char const*)
art::CmplFloat(float, float)
art::BaseMutex::IsMutex() const
art::gc::accounting::Bitmap::Clear()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::IntoKey(art::RuntimeArgumentMapKey<art::ProfileSaverOptions> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ProfileSaverOptions& ()>::~__func()
non-virtual thunk to art::gc::space::MemoryToolMallocSpace<art::gc::space::RosAllocSpace, 8u, false, true>::AllocationSize(art::mirror::Object*, unsigned int*)
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >(art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > const&)
art::verifier::MethodVerifier::CheckNewArray(art::dex::TypeIndex)
inflateSetDictionary
art::ElfFileImpl<ElfTypes32>::Fixup(unsigned int)
art::ProfileCompilationInfo::DexFileData::DexFileData(art::ArenaAllocator*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned short, unsigned int)
art::mirror::PrimitiveArray<signed char>::Set(int, signed char)
art::ThreadPool::~ThreadPool()
art::verifier::ConflictType::Dump() const
art::interpreter::UnstartedRuntime::UnstartedJNIArrayCreateObjectArray(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
art::jit::JitCodeCache::CommitCode(art::Thread*, art::ArtMethod*, unsigned char*, unsigned char*, unsigned char*, unsigned int, unsigned int, unsigned int, unsigned char const*, unsigned int, unsigned int, bool, art::Handle<art::mirror::ObjectArray<art::mirror::Object> >, bool, std::__1::set<art::ArtMethod*, std::__1::less<art::ArtMethod*>, art::ArenaAllocatorAdapter<art::ArtMethod*> > const&)
non-virtual thunk to art::gc::space::RegionSpace::FreeList(art::Thread*, unsigned int, art::mirror::Object**)
art::ScopedCheck::CheckThrowable(art::ScopedObjectAccess&, _jthrowable*)
std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >::__emplace_multi<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&>(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)
art::VariantMapKey<art::ParseStringList<(char)58> >::~VariantMapKey()
vtable for art::gc::collector::ConcurrentCopying::RevokeThreadLocalMarkStackCheckpoint
art::JNI::CallNonvirtualShortMethodV(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, char*)
art::OatHeader::Create(art::InstructionSet, art::InstructionSetFeatures const*, unsigned int, art::SafeMap<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::IntoKey(art::RuntimeArgumentMapKey<art::gc::space::LargeObjectSpaceType> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::gc::space::LargeObjectSpaceType& ()>::~__func()
std::__1::function<art::MillisecondsToNanoseconds& ()>::swap(std::__1::function<art::MillisecondsToNanoseconds& ()>&)
art::CheckJNI::GetStaticCharField(_JNIEnv*, _jclass*, _jfieldID*)
art::gc::collector::MarkCompact::ProcessMarkStack()
art::WellKnownClasses::java_lang_reflect_Parameter__array
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ProfileSaverOptions& ()>::operator()()
art::JDWP::expandBufAddUtf8String(art::JDWP::ExpandBuf*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
inflate_fast
art::ObjectTryLock<art::mirror::Class>::~ObjectTryLock()
art::DexFileVerifier::CheckInterSectionIterate(unsigned int, unsigned int, art::DexFile::MapItemType)
art::mirror::Constructor* art::mirror::Constructor::CreateFromArtMethod<(art::PointerSize)4, true>(art::Thread*, art::ArtMethod*)
art::JDWP::JdwpState::DdmSendChunkV(unsigned int, iovec const*, int)
art::GetClassLoadersVisitor::~GetClassLoadersVisitor()
art::JNI::GetCharField(_JNIEnv*, _jobject*, _jfieldID*)
art::Mutex::IsMutex() const
art::InternTable::LookupWeak(art::Thread*, art::ObjPtr<art::mirror::String>)
art::interpreter::UnstartedRuntime::UnstartedLongParseLong(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::JniMethodEnd(unsigned int, art::Thread*)
art::JDWP::JdwpState::SetWaitForJdwpToken(unsigned long long)
art::JNI::CallStaticVoidMethodA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
art::WellKnownClasses::java_lang_Thread
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::IntoKey(art::RuntimeArgumentMapKey<bool> const&)
art::JavaVMExt::FindCodeForNativeMethod(art::ArtMethod*)
void std::__1::vector<art::ArtMethod*, std::__1::allocator<art::ArtMethod*> >::__push_back_slow_path<art::ArtMethod* const&>(art::ArtMethod* const&)
art::CheckJNI::CallDoubleMethodV(_JNIEnv*, _jobject*, _jmethodID*, char*)
art::CheckJNI::GetStaticLongField(_JNIEnv*, _jclass*, _jfieldID*)
art::InternTable::StringHashEquals::operator()(art::GcRoot<art::mirror::String> const&, art::GcRoot<art::mirror::String> const&) const
art::ThreadPool::ThreadPool(char const*, unsigned int, bool)
art::ProfileCompilationInfo::AddClasses(std::__1::set<art::DexCacheResolvedClasses, std::__1::less<art::DexCacheResolvedClasses>, std::__1::allocator<art::DexCacheResolvedClasses> > const&)
std::__1::__shared_ptr_emplace<art::InstructionSet, std::__1::allocator<art::InstructionSet> >::__on_zero_shared()
art::instrumentation::Instrumentation::InstrumentQuickAllocEntryPoints()
std::__1::basic_filebuf<char, std::__1::char_traits<char> >::sync()
vtable for art::verifier::LongHiType
art::ClassLinker::RunRootClinits()
art::CheckJNI::GetStringLength(_JNIEnv*, _jstring*)
art::ElfFileImpl<ElfTypes32>::ValidPointer(unsigned char const*) const
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::verifier::FloatType::GetAssignmentTypeImpl() const
art::Thread::SetException(art::ObjPtr<art::mirror::Throwable>)
art::CheckJNI::CallStaticByteMethod(_JNIEnv*, _jclass*, _jmethodID*, ...)
art::Runtime::CreateResolutionMethod()
art::mirror::String::Equals(unsigned short const*, int, int)
art::StackOverflowHandler::StackOverflowHandler(art::FaultManager*)
art::mirror::PrimitiveArray<unsigned char>::Memcpy(int, art::ObjPtr<art::mirror::PrimitiveArray<unsigned char> >, int, int)
art::Transaction::InternStringLog::InternStringLog(art::ObjPtr<art::mirror::String>, art::Transaction::InternStringLog::StringKind, art::Transaction::InternStringLog::StringOp)
art::OatFile::Begin() const
art::gc::Heap::IsGCRequestPending() const
art::Locks::reference_queue_cleared_references_lock_
art::Transaction::VisitObjectLogs(art::RootVisitor*)
art::Histogram<unsigned long long>::PrintMemoryUse(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ProfileSaverOptions& ()>::destroy()
art::VariantMapKey<void (*)(int)>::ValueClone(void*) const
void std::__1::vector<std::__1::pair<_jobject*, art::StackReference<art::mirror::Object>*>, std::__1::allocator<std::__1::pair<_jobject*, art::StackReference<art::mirror::Object>*> > >::__push_back_slow_path<std::__1::pair<_jobject*, art::StackReference<art::mirror::Object>*> >(std::__1::pair<_jobject*, art::StackReference<art::mirror::Object>*>&&)
non-virtual thunk to art::gc::space::BumpPointerSpace::FreeList(art::Thread*, unsigned int, art::mirror::Object**)
art::ArtMethod::EqualParameters(art::Handle<art::mirror::ObjectArray<art::mirror::Class> >)
art::ObjectRegistry::AddRefType(art::Handle<art::mirror::Class>)
art::Transaction::ResolveStringLog::VisitRoots(art::RootVisitor*)
art::Memory<1u>::Name()
art::NthCallerWithDexPcVisitor::~NthCallerWithDexPcVisitor()
vtable for art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >
art::ObjectLock<art::mirror::Object>::NotifyAll()
art::ClassLinker::GetHoldingClassOfCopiedMethod(art::ArtMethod*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::MillisecondsToNanoseconds&)#1}, std::__1::allocator<{lambda(art::MillisecondsToNanoseconds&)#1}>, void (art::MillisecondsToNanoseconds&)>::~__func()
art::detail::CmdlineParseArgument<art::MillisecondsToNanoseconds>::ParseArgument(art::TokenRange const&, unsigned int*)
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)> > >::rehash(unsigned int)
art::ParsedOptions::UsageMessageV(__sFILE*, char const*, char*)
art::ElfFileImpl<ElfTypes64>::GetDynamicNum() const
art::gc::accounting::SpaceBitmap<4096u>::HeapBegin() const
art::gc::Heap::DumpForSigQuit(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::verifier::UninitializedReferenceType::IsUninitializedReference() const
art::verifier::ImpreciseConstHiType::Dump() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::IntoKey(art::RuntimeArgumentMapKey<art::ExperimentalFlags> const&)::{lambda(art::ExperimentalFlags&)#1}, std::__1::allocator<{lambda(art::ExperimentalFlags&)#1}>, void (art::ExperimentalFlags&)>::operator()(art::ExperimentalFlags&)
art::CheckJNI::GetPrimitiveArrayElements(char const*, art::Primitive::Type, _JNIEnv*, _jarray*, unsigned char*)
std::__1::__shared_ptr_emplace<art::verifier::VerifyMode, std::__1::allocator<art::verifier::VerifyMode> >::__on_zero_shared()
art::ArenaPool::FreeArenaChain(art::Arena*)
std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::SharedLibrary*>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::SharedLibrary*>, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::SharedLibrary*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::SharedLibrary*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::SharedLibrary*> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::JDWP::JdwpState::IsConnected()
std::__1::__tree<std::__1::__value_type<unsigned long long, art::ObjectRegistryEntry*>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, art::ObjectRegistryEntry*>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, art::ObjectRegistryEntry*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned long long, art::ObjectRegistryEntry*>, void*>*)
art::register_dalvik_system_VMRuntime(_JNIEnv*)
art::detail::CmdlineParseArgument<art::gc::space::LargeObjectSpaceType>::MaybeMatches(art::TokenRange const&)
art::JNI::GetFloatField(_JNIEnv*, _jobject*, _jfieldID*)
art::ScopedObjectAccessAlreadyRunnable::ForceCopy() const
art::mirror::Class::GetCommonSuperClass(art::Handle<art::mirror::Class>)
art::verifier::PcToRegisterLineTable::PcToRegisterLineTable(art::ScopedArenaAllocator&)
art::CheckJNI::SetIntArrayRegion(_JNIEnv*, _jintArray*, int, int, int const*)
art::Dbg::IsForcedInstrumentationNeededForResolutionImpl(art::Thread*, art::ArtMethod*)
void std::__1::vector<art::DeoptimizationRequest, std::__1::allocator<art::DeoptimizationRequest> >::__push_back_slow_path<art::DeoptimizationRequest const&>(art::DeoptimizationRequest const&)
art::gc::collector::ConcurrentCopying::AllocateInSkippedBlock(unsigned int)
art::GetSignalCodeName(int, int)
art::ClassLinker::ResolveField(art::DexFile const&, unsigned int, art::Handle<art::mirror::DexCache>, art::Handle<art::mirror::ClassLoader>, bool)
vtable for art::JavaStackTraceHandler
void art::JNI::GetPrimitiveArrayRegion<_jfloatArray*, float, art::mirror::PrimitiveArray<float> >(_JNIEnv*, _jfloatArray*, int, int, float*)
art::verifier::ReferenceType::IsReference() const
art::VariantMapKey<art::Memory<1u> >::Clone() const
art::gc::space::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::gc::space::RegionSpace::RegionState const&)
art::JDWP::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::JDWP::JdwpError const&)
art::gc::allocator::RosAlloc::ReleasePages()
art::BuildStackTraceVisitor::VisitFrame()
art::ClassLinker::ResolveFieldJLS(art::DexFile const&, unsigned int, art::Handle<art::mirror::DexCache>, art::Handle<art::mirror::ClassLoader>)
art::OatFileAssistant::OatFileInfo::IsOatLocation()
art::Runtime::VisitTransactionRoots(art::RootVisitor*)
art::CheckJNI::CallFloatMethodV(_JNIEnv*, _jobject*, _jmethodID*, char*)
art::jit::JitCompileTask::JitCompileTask(art::ArtMethod*, art::jit::JitCompileTask::TaskKind)
std::__1::pair<std::__1::__tree_iterator<art::dex::TypeIndex, std::__1::__tree_node<art::dex::TypeIndex, void*>*, int>, bool> std::__1::__tree<art::dex::TypeIndex, std::__1::less<art::dex::TypeIndex>, art::ArenaAllocatorAdapter<art::dex::TypeIndex> >::__emplace_unique_key_args<art::dex::TypeIndex, art::dex::TypeIndex const&>(art::dex::TypeIndex const&, art::dex::TypeIndex const&)
art::mirror::Class::PrettyClass(art::ObjPtr<art::mirror::Class>)
MterpNewInstance
art::ThreadList::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bool)
art::mirror::Object* art::gc::Heap::AllocObjectWithAllocator<true, true, art::mirror::SetStringCountVisitor>(art::Thread*, art::ObjPtr<art::mirror::Class>, unsigned int, art::gc::AllocatorType, art::mirror::SetStringCountVisitor const&)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, double& ()>
art::BuildQuickShadowFrameVisitor::Visit()
art::gc::collector::MarkCompact::MarkHeapReference(art::mirror::HeapReference<art::mirror::Object>*, bool)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, double& ()>::__clone(std::__1::__function::__base<double&>*) const
art::MemMap::MadviseDontNeedAndZero()
art::mirror::PrimitiveArray<signed char>::Memmove(int, art::ObjPtr<art::mirror::PrimitiveArray<signed char> >, int, int)
art::CumulativeLogger::Start()
art::mirror::CopyClassVisitor::operator()(art::ObjPtr<art::mirror::Object>, unsigned int) const
artIGetObjectFromMterp
art::ClassLinker::RegisterDexFileLocked(art::DexFile const&, art::ObjPtr<art::mirror::DexCache>, art::ObjPtr<art::mirror::ClassLoader>)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::IntoKey(art::RuntimeArgumentMapKey<art::verifier::VerifyMode> const&)::{lambda(art::verifier::VerifyMode&)#1}, std::__1::allocator<{lambda(art::verifier::VerifyMode&)#1}>, void (art::verifier::VerifyMode&)>::destroy_deallocate()
art::verifier::RegType::IsLongLo() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)::{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}, std::__1::allocator<{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}>, void (std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)>::~__func()
art::gc::accounting::SpaceBitmap<8u>::HeapBegin() const
vtable for art::Mutex
art::gc::space::BumpPointerSpace::AllocationSizeNonvirtual(art::mirror::Object*, unsigned int*)
unsigned int std::__1::__sort4<art::LinkFieldsComparator&, std::__1::__deque_iterator<art::ArtField*, art::ArtField**, art::ArtField*&, art::ArtField***, int, 1024> >(std::__1::__deque_iterator<art::ArtField*, art::ArtField**, art::ArtField*&, art::ArtField***, int, 1024>, std::__1::__deque_iterator<art::ArtField*, art::ArtField**, art::ArtField*&, art::ArtField***, int, 1024>, std::__1::__deque_iterator<art::ArtField*, art::ArtField**, art::ArtField*&, art::ArtField***, int, 1024>, std::__1::__deque_iterator<art::ArtField*, art::ArtField**, art::ArtField*&, art::ArtField***, int, 1024>, art::LinkFieldsComparator&)
art::InternTable::Table::Size() const
void art::mirror::ObjectArray<art::mirror::Object>::AssignableCheckingMemcpy<true>(int, art::ObjPtr<art::mirror::ObjectArray<art::mirror::Object> >, int, int, bool)
art::verifier::MethodVerifier::GetQuickFieldAccess(art::Instruction const*, art::verifier::RegisterLine*)
art::BuildNativeCallFrameStateMachine<art::ComputeNativeCallFrameSize>::~BuildNativeCallFrameStateMachine()
std::__1::__hash_table<std::__1::__hash_value_type<art::ArtMethod*, art::ArtMethod*>, std::__1::__unordered_map_hasher<art::ArtMethod*, std::__1::__hash_value_type<art::ArtMethod*, art::ArtMethod*>, std::__1::hash<art::ArtMethod*>, true>, std::__1::__unordered_map_equal<art::ArtMethod*, std::__1::__hash_value_type<art::ArtMethod*, art::ArtMethod*>, std::__1::equal_to<art::ArtMethod*>, true>, art::ScopedArenaAllocatorAdapter<std::__1::__hash_value_type<art::ArtMethod*, art::ArtMethod*> > >::__rehash(unsigned int)
art::gc::space::RegionSpace::GetMarkBitmap() const
art::Dbg::SuspendThread(unsigned long long, bool)
art::gc::Heap::RevokeThreadLocalBuffers(art::Thread*)
art::ArtMethod::UnregisterNative()
non-virtual thunk to art::gc::space::ZygoteSpace::~ZygoteSpace()
void art::ClassTable::VisitRoots<art::mirror::ReadBarrierOnNativeRootsVisitor>(art::mirror::ReadBarrierOnNativeRootsVisitor const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1024u>& ()>::__clone() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::IntoKey(art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::JDWP::JdwpOptions& ()>::~__func()
_length_code
art::gc::accounting::MemoryRangeBitmap<1024u>::CoverEnd() const
art::verifier::RegType::IsUnresolvedSuperClass() const
art::CheckJNI::CallShortMethodA(_JNIEnv*, _jobject*, _jmethodID*, jvalue*)
art::Trace::GetVisitedMethods(unsigned int, std::__1::set<art::ArtMethod*, std::__1::less<art::ArtMethod*>, std::__1::allocator<art::ArtMethod*> >*)
bool art::interpreter::DoFieldGet<(art::FindFieldType)0, (art::Primitive::Type)0, false>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::ClassLinker::ResolveMethodWithoutInvokeType(art::DexFile const&, unsigned int, art::Handle<art::mirror::DexCache>, art::Handle<art::mirror::ClassLoader>)
art::CheckJNI::CallNonvirtualObjectMethodV(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, char*)
vtable for art::RuntimeArgumentMapKey<art::ParseStringList<(char)58> >
art::gc::accounting::EmptyMarkObjectVisitor::~EmptyMarkObjectVisitor()
art::gc::Heap::ThreadFlipBegin(art::Thread*)
std::__1::__shared_ptr_pointer<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::default_delete<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__on_zero_shared()
std::__1::__tree_node_base<void*>*& std::__1::__tree<art::verifier::VerifierDeps::TypeAssignability, std::__1::less<art::verifier::VerifierDeps::TypeAssignability>, std::__1::allocator<art::verifier::VerifierDeps::TypeAssignability> >::__find_equal<art::verifier::VerifierDeps::TypeAssignability>(std::__1::__tree_const_iterator<art::verifier::VerifierDeps::TypeAssignability, std::__1::__tree_node<art::verifier::VerifierDeps::TypeAssignability, void*>*, int>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, art::verifier::VerifierDeps::TypeAssignability const&)
art::ClassLinker::CanWeInitializeClass(art::ObjPtr<art::mirror::Class>, bool, bool)
bool art::interpreter::DoInvokePolymorphic<false>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode> art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::CreateTypedBuilder<art::verifier::VerifyMode>()
art::mirror::PrimitiveArray<double>::Memmove(int, art::ObjPtr<art::mirror::PrimitiveArray<double> >, int, int)
art::InternTable::InsertStrongFromTransaction(art::ObjPtr<art::mirror::String>)
art::DeoptimizeStackVisitor::FinishStackWalk()
art::CheckJNI::CallStaticBooleanMethod(_JNIEnv*, _jclass*, _jmethodID*, ...)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoIgnore()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::IntoKey(art::RuntimeArgumentMapKey<art::ExperimentalFlags> const&)::{lambda(art::ExperimentalFlags&)#1}, std::__1::allocator<{lambda(art::ExperimentalFlags&)#1}>, void (art::ExperimentalFlags&)>::__clone() const
art::Runtime::Runtime()
art::SignalCatcher::HandleSigUsr1()
art::ArmInstructionSetFeatures::AddFeaturesFromSplitString(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
art::interpreter::UnstartedRuntime::InitializeJNIHandlers()
std::__1::vector<char, std::__1::allocator<char> >::__append(unsigned int)
art::VariantMapKey<art::Memory<1u> >::~VariantMapKey()
art::verifier::PreciseConstType::Dump() const
art::ClassHierarchyAnalysis::RemoveDependenciesForLinearAlloc(art::LinearAlloc const*)
art::gc::space::RosAllocSpace::MaxBytesBulkAllocatedFor(unsigned int)
art::CheckJNI::GetMethodIDInternal(char const*, _JNIEnv*, _jclass*, char const*, char const*, bool)
art::OatHeader::GetQuickResolutionTrampolineOffset() const
art::gc::space::DlMallocSpace::IsDlMallocSpace() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >& ()>::destroy_deallocate()
art::GuardedCopy::kCanary
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1u> > const&)::{lambda(art::Memory<1u>&)#1}, std::__1::allocator<{lambda(art::Memory<1u>&)#1}>, void (art::Memory<1u>&)>::destroy()
art::Runtime::EndThreadBirth()
art::mirror::String::AllocFromModifiedUtf8(art::Thread*, int, char const*)
art::JNI::CallNonvirtualLongMethodA(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, jvalue*)
art::mirror::Field::static_class_
art::ClassLinker::SetEntryPointsToCompiledCode(art::ArtMethod*, void const*) const
art::gc::accounting::SpaceBitmap<8u>::Clear(art::mirror::Object const*)
art::detail::CmdlineParserArgumentInfo<art::ExperimentalFlags>::~CmdlineParserArgumentInfo()
art::jit::Jit::generate_debug_info_
art::ClassHierarchyAnalysis::InvalidateSingleImplementationMethods(std::__1::unordered_set<art::ArtMethod*, std::__1::hash<art::ArtMethod*>, std::__1::equal_to<art::ArtMethod*>, std::__1::allocator<art::ArtMethod*> >&)
art::JNI::CallNonvirtualIntMethodA(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, jvalue*)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::IntoKey(art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions> const&)::{lambda(art::JDWP::JdwpOptions&)#1}, std::__1::allocator<{lambda(art::JDWP::JdwpOptions&)#1}>, void (art::JDWP::JdwpOptions&)>
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::MillisecondsToNanoseconds& ()>::destroy()
art::detail::CmdlineParseArgument<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::GetTypeName() const
art::TrackedAllocators::g_max_bytes_used
art::ObjPtr<art::mirror::Class> art::ArtField::GetType<false>()
std::__1::__hash_table<std::__1::__hash_value_type<art::mirror::Object const*, art::gc::AllocRecordStackTrace const*>, std::__1::__unordered_map_hasher<art::mirror::Object const*, std::__1::__hash_value_type<art::mirror::Object const*, art::gc::AllocRecordStackTrace const*>, std::__1::hash<art::mirror::Object const*>, true>, std::__1::__unordered_map_equal<art::mirror::Object const*, std::__1::__hash_value_type<art::mirror::Object const*, art::gc::AllocRecordStackTrace const*>, std::__1::equal_to<art::mirror::Object const*>, true>, std::__1::allocator<std::__1::__hash_value_type<art::mirror::Object const*, art::gc::AllocRecordStackTrace const*> > >::rehash(unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >& ()>::~__func()
art::gc::collector::ConcurrentCopying::ProcessMarkStack()
int art::interpreter::MterpSetStatic<unsigned short, (art::Primitive::Type)3>(unsigned int, unsigned short, art::ArtMethod*, art::Thread*, void (art::ArtField::*)(art::ObjPtr<art::mirror::Object>, unsigned short))
bool art::interpreter::DoInvokeCustom<false>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)
art::detail::CmdlineParserArgumentInfo<unsigned int>::CompleteArgument()
guard variable for art::mirror::PrimitiveArray<short>::array_class_
art::JNI::CallNonvirtualShortMethod(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, ...)
art::detail::CmdlineParseArgument<art::XGcOption>::ParseArgument(art::TokenRange const&, unsigned int*)
art::TimingLogger::CalculateTimingData() const
art::InternTable::DumpForSigQuit(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::gc::space::ZygoteSpace::Free(art::Thread*, art::mirror::Object*)
void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::collector::MarkCompact::MarkObjectVisitor, art::gc::collector::MarkCompact::MarkObjectVisitor>(art::gc::collector::MarkCompact::MarkObjectVisitor const&, art::gc::collector::MarkCompact::MarkObjectVisitor const&)
artAllocObjectFromCodeWithChecksRegion
void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::mirror::CopyReferenceFieldsWithReadBarrierVisitor, art::mirror::CopyReferenceFieldsWithReadBarrierVisitor>(art::mirror::CopyReferenceFieldsWithReadBarrierVisitor const&, art::mirror::CopyReferenceFieldsWithReadBarrierVisitor const&)
art::Transaction::ObjectLog::LogValue(art::Transaction::ObjectLog::FieldValueKind, art::MemberOffset, unsigned long long, bool)
void art::mirror::Object::VisitFieldsReferences<false, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::VerifyReferenceCardVisitor>(unsigned int, art::gc::VerifyReferenceCardVisitor const&)
art::gc::space::RosAllocSpace::RosAllocSpace(art::MemMap*, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::gc::allocator::RosAlloc*, unsigned char*, unsigned char*, unsigned char*, unsigned int, bool, unsigned int, bool)
art::gc::collector::MarkSweep::MarkRootsCheckpoint(art::Thread*, bool)
art::JNI::SetLongField(_JNIEnv*, _jobject*, _jfieldID*, long long)
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::overflow(int)
art::RuntimeArgumentMap::HookAbort
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >& ()>::~__func()
__deregister_frame_info_bases
art::mirror::PrimitiveArray<double>::VisitRoots(art::RootVisitor*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, bool& ()>::destroy_deallocate()
art::hprof::EndianOutput::~EndianOutput()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >& ()>::operator()()
art::ThreadList::AllocThreadId(art::Thread*)
art::CodeSimulatorContainer::CodeSimulatorContainer(art::InstructionSet)
art::CheckJNI::GetStringUTFRegion(_JNIEnv*, _jstring*, int, int, char*)
bool art::interpreter::DoFieldGet<(art::FindFieldType)6, (art::Primitive::Type)3, true>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::verifier::ShortType::instance_
art::SignalCatcher::SignalCatcher(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
art::Dbg::GetClassObject(unsigned long long, unsigned long long*)
MterpIputObject
art::SignalCatcher::SignalCatcher(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
art::verifier::VerifierDeps::MaybeRecordFieldResolution(art::DexFile const&, unsigned int, art::ArtField*)
art::CheckJNI::ReleaseIntArrayElements(_JNIEnv*, _jintArray*, int*, int)
art::SignalCatcher::~SignalCatcher()
art::Runtime::ReclaimArenaPoolMemory()
art::ScopedArenaAllocator::DoReset()
art::mirror::EmulatedStackFrame::SetClass(art::mirror::Class*)
art::gc::space::RosAllocSpace::Alloc(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::gc::ReferenceProcessor::GetReferent(art::Thread*, art::ObjPtr<art::mirror::Reference>)
MterpInvokeDirect
art::CheckJNI::CallStaticDoubleMethodA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
art::gc::space::BumpPointerSpace::FreeList(art::Thread*, unsigned int, art::mirror::Object**)
art::DlOpenOatFile::host_dlopen_handles_
void art::mirror::Class::VisitNativeRoots<(art::ReadBarrierOption)1, art::gc::collector::ConcurrentCopying::RefFieldsVisitor const>(art::gc::collector::ConcurrentCopying::RefFieldsVisitor const&, art::PointerSize)
art::gc::collector::MarkSweep::ProcessMarkStackParallel(unsigned int)
art::ClassLinker::DropFindArrayClassCache()
vtable for art::SuspensionHandler
std::__1::__split_buffer<art::LockWord*, std::__1::allocator<art::LockWord*>&>::push_back(art::LockWord*&&)
art::mirror::PrimitiveArray<short>::Memmove(int, art::ObjPtr<art::mirror::PrimitiveArray<short> >, int, int)
artAllocStringFromCharsFromCodeBumpPointerInstrumented
art::Locks::mutator_lock_
art::ClassLoaderContext::ClassLoaderContext(bool)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::Unit&)#1}> >*) const
art::OatFile::~OatFile()
art::ThrowIllegalAccessException(char const*)
non-virtual thunk to art::gc::collector::MarkCompact::~MarkCompact()
art::JNI::NewLocalRef(_JNIEnv*, _jobject*)
art::verifier::VerifierDeps::VerifierDeps(std::__1::vector<art::DexFile const*, std::__1::allocator<art::DexFile const*> > const&)
art::DebugInstrumentationListener::ExceptionCaught(art::Thread*, art::Handle<art::mirror::Throwable>)
create_mspace
art::ElfFile::GetFilePath() const
art::Dbg::GetThreadFrames(unsigned long long, unsigned int, unsigned int, art::JDWP::ExpandBuf*)
art::VariantMapKey<art::CompilerCallbacks*>::~VariantMapKey()
android::base::ScopedLogSeverity::ScopedLogSeverity(android::base::LogSeverity)
art::hprof::EndianOutputBuffered::~EndianOutputBuffered()
art::verifier::DoubleHiType::IsDoubleHi() const
unix_file::FdFile::~FdFile()
art::JDWP::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::JDWP::JdwpLocation const&)
art::Dbg::MatchType(art::ObjPtr<art::mirror::Class>, unsigned long long)
art::Runtime::ResetStats(int)
art::gc::collector::ConcurrentCopying::RevokeThreadLocalMarkStackCheckpoint::Run(art::Thread*)
art::FaultManager::HandleFault(int, siginfo*, void*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1u> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1u>& ()>::destroy()
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Dbg::HpifWhen const&)
art::ClassTable::FreezeSnapshot()
art::Dbg::OutputDeclaredFields(unsigned long long, bool, art::JDWP::ExpandBuf*)
art::gc::space::MallocSpace::SweepCallback(unsigned int, art::mirror::Object**, void*)
art::Trace::StoreExitingThreadInfo(art::Thread*)
art::ClassLoaderContext::ClassLoaderContext()
vtable for art::verifier::ImpreciseConstType
art::gc::collector::ConcurrentCopying::AssertToSpaceInvariant(art::mirror::Object*, art::MemberOffset, art::mirror::Object*)
art::LookupClassesVisitor::~LookupClassesVisitor()
std::__1::__shared_ptr_emplace<double, std::__1::allocator<double> >::~__shared_ptr_emplace()
art::gc::space::MemoryToolMallocSpace<art::gc::space::RosAllocSpace, 8u, false, true>::Free(art::Thread*, art::mirror::Object*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::JDWP::JdwpOptions& ()>::destroy_deallocate()
art::ThrowIncompatibleClassChangeError(art::ObjPtr<art::mirror::Class>, char const*, ...)
art::gc::TaskProcessor::GetTask(art::Thread*)
art::JDWP::JdwpState::PostFieldEvent(art::JDWP::EventLocation const*, art::ArtField*, art::mirror::Object*, art::JValue const*, bool)
art::Dbg::GetRecentAllocations()
artAllocStringFromBytesFromCodeBumpPointer
art::CheckJNI::ReleasePrimitiveArrayElements(char const*, art::Primitive::Type, _JNIEnv*, _jarray*, void*, int)
std::__1::deque<art::ArtField*, std::__1::allocator<art::ArtField*> >::__add_back_capacity()
art::gc::space::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::gc::space::Space const&)
art::mirror::PrimitiveArray<int>::Memcpy(int, art::ObjPtr<art::mirror::PrimitiveArray<int> >, int, int)
art::OatHeader::IsDebuggable() const
art::CheckJNI::GetBooleanArrayRegion(_JNIEnv*, _jbooleanArray*, int, int, unsigned char*)
art::ProfileCompilationInfo::SafeBuffer::Advance(unsigned int)
MterpGetObjStatic
std::__1::deque<art::LockWord, std::__1::allocator<art::LockWord> >::__add_back_capacity()
art::JNI::NewWeakGlobalRef(_JNIEnv*, _jobject*)
art::Locks::abort_lock_
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::IntoKey(art::RuntimeArgumentMapKey<art::verifier::VerifyMode> const&)::{lambda(art::verifier::VerifyMode&)#1}, std::__1::allocator<{lambda(art::verifier::VerifyMode&)#1}>, void (art::verifier::VerifyMode&)>::destroy()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)::{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}, std::__1::allocator<{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}>, void (std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)>::destroy()
art::gc::space::Space::IsContinuousSpace() const
art::ThreadList::VisitRoots(art::RootVisitor*, art::VisitRootFlags) const
zlibVersion
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >& ()>::__clone(std::__1::__function::__base<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&>*) const
art::SetThreadName(char const*)
art::DexFileVerifier::CheckEncodedAnnotation()
art::Runtime::ExitTransactionMode()
art::GetSystemImageFilename(char const*, art::InstructionSet)
std::__1::__tree<art::gc::space::ContinuousSpace*, art::gc::collector::ImmuneSpaces::CompareByBegin, std::__1::allocator<art::gc::space::ContinuousSpace*> >::destroy(std::__1::__tree_node<art::gc::space::ContinuousSpace*, void*>*)
art::Dbg::GetBytecodes(unsigned long long, unsigned long long, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >*)
art::JNI::CallStaticFloatMethod(_JNIEnv*, _jclass*, _jmethodID*, ...)
art::mirror::PrimitiveArray<unsigned short>::AllocateAndFill(art::Thread*, unsigned short const*, unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::IntoKey(art::RuntimeArgumentMapKey<double> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, double& ()>::~__func()
art::ThrowVerifyError(art::ObjPtr<art::mirror::Class>, char const*, ...)
art::CheckJNI::CallFloatMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)
art::ClassLinker::LinkSuperClass(art::Handle<art::mirror::Class>)
vtable for art::RuntimeArgumentMapKey<art::gc::space::LargeObjectSpaceType>
bool art::interpreter::DoFieldPut<(art::FindFieldType)5, (art::Primitive::Type)0, false, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::CmdlineType<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::Parse(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::verifier::UnresolvedMergedType::UnresolvedMergedType(art::verifier::RegType const&, art::BitVector const&, art::verifier::RegTypeCache const*, unsigned short)
void art::mirror::Class::VisitNativeRoots<(art::ReadBarrierOption)0, art::gc::collector::MarkCompact::UpdateReferenceVisitor const>(art::gc::collector::MarkCompact::UpdateReferenceVisitor const&, art::PointerSize)
art::UpdateReference(art::Thread*, _jobject*, art::ObjPtr<art::mirror::Object>)
art::mirror::Throwable::SetDetailMessage(art::ObjPtr<art::mirror::String>)
art::WellKnownClasses::dalvik_system_DexPathList__Element_dexFile
bool art::interpreter::DoFieldPut<(art::FindFieldType)1, (art::Primitive::Type)0, false, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)4, false, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::verifier::PcToRegisterLineTable::PcToRegisterLineTable(art::ScopedArenaAllocator&)
art::ClassLinker::InsertClassTableForClassLoader(art::ObjPtr<art::mirror::ClassLoader>)
art::ComputeGenericJniFrameSize::PushHandle(art::mirror::Object*)
art::gc::collector::ConcurrentCopying::RevokeThreadLocalMarkStackCheckpoint::~RevokeThreadLocalMarkStackCheckpoint()
art::FaultManager::Init()
vtable for art::gc::space::MemMapSpace
double& art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination::GetOrCreateFromMap<double>(art::RuntimeArgumentMapKey<double> const&)
vtable for art::RuntimeArgumentMapKey<bool>
art::gc::space::LargeObjectSpace::CopyLiveToMarked()
art::TypeLookupTable::~TypeLookupTable()
art::mirror::String::GetChars(int, int, art::Handle<art::mirror::PrimitiveArray<unsigned short> >, int)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::PointerSize const&)
art::JDWP::expandBufFree(art::JDWP::ExpandBuf*)
art::gc::ReferenceProcessor::MakeCircularListIfUnenqueued(art::ObjPtr<art::mirror::FinalizerReference>)
art::WellKnownClasses::java_nio_DirectByteBuffer_capacity
art::JNI::CallCharMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)
unix_file::FdFile::FdFile(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, bool)
art::Monitor::DoNotify(art::Thread*, art::mirror::Object*, bool)
vtable for art::detail::CmdlineParseArgument<art::Memory<1u> >
art::InstructionSetFeatures::FromCppDefines()
art::gc::accounting::SpaceBitmap<4096u>::ClearRange(art::mirror::Object const*, art::mirror::Object const*)
_ZN3art6detail11ToStringAnyINS_17ExperimentalFlagsEEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKT_PNS3_9enable_ifIXsr25SupportsInsertionOperatorISA_EE5valueEvE4typeE
void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__push_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&)
art::verifier::UninitializedThisReferenceType::Dump() const
art::mirror::Class::FindVirtualMethodForInterfaceSuper(art::ArtMethod*, art::PointerSize)
art::ConditionVariable::ConditionVariable(char const*, art::Mutex&)
art::ArenaPool::LockReclaimMemory()
art::OatFileAssistant::GetImageInfo()
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf64_Sym*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf64_Sym*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf64_Sym*> > >::__find_equal<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf64_Sym*> >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf64_Sym*> const&)
art::OatHeader::GetQuickResolutionTrampoline() const
art::JNI::GetStringRegion(_JNIEnv*, _jstring*, int, int, unsigned short*)
void art::JNI::GetPrimitiveArrayRegion<_jshortArray*, short, art::mirror::PrimitiveArray<short> >(_JNIEnv*, _jshortArray*, int, int, short*)
ProcessZipEntryContents(void*, ZipEntry*, bool (*)(unsigned char const*, unsigned int, void*), void*)
void art::JNI::GetPrimitiveArrayRegion<_jintArray*, int, art::mirror::PrimitiveArray<int> >(_JNIEnv*, _jintArray*, int, int, int*)
art::ImageHeader::RelocateImageObjects(long)
std::__1::deque<std::__1::pair<art::mirror::Object*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<art::mirror::Object*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::__add_back_capacity()
vtable for art::VariantMapKey<art::BackgroundGcOption>
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoIgnore()::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>::__clone(std::__1::__function::__base<art::Unit&>*) const
art::TimingLogger::Reset()
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)2, false, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::jit::Jit::MaybeDoOnStackReplacement(art::Thread*, art::ArtMethod*, unsigned int, int, art::JValue*)
art::mirror::Class::SetObjectSizeAllocFastPath(unsigned int)
art::DexFileVerifier::CheckInterClassDataItem()
art::gc::accounting::ModUnionTableCardCache::~ModUnionTableCardCache()
art::ClassHierarchyAnalysis::CheckInterfaceMethodSingleImplementationInfo(art::Handle<art::mirror::Class>, art::ArtMethod*, art::ArtMethod*, std::__1::unordered_set<art::ArtMethod*, std::__1::hash<art::ArtMethod*>, std::__1::equal_to<art::ArtMethod*>, std::__1::allocator<art::ArtMethod*> >&, art::PointerSize)
art::interpreter::UnstartedRuntime::Jni(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
art::verifier::UninitializedReferenceType::Dump() const
vtable for art::gc::collector::SemiSpace
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)2, false, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::gc::allocator::RosAlloc::BulkFree(art::Thread*, void**, unsigned int)
art::ProfileCompilationInfo::DexFileData::AddMethod(art::ProfileCompilationInfo::MethodHotness::Flag, unsigned int)
art::annotations::GetAnnotationForField(art::ArtField*, art::Handle<art::mirror::Class>)
art::gc::collector::MarkCompact::MarkCompact(art::gc::Heap*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::gc::collector::MarkSweep::SweepSystemWeaks(art::Thread*)
art::gc::collector::MarkCompact::MarkObject(art::mirror::Object*)::{lambda(art::mirror::Object const*)#1}::operator()(art::mirror::Object const*) const
art::gc::accounting::MemoryRangeBitmap<16u>::Set(unsigned int)
art::hprof::EndianOutput::HandleU8List(unsigned long long const*, unsigned int)
art::mirror::CallSite::Create(art::Thread*, art::Handle<art::mirror::MethodHandle>)
art::RuntimeArgumentMap::Experimental
art::Thread::SetStackEndForStackOverflow()
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Parse(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<art::ProfileSaverOptions>(art::RuntimeArgumentMapKey<art::ProfileSaverOptions> const&)
art::VariantMapKey<art::Memory<1u> >::ValueClone(void*) const
art::gc::space::ImageSpace::ValidateOatFile(art::OatFile const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::ElfFileImpl<ElfTypes32>::GetLoadedSize(unsigned int*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::SharedLibrary*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::SharedLibrary*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::SharedLibrary*> > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::MonitorInfo::MonitorInfo(art::mirror::Object*)
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::gc::collector::ConcurrentCopying::VerifyGrayImmuneObjectsVisitor const>(art::gc::collector::ConcurrentCopying::VerifyGrayImmuneObjectsVisitor const&, art::PointerSize)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::Memory<1024u>&)#1}, std::__1::allocator<{lambda(art::Memory<1024u>&)#1}>, void (art::Memory<1024u>&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::Memory<1024u>&)#1}> >*) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::BackgroundGcOption> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::BackgroundGcOption& ()>::__clone(std::__1::__function::__base<art::BackgroundGcOption&>*) const
void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::gc::collector::SemiSpace::MarkObjectVisitor, art::gc::collector::SemiSpace::MarkObjectVisitor>(art::gc::collector::SemiSpace::MarkObjectVisitor const&, art::gc::collector::SemiSpace::MarkObjectVisitor const&)
art::InternTable::LookupStrong(art::Thread*, art::ObjPtr<art::mirror::String>)
art::ArtField* art::FindFieldFromCode<(art::FindFieldType)2, false>(unsigned int, art::ArtMethod*, art::Thread*, unsigned int)
art::verifier::DoubleLoType::GetAssignmentTypeImpl() const
art::ThreadList::SuspendAll(char const*, bool)
art::ArenaStack::AllocateFromNextArena(unsigned int)
art::verifier::FloatType::instance_
std::__1::__deque_base<art::instrumentation::InstrumentationStackFrame, std::__1::allocator<art::instrumentation::InstrumentationStackFrame> >::~__deque_base()
art::RuntimeArgumentMap::HookVfprintf
art::JNI::ReleasePrimitiveArray(art::ScopedObjectAccess&, art::mirror::Array*, unsigned int, void*, int)
std::__1::vector<bool, std::__1::allocator<bool> >::operator=(std::__1::vector<bool, std::__1::allocator<bool> > const&)
void std::__1::vector<art::MethodCallback*, std::__1::allocator<art::MethodCallback*> >::__push_back_slow_path<art::MethodCallback* const&>(art::MethodCallback* const&)
art::Thread::GetThreadName() const
void art::JNI::ReleasePrimitiveArray<_jfloatArray*, float, art::mirror::PrimitiveArray<float> >(_JNIEnv*, _jfloatArray*, float*, int)
art::InternTable::ContainsWeak(art::ObjPtr<art::mirror::String>)
art::mirror::PrimitiveArray<unsigned short>::Set(int, unsigned short)
art::JNI::CallFloatMethodV(_JNIEnv*, _jobject*, _jmethodID*, char*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::JDWP::JdwpOptions& ()>::~__func()
art::InitTimeSpec(bool, int, long long, int, timespec*)
art::gc::collector::MarkCompact::BindBitmaps()
artThrowArrayStoreException
art::gc::accounting::HeapBitmap::RemoveLargeObjectBitmap(art::gc::accounting::SpaceBitmap<4096u>*)
art::gc::collector::GarbageCollector::GetCurrentIteration()
art::RuntimeArgumentMap::MadviseRandomAccess
art::DexFile::~DexFile()
art::gc::VerifyObjectVisitor::VerifyRoots()
art::CheckJNI::UnregisterNatives(_JNIEnv*, _jclass*)
art::gc::collector::ConcurrentCopying::RevokeThreadLocalMarkStacks(bool, art::Closure*)
vtable for std::__1::basic_ifstream<char, std::__1::char_traits<char> >
art::WellKnownClasses::dalvik_system_EmulatedStackFrame
art::OatFileAssistant::LoadDexFiles(art::OatFile const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > >*)
art::OatDexFile::OatDexFile(std::__1::unique_ptr<art::TypeLookupTable, std::__1::default_delete<art::TypeLookupTable> >&&)
art::BuildInternalStackTraceVisitor<true>::~BuildInternalStackTraceVisitor()
art::mirror::Class::GetLocation()
void art::mirror::Class::VisitNativeRoots<(art::ReadBarrierOption)0, art::gc::accounting::RememberedSetReferenceVisitor const>(art::gc::accounting::RememberedSetReferenceVisitor const&, art::PointerSize)
art::StringPiece::find(art::StringPiece const&, unsigned int) const
art::interpreter::UnstartedRuntime::UnstartedClassGetDeclaredField(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::IntoKey(art::RuntimeArgumentMapKey<art::ExperimentalFlags> const&)::{lambda(art::ExperimentalFlags&)#1}, std::__1::allocator<{lambda(art::ExperimentalFlags&)#1}>, void (art::ExperimentalFlags&)>::destroy_deallocate()
art::x86::X86Context::IsAccessibleGPR(unsigned int)
art::Thread::RequestSynchronousCheckpoint(art::Closure*)
std::__1::basic_filebuf<char, std::__1::char_traits<char> >::~basic_filebuf()
std::__1::__tree_node_base<void*>*& std::__1::__tree<art::Histogram<unsigned long long>*, art::CompareHistorgramByTimeSpentDeclining, std::__1::allocator<art::Histogram<unsigned long long>*> >::__find_equal<art::Histogram<unsigned long long>*>(std::__1::__tree_const_iterator<art::Histogram<unsigned long long>*, std::__1::__tree_node<art::Histogram<unsigned long long>*, void*>*, int>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, art::Histogram<unsigned long long>* const&)
void art::ClassTable::VisitRoots<art::gc::collector::SemiSpace::MarkObjectVisitor>(art::gc::collector::SemiSpace::MarkObjectVisitor const&)
std::__1::__tree_node_base<void*>*& std::__1::__tree<art::dex::TypeIndex, std::__1::less<art::dex::TypeIndex>, std::__1::allocator<art::dex::TypeIndex> >::__find_equal<art::dex::TypeIndex>(std::__1::__tree_const_iterator<art::dex::TypeIndex, std::__1::__tree_node<art::dex::TypeIndex, void*>*, int>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, art::dex::TypeIndex const&)
art::InstructionSetFeatures::AsArm64InstructionSetFeatures() const
art::IndirectReferenceTable::~IndirectReferenceTable()
art::mirror::MethodHandlesLookup::VisitRoots(art::RootVisitor*)
art::gc::space::ZygoteSpace::AllocationSize(art::mirror::Object*, unsigned int*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::IntoKey(art::RuntimeArgumentMapKey<art::ParseStringList<(char)58> > const&)
void std::__1::vector<std::__1::pair<art::GcRoot<art::mirror::Class>, art::verifier::RegType const*>, art::ScopedArenaAllocatorAdapter<std::__1::pair<art::GcRoot<art::mirror::Class>, art::verifier::RegType const*> > >::__push_back_slow_path<std::__1::pair<art::GcRoot<art::mirror::Class>, art::verifier::RegType const*> >(std::__1::pair<art::GcRoot<art::mirror::Class>, art::verifier::RegType const*>&&)
art::CumulativeLogger::CumulativeLogger(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::gc::collector::ConcurrentCopying::ProcessThreadLocalMarkStacks(bool, art::Closure*)
art::gc::space::BumpPointerSpace::Alloc(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::JNI::GetShortField(_JNIEnv*, _jobject*, _jfieldID*)
art::interpreter::UnstartedRuntime::UnstartedJNIUnsafeGetArrayBaseOffsetForComponentType(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
art::WellKnownClasses::dalvik_system_VMRuntime_runFinalization
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>::operator()()
android::base::StartsWithIgnoreCase(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*)
art::verifier::VerifierDeps::VerifierDeps(std::__1::vector<art::DexFile const*, std::__1::allocator<art::DexFile const*> > const&, bool)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1024u> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1024u>& ()>::operator()()
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Plugin const*)
art::Thread::SetUpAlternateSignalStack()
art::verifier::PrimitiveType::~PrimitiveType()
void art::mirror::Class::GetAccessFlagsDCheck<(art::VerifyObjectFlags)4>()
art::verifier::PreciseReferenceType::IsPreciseReference() const
MterpInvokeSuperRange
art::ClassTable::TableSlot::TableSlot(art::ObjPtr<art::mirror::Class>)
art::gc::space::FreeListSpace::~FreeListSpace()
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)2, true, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
vtable for art::RuntimeArgumentMapKey<art::TraceClockSource>
art::gc::Heap::RemoveSpace(art::gc::space::Space*)
art::JNI::NewShortArray(_JNIEnv*, int)
art::DexFileVerifier::CheckFieldAccessFlags(unsigned int, unsigned int, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::DexFile::FindTypeId(char const*) const
art::gc::space::LargeObjectSpace::Contains(art::mirror::Object const*) const
non-virtual thunk to art::gc::space::RegionSpace::GetBytesAllocated()
art::CmpgFloat(float, float)
art::ClassTable::NumReferencedNonZygoteClasses() const
bool art::interpreter::DoIPutQuick<(art::Primitive::Type)3, true>(art::ShadowFrame const&, art::Instruction const*, unsigned short)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, unsigned int& ()>::destroy()
art::gc::collector::MarkSweep::RevokeAllThreadLocalAllocationStacks(art::Thread*)
art::detail::CmdlineParserArgumentInfo<art::verifier::VerifyMode>::CompleteArgument()
art::gc::collector::MarkSweep::MarkReachableObjects()
art::OatFile::GetCompilerFilter() const
art::mirror::MethodType::SetClass(art::mirror::Class*)
art::gc::accounting::MemoryRangeBitmap<1024u>::BitIndexFromAddr(unsigned int) const
artAllocObjectFromCodeInitializedDlMalloc
art::CmdlineType<double>::Parse(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
artGetCharInstanceFromCode
art::JNI::IsSameObject(_JNIEnv*, _jobject*, _jobject*)
art::verifier::MethodVerifier::VerifyAGet(art::Instruction const*, art::verifier::RegType const&, bool)
art::ElfFileImpl<ElfTypes32>::GetSectionHeadersStart() const
art::MillisecondsToNanoseconds& art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination::GetOrCreateFromMap<art::MillisecondsToNanoseconds>(art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds> const&)
non-virtual thunk to art::gc::collector::GarbageCollector::~GarbageCollector()
art::mirror::Object::SetHashCodeSeed(unsigned int)
art::GetVdexFilename(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::CheckJNI::GetFloatArrayRegion(_JNIEnv*, _jfloatArray*, int, int, float*)
art::jit::JitCodeCache::WaitForPotentialCollectionToComplete(art::Thread*)
art::Monitor::lock_profiling_threshold_
bool art::interpreter::DoFieldGet<(art::FindFieldType)2, (art::Primitive::Type)2, true>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::mirror::String::PrettyStringDescriptor(art::ObjPtr<art::mirror::String>)
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<art::ExperimentalFlags>(art::RuntimeArgumentMapKey<art::ExperimentalFlags> const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::BackgroundGcOption&)#1}, std::__1::allocator<{lambda(art::BackgroundGcOption&)#1}>, void (art::BackgroundGcOption&)>::destroy_deallocate()
art::gc::space::RosAllocSpace::Walk(void (*)(void*, void*, unsigned int, void*), void*)
art::ProfileCompilationInfo::Load(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
art::verifier::LongHiType::Dump() const
art::JNI::SetCharField(_JNIEnv*, _jobject*, _jfieldID*, unsigned short)
art::UContext::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::ElfOatFile::InitializeFromElfFile(art::ElfFile*, art::VdexFile*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)::{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}, std::__1::allocator<{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}>, void (std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}> >*) const
art::CheckJNI::CallStaticByteMethodA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(double&)#1}, std::__1::allocator<{lambda(double&)#1}>, void (double&)>::destroy()
art::RuntimeArgumentMapKey<art::Memory<1u> >::~RuntimeArgumentMapKey()
art::Dbg::GetMonitorInfo(unsigned long long, art::JDWP::ExpandBuf*)
art::OatHeader::kFalseValue
std::__1::__shared_ptr_emplace<art::MillisecondsToNanoseconds, std::__1::allocator<art::MillisecondsToNanoseconds> >::__on_zero_shared_weak()
art::CheckJNI::CallStaticFloatMethod(_JNIEnv*, _jclass*, _jmethodID*, ...)
art::gc::collector::ConcurrentCopying::ReclaimPhase()
art::detail::CmdlineParseArgument<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::ParseArgument(art::TokenRange const&, unsigned int*)
art::WellKnownClasses::java_lang_BootClassLoader
art::gc::Heap::MarkAllocStack(art::gc::accounting::SpaceBitmap<8u>*, art::gc::accounting::SpaceBitmap<8u>*, art::gc::accounting::SpaceBitmap<4096u>*, art::gc::accounting::AtomicStack<art::mirror::Object>*)
art::gc::collector::MarkSweep::GetThreadCount(bool) const
std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*), std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)> > >::~unordered_map()
art::ArtMethod::IsOverridableByDefaultMethod()
art::ElfFile::~ElfFile()
art::InternTable::AddTableFromMemoryLocked(unsigned char const*)
art::OatMethodOffsets::OatMethodOffsets(unsigned int)
non-virtual thunk to art::gc::space::RosAllocSpace::GetObjectsAllocated()
art::gc::collector::ConcurrentCopying::RunPhases()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::MillisecondsToNanoseconds& ()>::destroy_deallocate()
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::IntoKey(art::RuntimeArgumentMapKey<art::ExperimentalFlags> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ExperimentalFlags& ()>
artAllocStringFromStringFromCodeDlMallocInstrumented
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(double&)#1}, std::__1::allocator<{lambda(double&)#1}>, void (double&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(double&)#1}> >*) const
art::ThrowIncompatibleClassChangeErrorField(art::ArtField*, bool, art::ArtMethod*)
art::detail::CmdlineParseArgument<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::~CmdlineParseArgument()
art::VariantMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::~VariantMapKey()
art::detail::CmdlineParseArgument<art::Memory<1u> >::MaybeMatches(art::TokenRange const&)
unix_file::FdFile::Erase(bool)
art::Runtime::RecordWriteFieldByte(art::mirror::Object*, art::MemberOffset, signed char, bool) const
non-virtual thunk to art::gc::space::RegionSpace::GetObjectsAllocated()
art::annotations::GetSignatureAnnotationForField(art::ArtField*)
vtable for art::gc::TrimIndirectReferenceTableClosure
_JNIEnv::CallObjectMethod(_jobject*, _jmethodID*, ...)
art::mirror::String::VisitRoots(art::RootVisitor*)
_Unwind_GetDataRelBase
art::BitVector::SameBitsSet(art::BitVector const*) const
artAllocStringFromCharsFromCodeRosAlloc
std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::ReleaseOrDefault<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >(art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > const&)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::IntoKey(art::RuntimeArgumentMapKey<art::gc::space::LargeObjectSpaceType> const&)::{lambda(art::gc::space::LargeObjectSpaceType&)#1}, std::__1::allocator<{lambda(art::gc::space::LargeObjectSpaceType&)#1}>, void (art::gc::space::LargeObjectSpaceType&)>::~__func()
art::gc::collector::ConcurrentCopying::DisableMarkingCheckpoint::~DisableMarkingCheckpoint()
art::gc::space::LargeObjectSpace::FreeList(art::Thread*, unsigned int, art::mirror::Object**)
art::FileExists(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::BuildGenericJniFrameVisitor::FillJniCall::~FillJniCall()
art::InternTable::StringHashEquals::operator()(art::GcRoot<art::mirror::String> const&) const
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>
artGet64StaticFromCompiledCode
int art::interpreter::MterpSetStatic<long long, (art::Primitive::Type)6>(unsigned int, long long, art::ArtMethod*, art::Thread*, void (art::ArtField::*)(art::ObjPtr<art::mirror::Object>, long long))
art::Dbg::method_enter_event_ref_count_
art::ElfFileImpl<ElfTypes32>::GetString(Elf32_Shdr&, unsigned int) const
art::gc::accounting::MemoryRangeBitmap<1024u>::CoverBegin() const
art::InternTable::InternTable()
art::JDWP::JdwpState::NextRequestSerial()
art::OatFile::GetBssGcRoots() const
art::JNI::SetShortArrayRegion(_JNIEnv*, _jshortArray*, int, int, short const*)
art::mirror::PrimitiveArray<long long>::GetData() const
art::ArtFieldVisitor::~ArtFieldVisitor()
vtable for art::CatchBlockStackVisitor
art::PrintFileToLog(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, android::base::LogSeverity)
art::CheckJNI::EnsureLocalCapacity(_JNIEnv*, int)
void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::collector::MarkCompact::UpdateReferenceVisitor, art::gc::collector::MarkCompact::UpdateReferenceVisitor>(art::gc::collector::MarkCompact::UpdateReferenceVisitor const&, art::gc::collector::MarkCompact::UpdateReferenceVisitor const&)
art::verifier::MethodVerifier::GetInstanceField(art::verifier::RegType const&, int)
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::DexFile const*>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::DexFile const*>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::DexFile const*>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::DexFile const*> > >::__rehash(unsigned int)
art::mirror::Array::CopyOf(art::Thread*, int)
art::ClassLoaderContext::CreateClassLoader(std::__1::vector<art::DexFile const*, std::__1::allocator<art::DexFile const*> > const&) const
art::Dbg::ResumeThread(unsigned long long)
art::TypeLookupTable::SetOnInitialPos(art::TypeLookupTable::Entry const&, unsigned int)
std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*)
artAllocObjectFromCodeResolvedRegion
art::Runtime::RecordResolveString(art::ObjPtr<art::mirror::DexCache>, art::dex::StringIndex) const
art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsVisitor::~VerifyNoFromSpaceRefsVisitor()
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::LogVerbosity&)#1}, std::__1::allocator<{lambda(art::LogVerbosity&)#1}>, void (art::LogVerbosity&)>
art::OS::OpenFileWithFlags(char const*, int, bool)
non-virtual thunk to art::gc::space::RegionSpace::~RegionSpace()
vtable for art::verifier::UnresolvedUninitializedRefType
art::detail::CmdlineParseArgument<art::Memory<1u> >::GetNumTokens() const
art::RuntimeArgumentMapKey<art::Unit>::~RuntimeArgumentMapKey()
art::gc::space::MallocSpace::MallocSpace(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::MemMap*, unsigned char*, unsigned char*, unsigned char*, unsigned int, bool, bool, unsigned int, unsigned int)
art::mirror::Throwable::SetCause(art::ObjPtr<art::mirror::Throwable>)
art::MipsInstructionSetFeatures::Equals(art::InstructionSetFeatures const*) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::TraceClockSource& ()>::~__func()
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)6, true, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::mirror::MethodType::IsExactMatch(art::mirror::MethodType*)
art::interpreter::UnstartedRuntime::UnstartedStringFactoryNewStringFromChars(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
void std::__1::vector<art::dex::TypeIndex, art::ScopedArenaAllocatorAdapter<art::dex::TypeIndex> >::__push_back_slow_path<art::dex::TypeIndex const&>(art::dex::TypeIndex const&)
android::base::Realpath(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::dex::tracking::DexFileTrackingRegistrar::SetAllCodeItemStartRegistration(bool)
art::SignalSet::SignalSet()
art::Thread::PopDeoptimizationContext(art::JValue*, art::ObjPtr<art::mirror::Throwable>*, bool*)
art::gc::space::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::gc::space::GcRetentionPolicy const&)
art::interpreter::UnstartedRuntime::UnstartedSystemIdentityHashCode(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
std::__1::__hash_table<art::ObjPtr<art::mirror::Class>, art::HashObjPtr, std::__1::equal_to<art::ObjPtr<art::mirror::Class> >, std::__1::allocator<art::ObjPtr<art::mirror::Class> > >::__rehash(unsigned int)
vtable for art::gc::accounting::EmptyMarkObjectVisitor
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)> > >::__node_insert_unique(std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)>, void*>*)
std::__1::__hash_table<std::__1::__hash_value_type<art::ArtMethod*, art::ArtMethod*>, std::__1::__unordered_map_hasher<art::ArtMethod*, std::__1::__hash_value_type<art::ArtMethod*, art::ArtMethod*>, std::__1::hash<art::ArtMethod*>, true>, std::__1::__unordered_map_equal<art::ArtMethod*, std::__1::__hash_value_type<art::ArtMethod*, art::ArtMethod*>, std::__1::equal_to<art::ArtMethod*>, true>, art::ScopedArenaAllocatorAdapter<std::__1::__hash_value_type<art::ArtMethod*, art::ArtMethod*> > >::rehash(unsigned int)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(double&)#1}, std::__1::allocator<{lambda(double&)#1}>, void (double&)>
art::JDWP::JdwpAdbState::Accept()
vtable for art::detail::CmdlineParseArgument<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >
art::BuildInternalStackTraceVisitor<false>::Init(int)
art::verifier::RegType::IsLong() const
art::jit::JitCodeCache::AddProfilingInfo(art::Thread*, art::ArtMethod*, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&, bool)
art::Transaction::ObjectLog::Log32BitsValue(art::MemberOffset, unsigned int, bool)
std::__1::deque<art::instrumentation::InstrumentationStackFrame, std::__1::allocator<art::instrumentation::InstrumentationStackFrame> >::__add_back_capacity()
art::JDWP::Request::Request(unsigned char const*, unsigned int)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::WithValues(std::initializer_list<bool>)
art::CompilerFilter::DependsOnImageChecksum(art::CompilerFilter::Filter)
art::gc::Heap::RevokeAllThreadLocalBuffers()
art::Thread::GetNativePriority()
android::base::GetMinimumLogSeverity()
art::JDWP::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::JDWP::JdwpInvokeOptions const&)
art::DexFileVerifier::CheckValidOffsetAndSize(unsigned int, unsigned int, unsigned int, char const*)
art::ReferenceTable::Size() const
art::verifier::ShortType::CreateInstance(art::mirror::Class*, art::StringPiece const&, unsigned short)
art::X86InstructionSetFeatures::Equals(art::InstructionSetFeatures const*) const
std::__1::function<art::Unit& ()>::swap(std::__1::function<art::Unit& ()>&)
art::ParsedOptions::UsageMessage(__sFILE*, char const*, ...)
art::detail::CmdlineParseArgument<art::XGcOption>::ParseArgumentSingle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::x86_64::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::x86_64::FloatRegister const&)
art::gc::collector::ConcurrentCopying::SwitchToSharedMarkStackMode()
art::gc::collector::MarkSweep::CheckpointMarkThreadRoots::Run(art::Thread*)
art::LinearAlloc::AllocAlign16(art::Thread*, unsigned int)
art::verifier::RegType::IsUnresolvedAndUninitializedThisReference() const
art::gc::accounting::SpaceBitmap<4096u>::SetName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}, std::__1::allocator<{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}>, void (std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)>::destroy()
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::interpreter::UnstartedRuntime::UnstartedClassGetEnclosingClass(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::DexFile::PrettyType(art::dex::TypeIndex) const
std::__1::function<unsigned int& ()>::swap(std::__1::function<unsigned int& ()>&)
art::verifier::RegisterLine::CheckLiteralOp(art::verifier::MethodVerifier*, art::Instruction const*, art::verifier::RegType const&, art::verifier::RegType const&, bool, bool)
art::gc::accounting::ModUnionTableReferenceCache::VisitObjects(void (*)(art::mirror::Object*, void*), void*)
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::DexFile const*>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::DexFile const*>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::DexFile const*>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::DexFile const*> > >::rehash(unsigned int)
art::GetCmdLine()
std::__1::__hash_table<std::__1::__hash_value_type<art::mirror::Object const*, art::gc::AllocRecordStackTrace const*>, std::__1::__unordered_map_hasher<art::mirror::Object const*, std::__1::__hash_value_type<art::mirror::Object const*, art::gc::AllocRecordStackTrace const*>, std::__1::hash<art::mirror::Object const*>, true>, std::__1::__unordered_map_equal<art::mirror::Object const*, std::__1::__hash_value_type<art::mirror::Object const*, art::gc::AllocRecordStackTrace const*>, std::__1::equal_to<art::mirror::Object const*>, true>, std::__1::allocator<std::__1::__hash_value_type<art::mirror::Object const*, art::gc::AllocRecordStackTrace const*> > >::__rehash(unsigned int)
art::Runtime::RegisterRuntimeNativeMethods(_JNIEnv*)
art::verifier::MethodVerifier::CheckNotMoveResult(unsigned short const*, int)
art::gc::Heap::StartGC(art::Thread*, art::gc::GcCause, art::gc::CollectorType)
non-virtual thunk to art::gc::collector::StickyMarkSweep::~StickyMarkSweep()
art::OatFileAssistant::OatFileInfo::CompilerFilterIsOkay(art::CompilerFilter::Filter, bool, bool)
art::verifier::VerifierDeps::GetFieldDeclaringClassStringId(art::DexFile const&, unsigned int, art::ArtField*)
art::detail::CmdlineParserArgumentInfo<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::~CmdlineParserArgumentInfo()
art::verifier::ImpreciseConstType::GetAssignmentTypeImpl() const
void art::gc::accounting::SpaceBitmap<8u>::VisitMarkedRange<art::gc::collector::MarkSweep::MarkStackTask<false>::ScanObjectParallelVisitor const&>(unsigned int, unsigned int, art::gc::collector::MarkSweep::MarkStackTask<false>::ScanObjectParallelVisitor const&) const
vtable for art::VariantMapKey<art::ParseStringList<(char)58> >
art::ArenaAllocator::~ArenaAllocator()
art::JavaVMExt::~JavaVMExt()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::IntoKey(art::RuntimeArgumentMapKey<double> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, double& ()>::destroy_deallocate()
void std::__1::vector<art::TypeReference, std::__1::allocator<art::TypeReference> >::__emplace_back_slow_path<art::DexFile const*&, art::dex::TypeIndex&>(art::DexFile const*&, art::dex::TypeIndex&)
art::IndirectReferenceTable::Update(void*, art::ObjPtr<art::mirror::Object>)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}, std::__1::allocator<{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}>, void (std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)>::destroy()
art::verifier::LongLoType::Dump() const
void std::__1::__invoke_void_return_wrapper<void>::__call<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::IntoKey(art::RuntimeArgumentMapKey<art::ExperimentalFlags> const&)::{lambda(art::ExperimentalFlags&)#1}&, art::ExperimentalFlags&>(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::IntoKey(art::RuntimeArgumentMapKey<art::ExperimentalFlags> const&)::{lambda(art::ExperimentalFlags&)#1}&, art::ExperimentalFlags&)
art::verifier::RegType::HighHalf(art::verifier::RegTypeCache*) const
art::OpenAndReadMagic(char const*, unsigned int*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::mirror::Reference::ResetClass()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::IntoKey(art::RuntimeArgumentMapKey<art::gc::space::LargeObjectSpaceType> const&)::{lambda(art::gc::space::LargeObjectSpaceType&)#1}, std::__1::allocator<{lambda(art::gc::space::LargeObjectSpaceType&)#1}>, void (art::gc::space::LargeObjectSpaceType&)>::operator()(art::gc::space::LargeObjectSpaceType&)
art::jit::JitCodeCache::Create(unsigned int, unsigned int, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::annotations::GetParameterAnnotations(art::ArtMethod*)
art::gc::AllocRecordObjectMap::AllocRecordObjectMap()
art::hprof::Hprof::DumpHeapClass(art::mirror::Class*)
art::mirror::ClassExt::ClassSize(art::PointerSize)
art::gc::space::RosAllocSpace::~RosAllocSpace()
art::SafeMap<unsigned char, std::__1::vector<art::dex::TypeIndex, std::__1::allocator<art::dex::TypeIndex> >, std::__1::less<unsigned char>, std::__1::allocator<std::__1::pair<unsigned char const, std::__1::vector<art::dex::TypeIndex, std::__1::allocator<art::dex::TypeIndex> > > > >::FindOrAdd(unsigned char const&)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)
art::detail::CmdlineParseArgument<art::Memory<1u> >::ParseArgumentSingle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::StackDumpVisitor::~StackDumpVisitor()
art::ElfFileImpl<ElfTypes32>::~ElfFileImpl()
art::verifier::PreciseConstType::IsPreciseConstant() const
art::TimingLogger::EndTiming()
art::gc::collector::ImmuneRegion::ImmuneRegion()
art::OatFileAssistant::~OatFileAssistant()
art::VariantMapKey<art::ParseStringList<(char)58> >::Clone() const
art::mirror::ClassExt::ExtendObsoleteArrays(art::Thread*, unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::IntoKey(art::RuntimeArgumentMapKey<bool> const&)::{lambda(bool&)#1}, std::__1::allocator<{lambda(bool&)#1}>, void (bool&)>::destroy()
art::verifier::RegType::CheckWidePair(art::verifier::RegType const&) const
art::verifier::MethodVerifier::FindInvokedMethodAtDexPc(art::ArtMethod*, unsigned int)
art::verifier::ByteType::Dump() const
_jdoubleArray* art::JNI::NewPrimitiveArray<_jdoubleArray*, art::mirror::PrimitiveArray<double> >(_JNIEnv*, int)
art::RuntimeArgumentMap::ThreadSuspendTimeout
art::gc::accounting::SpaceBitmap<8u>::OffsetBitIndex(unsigned int)
art::RuntimeCallbacks::AddMethodCallback(art::MethodCallback*)
art::Trace::RunSamplingThread(void*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::verifier::VerifyMode& ()>::__clone() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, bool& ()>::__clone() const
art::Dbg::PostThreadStart(art::Thread*)
art::JNI::SetDoubleField(_JNIEnv*, _jobject*, _jfieldID*, double)
art::RuntimeArgumentMapKey<art::BackgroundGcOption>::~RuntimeArgumentMapKey()
artAllocStringFromBytesFromCodeDlMalloc
art::CheckJNI::GetLongField(_JNIEnv*, _jobject*, _jfieldID*)
MterpLogDivideByZeroException
art::CheckJNI::CallNonvirtualFloatMethod(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, ...)
art::ElfFileImpl<ElfTypes64>::GetProgramHeaderNum() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::IntoKey(art::RuntimeArgumentMapKey<art::verifier::VerifyMode> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::verifier::VerifyMode& ()>::destroy()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::MillisecondsToNanoseconds&)#1}, std::__1::allocator<{lambda(art::MillisecondsToNanoseconds&)#1}>, void (art::MillisecondsToNanoseconds&)>::operator()(art::MillisecondsToNanoseconds&)
void std::__1::__insertion_sort_3<std::__1::__less<std::__1::tuple<unsigned int, unsigned int, bool>, std::__1::tuple<unsigned int, unsigned int, bool> >&, std::__1::tuple<unsigned int, unsigned int, bool>*>(std::__1::tuple<unsigned int, unsigned int, bool>*, std::__1::tuple<unsigned int, unsigned int, bool>*, std::__1::__less<std::__1::tuple<unsigned int, unsigned int, bool>, std::__1::tuple<unsigned int, unsigned int, bool> >&)
art::OatHeader::OatHeader(art::InstructionSet, art::InstructionSetFeatures const*, unsigned int, art::SafeMap<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const*)
MterpLogOSR
art::gc::AllocRecordObjectMap::DisallowNewAllocationRecords()
art::Thread::RunEmptyCheckpoint()
art::gc::Heap::FindDiscontinuousSpaceFromObject(art::ObjPtr<art::mirror::Object>, bool) const
art::gc::space::MemMapSpace::~MemMapSpace()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::JDWP::JdwpOptions&)#1}, std::__1::allocator<{lambda(art::JDWP::JdwpOptions&)#1}>, void (art::JDWP::JdwpOptions&)>::destroy()
art::RuntimeCallbacks::ThreadDeath(art::Thread*)
art::Dbg::UnconfigureStep(unsigned long long)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::XGcOption&)#1}, std::__1::allocator<{lambda(art::XGcOption&)#1}>, void (art::XGcOption&)>::__clone() const
art::VariantMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::ValueClone(void*) const
art::LockedFile::~LockedFile()
art::Thread::SetFlipFunction(art::Closure*)
art::DexFile::OpenAllDexFilesFromZip(art::ZipArchive const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > >*)
bool unix_file::FdFile::WriteFullyGeneric<true>(void const*, unsigned int, unsigned int)
OpenArchive(char const*, void**)
art::ClassLinker::FillIMTAndConflictTables(art::ObjPtr<art::mirror::Class>)
void art::gc::accounting::SpaceBitmap<8u>::VisitMarkedRange<art::gc::collector::MarkSweep::ScanObjectVisitor>(unsigned int, unsigned int, art::gc::collector::MarkSweep::ScanObjectVisitor&&) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::ProfileSaverOptions&)#1}, std::__1::allocator<{lambda(art::ProfileSaverOptions&)#1}>, void (art::ProfileSaverOptions&)>::operator()(art::ProfileSaverOptions&)
art::CheckJNI::SetStaticIntField(_JNIEnv*, _jclass*, _jfieldID*, int)
art::OatFileAssistant::IsUpToDate()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>::destroy_deallocate()
art::gc::space::MallocSpace::RegisterRecentFree(art::mirror::Object*)
artSetCharInstanceFromCompiledCode
art::ReaderWriterMutex::ExclusiveLockWithTimeout(art::Thread*, long long, int)
art::gc::collector::StickyMarkSweep::MarkReachableObjects()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::IntoKey(art::RuntimeArgumentMapKey<art::ExperimentalFlags> const&)::{lambda(art::ExperimentalFlags&)#1}, std::__1::allocator<{lambda(art::ExperimentalFlags&)#1}>, void (art::ExperimentalFlags&)>::destroy()
std::__1::__tree<std::__1::__value_type<void*, art::MemMap*>, std::__1::__map_value_compare<void*, std::__1::__value_type<void*, art::MemMap*>, std::__1::less<void*>, true>, std::__1::allocator<std::__1::__value_type<void*, art::MemMap*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<void*, art::MemMap*>, void*>*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1u> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1u>& ()>::destroy_deallocate()
void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::VerifyReferenceVisitor, art::gc::VerifyReferenceVisitor>(art::gc::VerifyReferenceVisitor const&, art::gc::VerifyReferenceVisitor const&)
art::verifier::RegTypeCache::RegTypeCache(bool, art::ScopedArenaAllocator&)
art::mirror::PrimitiveArray<short>::AllocateAndFill(art::Thread*, short const*, unsigned int)
art::mirror::PrimitiveArray<unsigned short>::GetData() const
art::ArtMethod::IsAnnotatedWith(_jclass*, unsigned int, bool)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::Memory<1u>&)#1}, std::__1::allocator<{lambda(art::Memory<1u>&)#1}>, void (art::Memory<1u>&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::Memory<1u>&)#1}> >*) const
art::ClassLinker::FindMethodForProxy(art::ArtMethod*)
art::mirror::Class::IsArrayAssignableFromArray(art::ObjPtr<art::mirror::Class>)
non-virtual thunk to art::gc::space::MemoryToolMallocSpace<art::gc::space::RosAllocSpace, 8u, false, true>::Alloc(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::mirror::PrimitiveArray<int>::GetData()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >& ()>::destroy()
art::GuardedCopy::ReleaseGuardedPACopy(char const*, _JNIEnv*, _jarray*, void*, int)
art::ClassVisitor::~ClassVisitor()
art::jit::Jit::jit_load_
art::ClassLinker::FindClassTable(art::Thread*, art::ObjPtr<art::mirror::DexCache>)
construction vtable for std::__1::basic_istream<char, std::__1::char_traits<char> >-in-std::__1::basic_ifstream<char, std::__1::char_traits<char> >
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::IntoKey(art::RuntimeArgumentMapKey<art::ExperimentalFlags> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ExperimentalFlags& ()>::__clone() const
art::VariantMapKey<art::verifier::VerifyMode>::ValueDelete(void*) const
art::CHACheckpoint::WaitForThreadsToRunThroughCheckpoint(unsigned int)
bool art::interpreter::DoIGetQuick<(art::Primitive::Type)3>(art::ShadowFrame&, art::Instruction const*, unsigned short)
void art::ArtField::SetObj<true>(art::ObjPtr<art::mirror::Object>, art::ObjPtr<art::mirror::Object>)
art::CheckJNI::GetDoubleArrayRegion(_JNIEnv*, _jdoubleArray*, int, int, double*)
void art::JNI::ReleasePrimitiveArray<_jbooleanArray*, unsigned char, art::mirror::PrimitiveArray<unsigned char> >(_JNIEnv*, _jbooleanArray*, unsigned char*, int)
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::~basic_streambuf()
art::CheckJNI::CallNonvirtualVoidMethod(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, ...)
art::Monitor::Monitor(art::Thread*, art::Thread*, art::mirror::Object*, int)
unix_file::FdFile::GetLength() const
art::CumulativeLogger::AddLogger(art::TimingLogger const&)
art::JNI::DeleteGlobalRef(_JNIEnv*, _jobject*)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::IndirectRefKind const&)
art::gc::space::ImageSpaceLoader::FixupArtMethodVisitor::Visit(art::ArtMethod*)
art::JNI::GetDoubleArrayRegion(_JNIEnv*, _jdoubleArray*, int, int, double*)
art::MemMapArena::~MemMapArena()
art::Dbg::OutputJValue(art::JDWP::JdwpTag, art::JValue const*, art::JDWP::ExpandBuf*)
std::__1::__tree<art::verifier::VerifierDeps::FieldResolution, std::__1::less<art::verifier::VerifierDeps::FieldResolution>, std::__1::allocator<art::verifier::VerifierDeps::FieldResolution> >::destroy(std::__1::__tree_node<art::verifier::VerifierDeps::FieldResolution, void*>*)
art::gc::Heap::SweepAllocationRecords(art::IsMarkedVisitor*) const
art::mirror::Field* art::mirror::Field::CreateFromArtField<(art::PointerSize)4, false>(art::Thread*, art::ArtField*, bool)
art::gc::collector::MarkCompact::RunPhases()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::ParseStringList<(char)58>&)#1}, std::__1::allocator<{lambda(art::ParseStringList<(char)58>&)#1}>, void (art::ParseStringList<(char)58>&)>::~__func()
std::__1::__tree<std::__1::__value_type<unsigned int, unsigned long long>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned long long>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned long long> > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned long long>, void*>*)
art::verifier::RegTypeCache::FromUninitialized(art::verifier::RegType const&)
art::GenericJniMethodEnd(art::Thread*, unsigned int, jvalue, unsigned long long, art::ArtMethod*, art::HandleScope*)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::IntoKey(art::RuntimeArgumentMapKey<art::LogVerbosity> const&)::{lambda(art::LogVerbosity&)#1}, std::__1::allocator<{lambda(art::LogVerbosity&)#1}>, void (art::LogVerbosity&)>
vtable for art::gc::Heap::CollectorTransitionTask
art::CatchBlockStackVisitor::VisitFrame()
art::Thread::ModifySuspendCountInternal(art::Thread*, int, art::Atomic<int>*, art::SuspendReason)
art::gc::space::BumpPointerSpace::GetNextObject(art::mirror::Object*)
art::gc::collector::GarbageCollector::ScopedPause::~ScopedPause()
art::ElfFileImpl<ElfTypes64>::GetRelaNum(Elf64_Shdr&) const
art::JNI::NewIntArray(_JNIEnv*, int)
art::CodeInfo::Dump(art::VariableIndentationOutputStream*, unsigned int, unsigned short, bool, art::InstructionSet, art::MethodInfo const&) const
art::GetResolvedClassesVisitor::PrintStatistics() const
art::Thread::SetDebugInvokeReq(art::DebugInvokeReq*)
art::verifier::FloatType::Destroy()
art::RuntimeArgumentMap::GcOption
art::ToStr<art::IndirectRefKind>::ToStr(art::IndirectRefKind const&)
art::VdexFile::Header::kVdexVersion
std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf32_Sym*>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf32_Sym*>, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf32_Sym*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf32_Sym*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf32_Sym*> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::gc::accounting::MemoryRangeBitmap<16u>::HasAddress(unsigned int) const
art::ElfFile::Strip(unix_file::FdFile*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::ClassLinker::AllocIfTable(art::Thread*, unsigned int)
artSet16StaticFromCompiledCode
MappedZipFile::SeekToOffset(long long)
art::Instruction::SizeInCodeUnitsComplexOpcode() const
art::LockWord::FromThinLockId(unsigned int, unsigned int, unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::BackgroundGcOption> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::BackgroundGcOption& ()>::destroy_deallocate()
mspace_free
art::detail::CmdlineParseArgument<art::TraceClockSource>::GetNumTokens() const
bool art::interpreter::DoFieldGet<(art::FindFieldType)2, (art::Primitive::Type)5, false>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::MallocArena::MallocArena(unsigned int)
artDeliverExceptionFromCode
art::gc::space::DlMallocSpace::DlMallocSpace(art::MemMap*, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, void*, unsigned char*, unsigned char*, unsigned char*, unsigned int, bool, unsigned int)
art::ImageHeader::ImageHeader(unsigned int, unsigned int, art::ImageSection*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool, bool, art::ImageHeader::StorageMode, unsigned int)
art::verifier::MethodVerifier::SetTypesFromSignature()
art::BaseMutex::~BaseMutex()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::BackgroundGcOption> const&)::{lambda(art::BackgroundGcOption&)#1}, std::__1::allocator<{lambda(art::BackgroundGcOption&)#1}>, void (art::BackgroundGcOption&)>::__clone() const
art::CurrentMethodVisitor::VisitFrame()
non-virtual thunk to art::gc::space::LargeObjectSpace::~LargeObjectSpace()
art::Monitor::Wait(art::Thread*, long long, int, bool, art::ThreadState)
void art::gc::accounting::SpaceBitmap<8u>::VisitMarkedRange<art::gc::accounting::ModUnionCheckReferences&>(unsigned int, unsigned int, art::gc::accounting::ModUnionCheckReferences&) const
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)1, art::gc::collector::ConcurrentCopying::VerifyGrayImmuneObjectsVisitor const>(art::gc::collector::ConcurrentCopying::VerifyGrayImmuneObjectsVisitor const&, art::PointerSize)
art::RuntimeCallbacks::RemoveRuntimePhaseCallback(art::RuntimePhaseCallback*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::XGcOption&)#1}, std::__1::allocator<{lambda(art::XGcOption&)#1}>, void (art::XGcOption&)>::~__func()
art::Locks::deoptimization_lock_
art::Trace::sampling_pthread_
art::ArtField::GetName()
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::XGcOption> const&)::{lambda(art::XGcOption&)#1}, std::__1::allocator<{lambda(art::XGcOption&)#1}>, void (art::XGcOption&)>
art::IndirectReferenceTable::Add(art::IRTSegmentState, art::ObjPtr<art::mirror::Object>)
vtable for art::VariantMapKey<art::Unit>
art::GetDefaultBootImageLocation(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::jit::Jit::Jit()
art::gc::ScopedGCCriticalSection::ScopedGCCriticalSection(art::Thread*, art::gc::GcCause, art::gc::CollectorType)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, art::JITCodeEntry*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, art::JITCodeEntry*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, art::JITCodeEntry*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, art::JITCodeEntry*> > >::rehash(unsigned int)
art::CheckJNI::CallNonvirtualVoidMethodA(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, jvalue*)
art::ClassLinker::AllocateIfTableMethodArrays(art::Thread*, art::Handle<art::mirror::Class>, art::Handle<art::mirror::IfTable>)
art::gc::ReferenceProcessor::ClearReferent(art::ObjPtr<art::mirror::Reference>)
art::detail::CmdlineParseArgument<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::MaybeMatches(art::TokenRange const&)
art::CmdlineType<unsigned int>::Parse(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__function::__func<void (*)(char const*), std::__1::allocator<void (*)(char const*)>, void (char const*)>::~__func()
bool art::ContainsElement<std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int)
art::StackVisitor::GetVRegPairFromOptimizedCode(art::ArtMethod*, unsigned short, art::VRegKind, art::VRegKind, unsigned long long*) const
art::InternTable::RemoveWeak(art::ObjPtr<art::mirror::String>)
art::DexFile::FindCodeItemOffset(art::DexFile::ClassDef const&, unsigned int) const
art::gc::allocator::RosAlloc::BytesAllocatedCallback(void*, void*, unsigned int, void*)
art::Monitor::Init(unsigned int, unsigned int)
std::__1::basic_ostream<char, std::__1::char_traits<char> >& art::gc::accounting::operator<< <8u>(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::gc::accounting::SpaceBitmap<8u> const&)
vtable for art::RuntimeArgumentMapKey<art::Memory<1u> >
art::ClassLinker::AllocDexCache(art::ObjPtr<art::mirror::String>*, art::Thread*, art::DexFile const&)
art::detail::CmdlineParseArgument<art::Memory<1024u> >::~CmdlineParseArgument()
art::Trace::temp_stack_trace_
art::Trace::InvokeVirtualOrInterface(art::Thread*, art::Handle<art::mirror::Object>, art::ArtMethod*, unsigned int, art::ArtMethod*)
MterpGetBooleanStatic
std::__1::__tree_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, int> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__emplace_multi<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::Thread::HoldsLock(art::ObjPtr<art::mirror::Object>) const
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > >*>(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > >*> const&)
art::verifier::RegisterLine::CheckBinaryOp(art::verifier::MethodVerifier*, art::Instruction const*, art::verifier::RegType const&, art::verifier::RegType const&, art::verifier::RegType const&, bool)
art::SafeMap<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const>, art::ArenaAllocatorAdapter<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char> > >::erase(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
unix_file::FdFile::FdFile(int, bool)
vtable for art::verifier::FloatType
art::ObjectLock<art::mirror::Class>::~ObjectLock()
vtable for art::gc::collector::MarkSweep::VerifyRootVisitor
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::IntoKey(art::RuntimeArgumentMapKey<art::ParseStringList<(char)58> > const&)::{lambda(art::ParseStringList<(char)58>&)#1}, std::__1::allocator<{lambda(art::ParseStringList<(char)58>&)#1}>, void (art::ParseStringList<(char)58>&)>::__clone() const
vtable for art::SetInterpreterEntrypointArtMethodVisitor
art::OatHeader::SetInterpreterToCompiledCodeBridgeOffset(unsigned int)
art::jit::Jit::WaitForCompilationToFinish(art::Thread*)
art::CheckJNI::CallStaticCharMethodA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
art::CmdlineType<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::Parse(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
void art::STLDeleteValues<art::AllocationTrackingSafeMap<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::SharedLibrary*, (art::AllocatorTag)17, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >(art::AllocationTrackingSafeMap<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::SharedLibrary*, (art::AllocatorTag)17, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)
art::Mutex::~Mutex()
void std::__1::vector<art::ProfileMethodInfo::ProfileInlineCache, std::__1::allocator<art::ProfileMethodInfo::ProfileInlineCache> >::__emplace_back_slow_path<unsigned int const&, bool&, std::__1::vector<art::TypeReference, std::__1::allocator<art::TypeReference> >&>(unsigned int const&, bool&, std::__1::vector<art::TypeReference, std::__1::allocator<art::TypeReference> >&)
art::register_java_lang_System(_JNIEnv*)
art::jit::JitCompileTask::~JitCompileTask()
art::ElfFileImpl<ElfTypes64>::~ElfFileImpl()
art::instrumentation::Instrumentation::AddListener(art::instrumentation::InstrumentationListener*, unsigned int)
art::BitVector::UnionIfNotIn(art::BitVector const*, art::BitVector const*)
mspace_bulk_free
art::Thread::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bool, BacktraceMap*, bool) const
art::JNI::CallStaticDoubleMethodA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
art::CheckJII::DestroyJavaVM(_JavaVM*)
art::gc::TaskProcessor::IsRunning() const
art::Runtime::GetPreAllocatedOutOfMemoryError()
art::Thread::HandleUncaughtExceptions(art::ScopedObjectAccessAlreadyRunnable&)
art::ThreadPool::GetTask(art::Thread*)
art::ZipEntry::IsUncompressed()
art::ThreadPool::TryGetTaskLocked()
crc32_combine64
vtable for art::VariantMapKey<art::JDWP::JdwpOptions>
unix_file::FdFile::FdFile(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
art::gc::AllocRecordObjectMap::RecordAllocation(art::Thread*, art::ObjPtr<art::mirror::Object>*, unsigned int)
art::CodeInfo::GetDexRegisterLocationCatalog(art::CodeInfoEncoding const&) const
art::verifier::ConflictType::GetAssignmentTypeImpl() const
art::OatFile::End() const
art::gc::collector::SemiSpace::GetGcType() const
art::gc::space::ContinuousSpace::Contains(art::mirror::Object const*) const
std::__1::function<art::JDWP::JdwpOptions& ()>::swap(std::__1::function<art::JDWP::JdwpOptions& ()>&)
art::MemMap::RemapAtEnd(unsigned char*, char const*, int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, bool)
art::arm64::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::arm64::WRegister const&)
art::register_java_lang_String(_JNIEnv*)
void std::__1::vector<art::OatFile const*, std::__1::allocator<art::OatFile const*> >::__push_back_slow_path<art::OatFile const*>(art::OatFile const*&&)
std::__1::__shared_ptr_emplace<unsigned int, std::__1::allocator<unsigned int> >::__on_zero_shared_weak()
art::ElfFile::ElfFile(art::ElfFileImpl<ElfTypes32>*)
non-virtual thunk to art::gc::space::LargeObjectMapSpace::Free(art::Thread*, art::mirror::Object*)
art::ArenaAllocator::UpdateBytesAllocated()
android::base::ReadFully(int, void*, unsigned int)
bool art::interpreter::DoIPutQuick<(art::Primitive::Type)0, true>(art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::JNI::GetArrayLength(_JNIEnv*, _jarray*)
art::JDWP::JdwpSocketState::~JdwpSocketState()
art::gc::space::ImageSpaceLoader::LoadImageFile(char const*, char const*, art::ImageHeader const&, unsigned char*, int, art::TimingLogger&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::WellKnownClasses::java_lang_reflect_Field
std::__1::__tree_iterator<art::DexCacheResolvedClasses, std::__1::__tree_node<art::DexCacheResolvedClasses, void*>*, int> std::__1::__tree<art::DexCacheResolvedClasses, std::__1::less<art::DexCacheResolvedClasses>, std::__1::allocator<art::DexCacheResolvedClasses> >::find<art::DexCacheResolvedClasses>(art::DexCacheResolvedClasses const&)
art::IndirectReferenceTable::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::verifier::ImpreciseConstType::Dump() const
art::ClassLinker::LinkInterfaceMethodsHelper::UpdateVtable(std::__1::unordered_map<unsigned int, art::ClassLinker::MethodTranslation, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, art::ClassLinker::MethodTranslation> > > const&, art::ObjPtr<art::mirror::PointerArray>)
art::ArtField* art::FindFieldFromCode<(art::FindFieldType)0, true>(unsigned int, art::ArtMethod*, art::Thread*, unsigned int)
art::gc::collector::ConcurrentCopying::ThreadFlipVisitor::~ThreadFlipVisitor()
art::gc::Heap::PushOnThreadLocalAllocationStackWithInternalGC(art::Thread*, art::ObjPtr<art::mirror::Object>*)
art::VariantMapKey<unsigned int>::ValueClone(void*) const
art::ClassLinker::FixupStaticTrampolines(art::ObjPtr<art::mirror::Class>)
art::gc::space::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::gc::space::RegionSpace::RegionType const&)
crc32_combine
art::gc::space::ImageSpace::GetMultiImageBootClassPath(std::__1::vector<char const*, std::__1::allocator<char const*> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)
art::detail::CmdlineParseArgument<unsigned int>::ParseArgumentSingle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > const&)::{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}, std::__1::allocator<{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}>, void (std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)>::~__func()
inflateSyncPoint
art::WellKnownClasses::java_lang_NoClassDefFoundError
art::mips::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::mips::FRegister const&)
art::FaultManager::~FaultManager()
void art::gc::accounting::SpaceBitmap<4096u>::VisitMarkedRange<art::gc::VerifyObjectVisitor&>(unsigned int, unsigned int, art::gc::VerifyObjectVisitor&) const
void art::mirror::VisitDexCachePairs<art::mirror::MethodType, (art::ReadBarrierOption)0, art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor>(std::__1::atomic<art::mirror::DexCachePair<art::mirror::MethodType> >*, unsigned int, art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor const&)
art::VariantMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::ValueClone(void*) const
vtable for art::RuntimeArgumentMapKey<unsigned int>
std::__1::__tree<std::__1::__value_type<art::DexFile const*, std::__1::bitset<65536u>*>, std::__1::__map_value_compare<art::DexFile const*, std::__1::__value_type<art::DexFile const*, std::__1::bitset<65536u>*>, std::__1::less<art::DexFile const*>, true>, std::__1::allocator<std::__1::__value_type<art::DexFile const*, std::__1::bitset<65536u>*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<art::DexFile const*, std::__1::bitset<65536u>*>, void*>*)
art::MemMapArena::MemMapArena(unsigned int, bool, char const*)
art::ZipArchive::~ZipArchive()
unsigned int std::__1::__sort5<art::LinkFieldsComparator&, std::__1::__deque_iterator<art::ArtField*, art::ArtField**, art::ArtField*&, art::ArtField***, int, 1024> >(std::__1::__deque_iterator<art::ArtField*, art::ArtField**, art::ArtField*&, art::ArtField***, int, 1024>, std::__1::__deque_iterator<art::ArtField*, art::ArtField**, art::ArtField*&, art::ArtField***, int, 1024>, std::__1::__deque_iterator<art::ArtField*, art::ArtField**, art::ArtField*&, art::ArtField***, int, 1024>, std::__1::__deque_iterator<art::ArtField*, art::ArtField**, art::ArtField*&, art::ArtField***, int, 1024>, std::__1::__deque_iterator<art::ArtField*, art::ArtField**, art::ArtField*&, art::ArtField***, int, 1024>, art::LinkFieldsComparator&)
art::JNI::ReleaseShortArrayElements(_JNIEnv*, _jshortArray*, short*, int)
art::Transaction::RecordWriteFieldByte(art::mirror::Object*, art::MemberOffset, signed char, bool)
std::__1::__shared_ptr_emplace<int (*)(__sFILE*, char const*, char*), std::__1::allocator<int (*)(__sFILE*, char const*, char*)> >::__on_zero_shared()
std::__1::__shared_ptr_emplace<bool, std::__1::allocator<bool> >::~__shared_ptr_emplace()
art::CheckJNI::CallVoidMethodA(_JNIEnv*, _jobject*, _jmethodID*, jvalue*)
art::RuntimeArgumentMapKey<art::LogVerbosity>::~RuntimeArgumentMapKey()
bool art::interpreter::DoIPutQuick<(art::Primitive::Type)2, false>(art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::Trace::StopTracing(bool, bool)
art::annotations::GetSignatureAnnotationForMethod(art::ArtMethod*)
art::VariantMapKey<art::ParseStringList<(char)58> >::ValueDelete(void*) const
art::ReadBarrierJni(art::mirror::CompressedReference<art::mirror::Object>*, art::Thread*)
art::ElfFileImpl<ElfTypes64>::GetSymbolNum(Elf64_Shdr&) const
art::Transaction::ResolveStringLog::ResolveStringLog(art::ObjPtr<art::mirror::DexCache>, art::dex::StringIndex)
art::AotClassLinker::AotClassLinker(art::InternTable*)
_tr_tally
art::gc::accounting::MemoryRangeBitmap<1024u>::Create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned int)
void std::__1::__invoke_void_return_wrapper<void>::__call<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1u> > const&)::{lambda(art::Memory<1u>&)#1}&, art::Memory<1u>&>(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1u> > const&)::{lambda(art::Memory<1u>&)#1}&, art::Memory<1u>&)
void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::gc::collector::ConcurrentCopying::VerifyNoMissingCardMarkVisitor, art::gc::collector::ConcurrentCopying::VerifyNoMissingCardMarkVisitor>(art::gc::collector::ConcurrentCopying::VerifyNoMissingCardMarkVisitor const&, art::gc::collector::ConcurrentCopying::VerifyNoMissingCardMarkVisitor const&)
std::__1::__hash_table<std::__1::__hash_value_type<art::gc::AllocRecordStackTrace const*, unsigned int>, std::__1::__unordered_map_hasher<art::gc::AllocRecordStackTrace const*, std::__1::__hash_value_type<art::gc::AllocRecordStackTrace const*, unsigned int>, art::gc::HashAllocRecordTypesPtr<art::gc::AllocRecordStackTrace>, true>, std::__1::__unordered_map_equal<art::gc::AllocRecordStackTrace const*, std::__1::__hash_value_type<art::gc::AllocRecordStackTrace const*, unsigned int>, art::gc::EqAllocRecordTypesPtr<art::gc::AllocRecordStackTrace>, true>, std::__1::allocator<std::__1::__hash_value_type<art::gc::AllocRecordStackTrace const*, unsigned int> > >::__rehash(unsigned int)
art::instrumentation::InstrumentationListener::~InstrumentationListener()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}, std::__1::allocator<{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}>, void (std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}> >*) const
std::__1::__tree_node_base<void*>*& std::__1::__tree<art::dex::TypeIndex, std::__1::less<art::dex::TypeIndex>, art::ArenaAllocatorAdapter<art::dex::TypeIndex> >::__find_equal<art::dex::TypeIndex>(std::__1::__tree_const_iterator<art::dex::TypeIndex, std::__1::__tree_node<art::dex::TypeIndex, void*>*, int>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, art::dex::TypeIndex const&)
void art::ArtMethod::GetAccessFlagsDCheck<(art::ReadBarrierOption)1>()
art::DexFile::DecodeDebugPositionInfo(art::DexFile::CodeItem const*, bool (*)(void*, art::DexFile::PositionInfo const&), void*) const
art::ObjectRegistry::~ObjectRegistry()
art::StackVisitor::GetRegisterIfAccessible(unsigned int, art::VRegKind, unsigned int*) const
artSet8StaticFromCompiledCode
art::DexFileVerifier::CheckInterTypeIdItem()
art::OatQuickMethodHeader::ToDexPc(art::ArtMethod*, unsigned int, bool) const
art::verifier::RegisterLine::MarkUninitRefsAsInvalid(art::verifier::MethodVerifier*, art::verifier::RegType const&)
art::ClassLinker::AppendToBootClassPath(art::DexFile const&, art::ObjPtr<art::mirror::DexCache>)
art::X86_64InstructionSetFeatures::~X86_64InstructionSetFeatures()
virtual thunk to std::__1::basic_ifstream<char, std::__1::char_traits<char> >::~basic_ifstream()
art::ElfFile::Load(unix_file::FdFile*, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::WellKnownClasses::java_lang_ClassNotFoundException_init
artSetObjInstanceFromMterp
mspace_max_footprint
art::ClassDataItemIterator::Next()
art::ReferenceMapVisitor<art::RootCallbackVisitor, true>::VisitQuickFramePrecise()::StackMapVRegInfo::FindWithType(unsigned int, art::DexRegisterLocation::Kind, art::mirror::Object**, art::StackVisitor const*)
art::verifier::ConflictType::IsConflict() const
deflateParams
art::SafeCopy(void*, void const*, unsigned int)
art::VariantMapKey<art::ProfileSaverOptions>::~VariantMapKey()
art::ArenaPool::TrimMaps()
art::ti::Agent::operator=(art::ti::Agent const&)
art::ClassLinker::InsertDexFileInToClassLoader(art::ObjPtr<art::mirror::Object>, art::ObjPtr<art::mirror::ClassLoader>)
art::mirror::Class::FindField(art::Thread*, art::ObjPtr<art::mirror::Class>, art::StringPiece const&, art::StringPiece const&)
art::mirror::Method* art::mirror::Method::CreateFromArtMethod<(art::PointerSize)8, false>(art::Thread*, art::ArtMethod*)
void std::__1::vector<unsigned int, art::ScopedArenaAllocatorAdapter<unsigned int> >::__push_back_slow_path<unsigned int>(unsigned int&&)
vtable for art::gc::collector::StickyMarkSweep
art::DexRegisterMap::GetNumberOfLiveDexRegisters(unsigned short) const
art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsFieldVisitor::VisitRoot(art::mirror::CompressedReference<art::mirror::Object>*) const
art::verifier::VerifierDeps::MergeWith(art::verifier::VerifierDeps const&, std::__1::vector<art::DexFile const*, std::__1::allocator<art::DexFile const*> > const&)
vtable for art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds>
art::ThreadLifecycleCallback::~ThreadLifecycleCallback()
art::Dbg::field_read_event_ref_count_
artAllocStringFromCharsFromCodeRegionTLABInstrumented
art::verifier::RegisterLine::CopyRegister1(art::verifier::MethodVerifier*, unsigned int, unsigned int, art::verifier::TypeCategory)
art::ClassLinker::LinkStaticFields(art::Thread*, art::Handle<art::mirror::Class>, unsigned int*)
art::Thread::is_started_
art::ReaderWriterMutex::ExclusiveUnlock(art::Thread*)
art::mirror::String::java_lang_String_
art::annotations::GetAnnotationForMethod(art::ArtMethod*, art::Handle<art::mirror::Class>)
std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringbuf()
art::MemMap::MemMap(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned char*, unsigned int, void*, unsigned int, int, bool, unsigned int)
art::VariantMapKey<art::JDWP::JdwpOptions>::ValueDelete(void*) const
art::detail::CmdlineParseArgument<art::JDWP::JdwpOptions>::SaveArgument(art::JDWP::JdwpOptions const&)
art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> >::Insert(art::ClassTable::TableSlot const&)
vtable for art::RuntimeArgumentMapKey<art::LogVerbosity>
bool art::interpreter::DoFieldPut<(art::FindFieldType)5, (art::Primitive::Type)0, true, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::register_java_util_concurrent_atomic_AtomicLong(_JNIEnv*)
art::CheckJNI::GetStaticMethodID(_JNIEnv*, _jclass*, char const*, char const*)
artSet16InstanceFromMterp
android::base::EndsWithIgnoreCase(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*)
art::Dbg::MethodHasAnyBreakpoints(art::ArtMethod*)
std::__1::__shared_ptr_emplace<art::MillisecondsToNanoseconds, std::__1::allocator<art::MillisecondsToNanoseconds> >::__on_zero_shared()
art::jit::JitCodeCache::NotifyMethodRedefined(art::ArtMethod*)
art::verifier::ShortType::Dump() const
art::ThrowNullPointerExceptionForFieldAccess(art::ArtField*, bool)
art::Exec(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
non-virtual thunk to art::gc::space::BumpPointerSpace::RevokeAllThreadLocalBuffers()
art::ObjPtr<art::mirror::Constructor> art::mirror::Class::GetDeclaredConstructorInternal<(art::PointerSize)8, true>(art::Thread*, art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::ObjectArray<art::mirror::Class> >)
art::Arm64InstructionSetFeatures::FromVariant(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::verifier::MethodVerifier::GetDeclaringClass()
art::verifier::RegTypeCache::FromUnresolvedSuperClass(art::verifier::RegType const&)
art::InstructionSetFeatures::HasAtLeast(art::InstructionSetFeatures const*) const
art::PreInitializeNativeBridge(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::MillisecondsToNanoseconds& ()>::__clone(std::__1::__function::__base<art::MillisecondsToNanoseconds&>*) const
art::OatHeader::IsKeyEnabled(char const*) const
CentralDirectory::Initialize(void*, long long, unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::IntoKey(art::RuntimeArgumentMapKey<art::ParseStringList<(char)58> > const&)::{lambda(art::ParseStringList<(char)58>&)#1}, std::__1::allocator<{lambda(art::ParseStringList<(char)58>&)#1}>, void (art::ParseStringList<(char)58>&)>::destroy_deallocate()
art::ThreadList::FlipThreadRoots(art::Closure*, art::Closure*, art::gc::collector::GarbageCollector*, art::gc::GcPauseListener*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoIgnore()::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>::__clone() const
art::gc::space::RosAllocSpace::CreateFromMemMap(art::MemMap*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned int, unsigned int, unsigned int, bool, bool)
art::ClassLinker::FindClass(art::Thread*, char const*, art::Handle<art::mirror::ClassLoader>)
art::JNI::GetPrimitiveArrayCritical(_JNIEnv*, _jarray*, unsigned char*)
artAllocArrayFromCodeResolvedDlMallocInstrumented
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>
art::verifier::PrimitiveType::HasClassVirtual() const
art::verifier::LongLoType::GetAssignmentTypeImpl() const
vtable for art::LookupClassesVisitor
vtable for art::StackOverflowHandler
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > const&)::{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}, std::__1::allocator<{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}>, void (std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)>::__clone() const
art::gc::accounting::SpaceBitmap<4096u>::OffsetToIndex(unsigned int)
art::JDWP::Request::Read8BE()
art::gc::AllocRecordStackVisitor::VisitFrame()
void art::mirror::StackTraceElement::Init<true>(art::ObjPtr<art::mirror::String>, art::ObjPtr<art::mirror::String>, art::ObjPtr<art::mirror::String>, int)
art::verifier::MethodVerifier::LogVerifyInfo()
art::StackVisitor::GetReturnPc() const
art::mirror::Class::ComputeName(art::Handle<art::mirror::Class>)
art::interpreter::UnstartedRuntime::UnstartedClassForName(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::Thread::NotifyLocked(art::Thread*)
artMterpAsmInstructionStart
art::gc::collector::ConcurrentCopying::MarkZygoteLargeObjects()
vtable for art::verifier::PrimitiveType
vtable for art::gc::Heap::ConcurrentGCTask
art::Runtime::AttachAgent(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::verifier::IntegerType::IsInteger() const
art::gc::collector::MarkCompact::MarkObject(art::mirror::Object*)
art::gc::space::Space::IsDiscontinuousSpace() const
art::gc::space::RegionSpace::Contains(art::mirror::Object const*) const
art::CheckJNI::GetStringCritical(_JNIEnv*, _jstring*, unsigned char*)
art::GetInstructionSetFromELF(unsigned short, unsigned int)
art::hprof::DumpHeap(char const*, int, bool)
art::jit::Jit::CreateThreadPool()
artSetObjStaticFromCode
unix_file::FdFile::operator=(unix_file::FdFile&&)
void art::JNI::ReleasePrimitiveArray<_jcharArray*, unsigned short, art::mirror::PrimitiveArray<unsigned short> >(_JNIEnv*, _jcharArray*, unsigned short*, int)
art::verifier::MethodVerifier::FromClass(char const*, art::mirror::Class*, bool)
art::OatHeader::SetExecutableOffset(unsigned int)
art::Indenter::overflow(int)
art::interpreter::UnstartedRuntime::Invoke(art::Thread*, art::DexFile::CodeItem const*, art::ShadowFrame*, art::JValue*, unsigned int)
vtable for art::NthCallerWithDexPcVisitor
art::Thread::DumpState(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Thread const*, int)
art::TimingLogger::kIndexNotFound
art::WellKnownClasses::java_lang_Throwable_stackState
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)2, true, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::mirror::Class::FindClassInitializer(art::PointerSize)
art::RuntimeCallbacks::~RuntimeCallbacks()
android::base::LogMessage::~LogMessage()
art::mirror::Class::GetSourceFile()
art::jit::JitCodeCache::NotifyCompilerUse(art::ArtMethod*, art::Thread*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::IntoKey(art::RuntimeArgumentMapKey<art::gc::space::LargeObjectSpaceType> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::gc::space::LargeObjectSpaceType& ()>::__clone(std::__1::__function::__base<art::gc::space::LargeObjectSpaceType&>*) const
art::Trace::Branch(art::Thread*, art::ArtMethod*, unsigned int, int)
art::DescriptorToName(char const*)
art::ClassLinker::LinkInterfaceMethodsHelper::FindMethod(art::ArtMethod*, art::MethodNameAndSignatureComparator&, art::ArtMethod*)
art::ClassLinker::VisitClasses(art::ClassVisitor*)
art::ClassTable::TableSlot::TableSlot(art::ObjPtr<art::mirror::Class>)
art::Signature::IsVoid() const
art::RuntimeArgumentMap::BootClassPathLocations
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::IntoKey(art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds> const&)::{lambda(art::MillisecondsToNanoseconds&)#1}, std::__1::allocator<{lambda(art::MillisecondsToNanoseconds&)#1}>, void (art::MillisecondsToNanoseconds&)>::~__func()
std::__1::__vector_base<art::BaseMutex*, std::__1::allocator<art::BaseMutex*> >::~__vector_base()
art::CheckJNI::CallStaticShortMethodA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
art::gc::space::DiscontinuousSpace::DiscontinuousSpace(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::gc::space::GcRetentionPolicy)
art::Mutex::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::gc::IdentityMarkHeapReferenceVisitor::MarkObject(art::mirror::Object*)
artAllocObjectFromCodeInitializedRosAlloc
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<art::JDWP::JdwpOptions>(art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions> const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::TraceClockSource& ()>::destroy_deallocate()
art::ElfFileImpl<ElfTypes32>::GetProgramHeaderNum() const
art::RuntimeArgumentMap::CheckJni
artAllocObjectFromCodeInitializedRegionTLABInstrumented
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void*>*)
art::CmdlineType<art::ProfileSaverOptions>::RemovePrefix(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream()
artSet32InstanceFromCode
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, void*>*, int>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int> > >::__emplace_unique_key_args<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int const&)
art::interpreter::UnstartedRuntime::UnstartedClassLoaderGetResourceAsStream(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::detail::CmdlineParserArgumentInfo<art::ParseStringList<(char)58> >::~CmdlineParserArgumentInfo()
art::JNI::CallStaticIntMethodA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
non-virtual thunk to art::gc::space::FreeListSpace::~FreeListSpace()
void art::mirror::VisitDexCachePairs<art::mirror::String, (art::ReadBarrierOption)0, art::gc::Verification::BFSFindReachable>(std::__1::atomic<art::mirror::DexCachePair<art::mirror::String> >*, unsigned int, art::gc::Verification::BFSFindReachable const&)
art::WellKnownClasses::java_lang_Throwable_cause
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoKey(art::RuntimeArgumentMapKey<art::Unit> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>
art::WellKnownClasses::dalvik_system_DexClassLoader
art::Dbg::PostThreadStartOrStop(art::Thread*, unsigned int)
art::gc::space::ContinuousMemMapAllocSpace::AsAllocSpace()
art::JDWP::JdwpAdbState::ProcessIncoming()
art::verifier::ByteType const* art::verifier::RegTypeCache::CreatePrimitiveTypeInstance<art::verifier::ByteType>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::Dbg::GetThreadGroupParent(unsigned long long, art::JDWP::ExpandBuf*)
art::mirror::ObjectArray<art::mirror::DexCache>::Alloc(art::Thread*, art::ObjPtr<art::mirror::Class>, int, art::gc::AllocatorType)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::IntoKey(art::RuntimeArgumentMapKey<art::ParseStringList<(char)58> > const&)::{lambda(art::ParseStringList<(char)58>&)#1}, std::__1::allocator<{lambda(art::ParseStringList<(char)58>&)#1}>, void (art::ParseStringList<(char)58>&)>::~__func()
art::VariantMapKey<art::BackgroundGcOption>::~VariantMapKey()
art::gDebugInstrumentationListener
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::ProfileSaverOptions&)#1}, std::__1::allocator<{lambda(art::ProfileSaverOptions&)#1}>, void (art::ProfileSaverOptions&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::ProfileSaverOptions&)#1}> >*) const
art::verifier::VerifierDeps::VerifyDexFile(art::Handle<art::mirror::ClassLoader>, art::DexFile const&, art::verifier::VerifierDeps::DexFileDeps const&, art::Thread*) const
art::QuickArgumentVisitor::GetCallingDexPc(art::ArtMethod**)
art::CheckJNI::DefineClass(_JNIEnv*, char const*, _jobject*, signed char const*, int)
void std::__1::vector<art::gc::AbstractSystemWeakHolder*, std::__1::allocator<art::gc::AbstractSystemWeakHolder*> >::__push_back_slow_path<art::gc::AbstractSystemWeakHolder* const&>(art::gc::AbstractSystemWeakHolder* const&)
art::gc::Heap::DumpSpaces() const
art::gc::collector::SemiSpace::ReclaimPhase()
art::JII::AttachCurrentThreadAsDaemon(_JavaVM*, _JNIEnv**, void*)
std::__1::__hash_table<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int> >::rehash(unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1024u>& ()>::operator()()
art::VariantMapKey<art::verifier::VerifyMode>::ValueClone(void*) const
art::verifier::VerifierDeps::GetStringFromId(art::DexFile const&, art::dex::StringIndex) const
art::ArenaAllocator::BytesAllocated() const
deflateInit_
art::Locks::cha_lock_
virtual thunk to std::__1::basic_ostream<char, std::__1::char_traits<char> >::~basic_ostream()
art::mirror::Constructor::array_class_
art::Instruction::DumpString(art::DexFile const*) const
art::gc::ZygoteCompactingCollector::~ZygoteCompactingCollector()
art::testing::MemCmp16Testing(unsigned short const*, unsigned short const*, unsigned int)
void std::__1::vector<art::SharedLibrary*, std::__1::allocator<art::SharedLibrary*> >::__push_back_slow_path<art::SharedLibrary* const&>(art::SharedLibrary* const&)
std::__1::function<void (art::BackgroundGcOption&)>::swap(std::__1::function<void (art::BackgroundGcOption&)>&)
art::verifier::UnresolvedType::GetAssignmentTypeImpl() const
void art::mirror::Object::VisitFieldsReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsFieldVisitor>(unsigned int, art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsFieldVisitor const&)
art::gc::collector::ImmuneSpaces::ContainsSpace(art::gc::space::ContinuousSpace*) const
art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> >::Erase(art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> >::BaseIterator<art::ClassTable::TableSlot, art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> > >)
non-virtual thunk to art::gc::space::BumpPointerSpace::~BumpPointerSpace()
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::IntoKey(art::RuntimeArgumentMapKey<art::TraceClockSource> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::TraceClockSource& ()>
art::gc::space::BumpPointerSpace::RevokeThreadLocalBuffers(art::Thread*)
vtable for art::VariantMapKey<art::ProfileSaverOptions>
art::CheckJNI::CallNonvirtualVoidMethodV(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, char*)
art::VariantMapKey<art::InstructionSet>::~VariantMapKey()
MterpFilledNewArray
art::Trace::GetBufferSize()
art::OatHeader::IsValid() const
art::gc::allocator::RosAlloc::AllocPages(art::Thread*, unsigned int, unsigned char)
art::gc::collector::MarkSweep::CardScanTask::Run(art::Thread*)
art::CmdlineParseResult<unsigned int>::OutOfRange(unsigned int const&, unsigned int const&, unsigned int const&)
bool art::DexFileVerifier::CheckIntraClassDataItemFields<true>(art::ClassDataItemIterator*, bool*, art::dex::TypeIndex*, art::DexFile::ClassDef const**)
art::hprof::EndianOutputBuffered::HandleU8List(unsigned long long const*, unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>::destroy()
art::JNI::GetBooleanArrayElements(_JNIEnv*, _jbooleanArray*, unsigned char*)
art::StackVisitor::SanityCheckFrame() const
art::CmplDouble(double, double)
art::gc::accounting::ModUnionTableToZygoteAllocspace::~ModUnionTableToZygoteAllocspace()
art::ArenaAllocatorMemoryTool::DoMakeDefined(void*, unsigned int)
art::ElfFileImpl<ElfTypes32>::FindDynamicValueByType(int) const
art::jit::Jit::jit_library_handle_
void art::gc::collector::ConcurrentCopying::MarkRoot<false>(art::mirror::CompressedReference<art::mirror::Object>*)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__grow_by_and_replace(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, char const*)
art::WellKnownClasses::java_lang_Daemons_stop
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::ExperimentalFlags&)#1}, std::__1::allocator<{lambda(art::ExperimentalFlags&)#1}>, void (art::ExperimentalFlags&)>::destroy_deallocate()
art::gc::space::ZygoteSpace::FreeList(art::Thread*, unsigned int, art::mirror::Object**)
bool art::interpreter::DoFieldGet<(art::FindFieldType)6, (art::Primitive::Type)2, false>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::CheckJNI::CallObjectMethodV(_JNIEnv*, _jobject*, _jmethodID*, char*)
art::mirror::Field::array_class_
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(unsigned int&)#1}, std::__1::allocator<{lambda(unsigned int&)#1}>, void (unsigned int&)>
art::gc::VerifyReferenceVisitor::VerifyReference(art::mirror::Object*, art::mirror::Object*, art::MemberOffset) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::IntoKey(art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds> const&)::{lambda(art::MillisecondsToNanoseconds&)#1}, std::__1::allocator<{lambda(art::MillisecondsToNanoseconds&)#1}>, void (art::MillisecondsToNanoseconds&)>::__clone() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoIgnore()::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>::__clone() const
art::detail::CmdlineParserArgumentInfo<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::~CmdlineParserArgumentInfo()
art::gc::accounting::SpaceBitmap<8u>::ClearRange(art::mirror::Object const*, art::mirror::Object const*)
art::gc::collector::ConcurrentCopying::LogFromSpaceRefHolder(art::mirror::Object*, art::MemberOffset)
art::EncodedArrayValueIterator::EncodedArrayValueIterator(art::DexFile const&, unsigned char const*)
art::JNI::GetStaticCharField(_JNIEnv*, _jclass*, _jfieldID*)
art::Trace::~Trace()
art::ObjPtr<art::mirror::Method> art::mirror::Class::GetDeclaredMethodInternal<(art::PointerSize)4, false>(art::Thread*, art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::String>, art::ObjPtr<art::mirror::ObjectArray<art::mirror::Class> >)
art::verifier::MethodVerifier::MethodVerifier(art::Thread*, art::DexFile const*, art::Handle<art::mirror::DexCache>, art::Handle<art::mirror::ClassLoader>, art::DexFile::ClassDef const&, art::DexFile::CodeItem const*, unsigned int, art::ArtMethod*, unsigned int, bool, bool, bool, bool, bool)
art::DexFileVerifier::Verify(art::DexFile const*, unsigned char const*, unsigned int, char const*, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::CompleteArgument()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoKey(art::RuntimeArgumentMapKey<art::Unit> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>::destroy_deallocate()
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::reserve(unsigned int)
vtable for art::verifier::ConflictType
art::JDWP::expandBufAdd8BE(art::JDWP::ExpandBuf*, unsigned long long)
art::ElfFile::Fixup(unsigned long long)
art::VariantMapKey<std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > >*>::ValueClone(void*) const
art::mips64::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::mips64::VectorRegister const&)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::MillisecondsToNanoseconds& ()>
art::verifier::VerifierDeps::DexFileDeps::~DexFileDeps()
art::CheckJNI::GetBooleanField(_JNIEnv*, _jobject*, _jfieldID*)
void std::__1::vector<art::gc::collector::GarbageCollector*, std::__1::allocator<art::gc::collector::GarbageCollector*> >::__push_back_slow_path<art::gc::collector::GarbageCollector*>(art::gc::collector::GarbageCollector*&&)
art::verifier::BooleanType::CreateInstance(art::mirror::Class*, art::StringPiece const&, unsigned short)
art::JDWP::EventFree(art::JDWP::JdwpEvent*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(unsigned int&)#1}, std::__1::allocator<{lambda(unsigned int&)#1}>, void (unsigned int&)>::destroy_deallocate()
art::Mips64InstructionSetFeatures::~Mips64InstructionSetFeatures()
art::Dbg::Disconnected()
art::InternTable::ChangeWeakRootStateLocked(art::gc::WeakRootState)
art::ArenaBitVectorAllocator<art::ArenaAllocator>::~ArenaBitVectorAllocator()
art::SuspensionHandler::SuspensionHandler(art::FaultManager*)
art::JNI::GetStaticLongField(_JNIEnv*, _jclass*, _jfieldID*)
vtable for art::ZipEntry
art::SignalCatcher::OpenStackTraceFile(android::base::unique_fd_impl<android::base::DefaultCloser>*, android::base::unique_fd_impl<android::base::DefaultCloser>*)
art::ThrowNegativeArraySizeException(int)
art::gc::accounting::ModUnionTableCardCache::ModUnionTableCardCache(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::gc::Heap*, art::gc::space::ContinuousSpace*)
art::Trace::default_clock_source_
art::ManagedStack::NumJniShadowFrameReferences() const
art::ImageHeader::GetLocationFromImageLocation(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::gc::space::ContinuousMemMapAllocSpace::Sweep(bool)
art::gc::space::ZygoteSpace::Alloc(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::JavaVMExt::DecodeWeakGlobalDuringShutdown(art::Thread*, void*)
art::DexFile::GetDexCanonicalLocation(char const*)
art::JNI::FromReflectedMethod(_JNIEnv*, _jobject*)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::DexLayoutSections const&)
art::Thread::FromManagedThread(art::ScopedObjectAccessAlreadyRunnable const&, _jobject*)
art::gc::Heap::GetObjectsAllocatedEver() const
art::gc::Heap::DumpBlockingGcCountRateHistogram(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::gc::space::LargeObjectSpace::SweepCallback(unsigned int, art::mirror::Object**, void*)
art::Mips64InstructionSetFeatures::AsBitmap() const
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, int>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<double>(art::RuntimeArgumentMapKey<double> const&)
art::JNI::GetByteArrayElements(_JNIEnv*, _jbyteArray*, unsigned char*)
std::__1::basic_ostream<char, std::__1::char_traits<char> >::~basic_ostream()
bool std::__1::__insertion_sort_incomplete<art::LinkFieldsComparator&, std::__1::__deque_iterator<art::ArtField*, art::ArtField**, art::ArtField*&, art::ArtField***, int, 1024> >(std::__1::__deque_iterator<art::ArtField*, art::ArtField**, art::ArtField*&, art::ArtField***, int, 1024>, std::__1::__deque_iterator<art::ArtField*, art::ArtField**, art::ArtField*&, art::ArtField***, int, 1024>, art::LinkFieldsComparator&)
art::gc::space::ContinuousMemMapAllocSpace::GetLiveBitmap() const
std::__1::__shared_ptr_emplace<int (*)(__sFILE*, char const*, char*), std::__1::allocator<int (*)(__sFILE*, char const*, char*)> >::~__shared_ptr_emplace()
art::JNI::Throw(_JNIEnv*, _jthrowable*)
art::ClassTable::Contains(art::ObjPtr<art::mirror::Class>)
art::MarkObjectVisitor::~MarkObjectVisitor()
artAllocObjectFromCodeInitializedBumpPointerInstrumented
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::IntoKey(art::RuntimeArgumentMapKey<bool> const&)::{lambda(bool&)#1}, std::__1::allocator<{lambda(bool&)#1}>, void (bool&)>::destroy_deallocate()
art::JDWP::JdwpState::PostThreadChange(art::Thread*, bool)
art::WellKnownClasses::java_lang_Long_valueOf
art::Transaction::Rollback()
MterpCheckCast
MterpDoSparseSwitch
bool art::interpreter::DoCall<true, true>(art::ArtMethod*, art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoKey(art::RuntimeArgumentMapKey<art::Unit> const&)::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>::operator()(art::Unit&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::IntoKey(art::RuntimeArgumentMapKey<unsigned int> const&)::{lambda(unsigned int&)#1}, std::__1::allocator<{lambda(unsigned int&)#1}>, void (unsigned int&)>::destroy()
std::__1::vector<art::HashSet<art::GcRoot<art::mirror::String>, art::InternTable::GcRootEmptyFn, art::InternTable::StringHashEquals, art::InternTable::StringHashEquals, std::__1::allocator<art::GcRoot<art::mirror::String> > >, std::__1::allocator<art::HashSet<art::GcRoot<art::mirror::String>, art::InternTable::GcRootEmptyFn, art::InternTable::StringHashEquals, art::InternTable::StringHashEquals, std::__1::allocator<art::GcRoot<art::mirror::String> > > > >::insert(std::__1::__wrap_iter<art::HashSet<art::GcRoot<art::mirror::String>, art::InternTable::GcRootEmptyFn, art::InternTable::StringHashEquals, art::InternTable::StringHashEquals, std::__1::allocator<art::GcRoot<art::mirror::String> > > const*>, art::HashSet<art::GcRoot<art::mirror::String>, art::InternTable::GcRootEmptyFn, art::InternTable::StringHashEquals, art::InternTable::StringHashEquals, std::__1::allocator<art::GcRoot<art::mirror::String> > >&&)
art::CheckJNI::CallObjectMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)
art::ClassLoaderContext::OpenDexFiles(art::InstructionSet, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
construction vtable for std::__1::basic_ostream<char, std::__1::char_traits<char> >-in-std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::IntoKey(art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::JDWP::JdwpOptions& ()>::__clone() const
art::gc::ReferenceProcessor::UpdateRoots(art::IsMarkedVisitor*)
std::__1::__function::__func<void (*)(char const*), std::__1::allocator<void (*)(char const*)>, void (char const*)>::destroy()
art::Locks::allocated_thread_ids_lock_
art::gc::space::ImageSpace::GetType() const
non-virtual thunk to art::gc::space::RegionSpace::AllocationSize(art::mirror::Object*, unsigned int*)
art::gc::collector::MarkSweep::FinishPhase()
void std::__1::vector<std::__1::unique_ptr<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::default_delete<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::allocator<std::__1::unique_ptr<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::default_delete<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__emplace_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*&&)
art::JDWP::JdwpAdbState::~JdwpAdbState()
art::gc::Heap::ClearConcurrentGCRequest()
art::JNI::CallObjectMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)
android::base::LogMessage::stream()
art::Dbg::GetThreadGroupChildren(unsigned long long, art::JDWP::ExpandBuf*)
art::ClassLinker::GetOrCreateAllocatorForClassLoader(art::ObjPtr<art::mirror::ClassLoader>)
vtable for art::verifier::UnresolvedUninitializedThisRefType
art::VariantMapKey<art::InstructionSet>::ValueDelete(void*) const
art::Dbg::StopJdwp()
art::Runtime::VisitRoots(art::RootVisitor*, art::VisitRootFlags)
__register_frame_table
art::CheckJNI::CallNonvirtualCharMethod(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, ...)
art::ReaderWriterMutex::SharedTryLock(art::Thread*)
art::gc::collector::MarkSweep::~MarkSweep()
art::InvokeProxyInvocationHandler(art::ScopedObjectAccessAlreadyRunnable&, char const*, _jobject*, _jobject*, std::__1::vector<jvalue, std::__1::allocator<jvalue> >&)
art::CheckJNI::GetDirectBufferAddress(_JNIEnv*, _jobject*)
unix_file::FdFile::Unlink()
_JNIEnv::CallStaticObjectMethod(_jclass*, _jmethodID*, ...)
art::gLogVerbosity
art::gc::accounting::SpaceBitmap<8u>::OffsetToIndex(unsigned int)
art::OatFile::GetOatHeader() const
art::gc::space::MallocSpace::bitmap_index_
art::IndirectReferenceTable::IndirectReferenceTable(unsigned int, art::IndirectRefKind, art::IndirectReferenceTable::ResizableCapacity, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::OatFileAssistant::DexLocationToOatFilename(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::InstructionSet, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
artMterpAsmSisterStart
void art::JNI::SetPrimitiveArrayRegion<_jdoubleArray*, double, art::mirror::PrimitiveArray<double> >(_JNIEnv*, _jdoubleArray*, int, int, double const*)
art::gc::space::MallocSpace::Capacity() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoKey(art::RuntimeArgumentMapKey<art::Unit> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>::~__func()
art::OatHeader::GetQuickGenericJniTrampoline() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::IntoKey(art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::MillisecondsToNanoseconds& ()>::~__func()
non-virtual thunk to art::gc::collector::ConcurrentCopying::MarkHeapReference(art::mirror::HeapReference<art::mirror::Object>*, bool)
art::VariantMapKey<art::InstructionSet>::Clone() const
art::verifier::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::verifier::MethodType const&)
art::verifier::ConflictType const* art::verifier::RegTypeCache::CreatePrimitiveTypeInstance<art::verifier::ConflictType>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::Memory<1u>&)#1}, std::__1::allocator<{lambda(art::Memory<1u>&)#1}>, void (art::Memory<1u>&)>::__clone() const
art::InternTable::LookupStrong(art::Thread*, unsigned int, char const*)
art::Primitive::PrettyDescriptor(art::Primitive::Type)
artAllocStringFromBytesFromCodeRosAlloc
art::WellKnownClasses::dalvik_system_DexFile
art::CheckJNI::SetIntField(_JNIEnv*, _jobject*, _jfieldID*, int)
art::CheckJNI::GetLongArrayElements(_JNIEnv*, _jlongArray*, unsigned char*)
art::gc::collector::SemiSpace::MarkRoots()
std::__1::function<void (unsigned int&)>::swap(std::__1::function<void (unsigned int&)>&)
android::base::ScopedLogSeverity::~ScopedLogSeverity()
art::gc::collector::MarkSweep::RunPhases()
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::MemMap const&)
art::ArtMethod* art::ClassLinker::GetResolvedMethod<(art::InvokeType)3, (art::ClassLinker::ResolveMode)1>(unsigned int, art::ArtMethod*)
art::mirror::Class::GetDeclaredConstructor(art::Thread*, art::Handle<art::mirror::ObjectArray<art::mirror::Class> >, art::PointerSize)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>::~__func()
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(unsigned int, char)
art::ti::Agent::Load(int*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::gc::space::ZygoteSpace::ZygoteSpace(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::MemMap*, unsigned int)
art::ThreadPool::SetPthreadPriority(int)
art::detail::CmdlineParseArgument<double>::~CmdlineParseArgument()
non-virtual thunk to art::gc::space::RegionSpace::RevokeAllThreadLocalBuffers()
art::ElfFileImpl<ElfTypes64>::IsSymbolSectionType(unsigned int)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>&&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::IntoKey(art::RuntimeArgumentMapKey<bool> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, bool& ()>::destroy_deallocate()
vtable for std::__1::__shared_ptr_emplace<art::Memory<1u>, std::__1::allocator<art::Memory<1u> > >
art::WellKnownClasses::dalvik_system_DexPathList__Element
art::Thread::QuickDeliverException()
art::instrumentation::InstrumentationListener::MethodExited(art::Thread*, art::Handle<art::mirror::Object>, art::ArtMethod*, unsigned int, art::Handle<art::mirror::Object>)
art::CheckJNI::GetObjectRefType(_JNIEnv*, _jobject*)
art::ReaderWriterMutex::HandleSharedLockContention(art::Thread*, int)
art::ElfFileImpl<ElfTypes64>::GetStringSectionStart(unsigned int) const
art::mirror::Object* art::gc::Heap::AllocObjectWithAllocator<true, true, art::mirror::SetStringCountAndValueVisitorFromString>(art::Thread*, art::ObjPtr<art::mirror::Class>, unsigned int, art::gc::AllocatorType, art::mirror::SetStringCountAndValueVisitorFromString const&)
art::jit::ScopedJitSuspend::~ScopedJitSuspend()
art::CodeInfo::ComputeDexRegisterMapSizeOf(art::CodeInfoEncoding const&, unsigned int, unsigned short) const
artAllocObjectFromCodeResolvedRosAllocInstrumented
art::GetThisVisitor::VisitFrame()
art::PrettyReturnType(char const*)
art::ProfileCompilationInfo::ReadProfileLine(art::ProfileCompilationInfo::SafeBuffer&, unsigned char, art::ProfileCompilationInfo::ProfileLineHeader const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::ThreadList::DumpForSigQuit(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
std::__1::__tree<art::Histogram<unsigned long long>*, art::CompareHistorgramByTimeSpentDeclining, std::__1::allocator<art::Histogram<unsigned long long>*> >::destroy(std::__1::__tree_node<art::Histogram<unsigned long long>*, void*>*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::verifier::VerifyMode&)#1}, std::__1::allocator<{lambda(art::verifier::VerifyMode&)#1}>, void (art::verifier::VerifyMode&)>::__clone() const
art::CheckJNI::SetStaticCharField(_JNIEnv*, _jclass*, _jfieldID*, unsigned short)
art::DexFileVerifier::CheckInterProtoIdItem()
art::ElfFileImpl<ElfTypes32>::Begin() const
art::jit::Jit::CanInvokeCompiledCode(art::ArtMethod*)
art::VerifyAccess(art::Thread*, art::ObjPtr<art::mirror::Object>, art::ObjPtr<art::mirror::Class>, unsigned int, art::ObjPtr<art::mirror::Class>*, unsigned int)
art::mirror::ObjectArray<art::mirror::Class>::Alloc(art::Thread*, art::ObjPtr<art::mirror::Class>, int, art::gc::AllocatorType)
art::Dbg::SetLocalValues(art::JDWP::Request*)
void art::ClassTable::VisitRoots<art::gc::accounting::CheckReferenceVisitor>(art::gc::accounting::CheckReferenceVisitor const&)
art::Runtime::EnvSnapshot::TakeSnapshot()
art::DexFile::Open(unsigned char const*, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, art::OatDexFile const*, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::IntoKey(art::RuntimeArgumentMapKey<unsigned int> const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::IntoKey(art::RuntimeArgumentMapKey<art::ProfileSaverOptions> const&)::{lambda(art::ProfileSaverOptions&)#1}, std::__1::allocator<{lambda(art::ProfileSaverOptions&)#1}>, void (art::ProfileSaverOptions&)>::destroy()
art::VariantMapKey<art::LogVerbosity>::ValueDelete(void*) const
art::Thread::CreateCompileTimePeer(_JNIEnv*, char const*, bool, _jobject*)
art::CheckJNI::SetFloatField(_JNIEnv*, _jobject*, _jfieldID*, float)
vtable for art::JDWP::JdwpNetStateBase
art::JniMethodFastEndWithReference(_jobject*, unsigned int, art::Thread*)
art::DexFileVerifier::ErrorStringPrintf(char const*, ...)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::IntoKey(art::RuntimeArgumentMapKey<art::gc::space::LargeObjectSpaceType> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::gc::space::LargeObjectSpaceType& ()>::__clone() const
art::Thread::Startup()
art::StackMap::kNoInlineInfo
art::ThreadList::Contains(int)
art::Dbg::SetLocalValue(art::Thread*, art::StackVisitor&, int, art::JDWP::JdwpTag, unsigned long long, unsigned int)
std::__1::__tree<std::__1::__value_type<unsigned char, std::__1::vector<art::dex::TypeIndex, std::__1::allocator<art::dex::TypeIndex> > >, std::__1::__map_value_compare<unsigned char, std::__1::__value_type<unsigned char, std::__1::vector<art::dex::TypeIndex, std::__1::allocator<art::dex::TypeIndex> > >, std::__1::less<unsigned char>, true>, std::__1::allocator<std::__1::__value_type<unsigned char, std::__1::vector<art::dex::TypeIndex, std::__1::allocator<art::dex::TypeIndex> > > > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned char, std::__1::vector<art::dex::TypeIndex, std::__1::allocator<art::dex::TypeIndex> > >, void*>*)
std::__1::function<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>::swap(std::__1::function<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::IntoKey(art::RuntimeArgumentMapKey<art::LogVerbosity> const&)::{lambda(art::LogVerbosity&)#1}, std::__1::allocator<{lambda(art::LogVerbosity&)#1}>, void (art::LogVerbosity&)>::destroy_deallocate()
art::gc::space::MallocSpace::CanMoveObjects() const
art::verifier::RegisterLine::CheckBinaryOp2addr(art::verifier::MethodVerifier*, art::Instruction const*, art::verifier::RegType const&, art::verifier::RegType const&, art::verifier::RegType const&, bool)
art::CheckJNI::CallStaticCharMethodV(_JNIEnv*, _jclass*, _jmethodID*, char*)
art::gc::collector::MarkSweep::MarkStackTask<false>::Finalize()
art::detail::CmdlineParseArgument<art::verifier::VerifyMode>::MaybeMatches(art::TokenRange const&)
art::gc::PrettyCause(art::gc::GcCause)
art::JDWP::Request::~Request()
art::Context::~Context()
void art::annotations::RuntimeEncodedStaticFieldValueIterator::ReadValueToField<false>(art::ArtField*) const
artAllocStringFromCharsFromCodeTLAB
art::verifier::RegisterLine::CheckBinaryOpWide(art::verifier::MethodVerifier*, art::Instruction const*, art::verifier::RegType const&, art::verifier::RegType const&, art::verifier::RegType const&, art::verifier::RegType const&, art::verifier::RegType const&, art::verifier::RegType const&)
art::CmpgDouble(double, double)
art::Thread::PopStackedShadowFrame(art::StackedShadowFrameType, bool)
art::JNIEnvExt::GetEnvHandler(art::JavaVMExt*, void**, int)
art::RuntimeArgumentMap::PatchOat
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >& ()>::__clone() const
art::gc::space::RegionSpace::AllocNewTlab(art::Thread*, unsigned int)
art::RuntimeArgumentMap::ImageDex2Oat
art::OatFileAssistant::HasOriginalDexFiles()
art::ElfFileImpl<ElfTypes32>::GetHeader() const
art::gc::allocator::ArtDlMallocMoreCore(void*, int)
art::mirror::PrimitiveArray<signed char>* art::JNI::DecodeAndCheckArrayType<_jbyteArray*, signed char, art::mirror::PrimitiveArray<signed char> >(art::ScopedObjectAccess&, _jbyteArray*, char const*, char const*)
art::StackVisitor::GetFPR(unsigned int) const
art::ClassLinker::ResolveClassExceptionHandlerTypes(art::Handle<art::mirror::Class>)
art::gc::Heap::UpdateProcessState(art::ProcessState, art::ProcessState)
std::__1::__split_buffer<art::instrumentation::InstrumentationStackFrame*, std::__1::allocator<art::instrumentation::InstrumentationStackFrame*> >::push_back(art::instrumentation::InstrumentationStackFrame*&&)
art::verifier::ReferenceType::IsNonZeroReferenceTypes() const
art::MonitorList::MonitorList()
art::ClassLinker::ResolveField(unsigned int, art::ArtMethod*, bool)
art::ThreadList::Resume(art::Thread*, art::SuspendReason)
art::MipsInstructionSetFeatures::~MipsInstructionSetFeatures()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::Memory<1024u>&)#1}, std::__1::allocator<{lambda(art::Memory<1024u>&)#1}>, void (art::Memory<1024u>&)>::destroy_deallocate()
MappedZipFile::GetFileLength() const
art::VariantMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::~VariantMapKey()
art::gc::accounting::ModUnionTableCardCache::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::jit::Jit::AddTimingLogger(art::TimingLogger const&)
art::OatFile::GetBssMethods() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}, std::__1::allocator<{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}>, void (std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)>::~__func()
art::ElfFileImpl<ElfTypes64>::CheckSectionsLinked(unsigned char const*, unsigned char const*) const
art::gc::ReferenceQueue::ReferenceQueue(art::Mutex*)
art::WellKnownClasses::dalvik_system_DexPathList_dexElements
art::gc::collector::PartialMarkSweep::PartialMarkSweep(art::gc::Heap*, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::gc::space::RegionSpace::GetBytesAllocated()
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >& ()>
non-virtual thunk to art::gc::collector::ConcurrentCopying::ThreadFlipVisitor::~ThreadFlipVisitor()
vtable for art::gc::VerifyReferenceVisitor
art::ArenaBitVectorAllocator<art::ScopedArenaAllocator>::Alloc(unsigned int)
vtable for art::InstrumentationStackVisitor
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::XGcOption> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::XGcOption& ()>::~__func()
art::verifier::ByteType::GetAssignmentTypeImpl() const
unsigned int std::__1::__sort5<std::__1::__less<std::__1::tuple<unsigned int, unsigned int, bool>, std::__1::tuple<unsigned int, unsigned int, bool> >&, std::__1::tuple<unsigned int, unsigned int, bool>*>(std::__1::tuple<unsigned int, unsigned int, bool>*, std::__1::tuple<unsigned int, unsigned int, bool>*, std::__1::tuple<unsigned int, unsigned int, bool>*, std::__1::tuple<unsigned int, unsigned int, bool>*, std::__1::tuple<unsigned int, unsigned int, bool>*, std::__1::__less<std::__1::tuple<unsigned int, unsigned int, bool>, std::__1::tuple<unsigned int, unsigned int, bool> >&)
art::mirror::MethodHandle::Initialize(unsigned int, art::mirror::MethodHandle::Kind, art::Handle<art::mirror::MethodType>)
std::__1::__shared_ptr_pointer<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination*, std::__1::default_delete<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>, std::__1::allocator<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination> >::__on_zero_shared_weak()
art::RememberForGcArgumentVisitor::FixupReferences()
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)
art::mirror::PrimitiveArray<short>::GetWithoutChecks(int)
art::RuntimeArgumentMap::NoSigChain
art::gc::collector::ConcurrentCopying::RevokeAllThreadLocalBuffers()
art::JNIEnvExt::table_override_
art::CheckJNI::CallStaticBooleanMethodV(_JNIEnv*, _jclass*, _jmethodID*, char*)
art::Runtime::Runtime()
art::RegisterRuntimeDebugFlag(bool*)
art::interpreter::UnexpectedOpcode(art::Instruction const*, art::ShadowFrame const&)
art::gc::collector::ImmuneSpaces::CreateLargestImmuneRegion()
art::interpreter::UnstartedRuntime::UnstartedJNIVMStackGetCallingClassLoader(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
std::__1::__shared_ptr_pointer<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination*, std::__1::default_delete<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>, std::__1::allocator<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination> >::__on_zero_shared()
art::JDWP::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::JDWP::JdwpSuspendPolicy const&)
bool art::PerformConversions<art::ShadowFrameGetter<true>, art::mirror::EmulatedStackFrameAccessor>(art::Thread*, art::Handle<art::mirror::MethodType>, art::Handle<art::mirror::MethodType>, art::ShadowFrameGetter<true>*, art::mirror::EmulatedStackFrameAccessor*, int)
void std::__1::__invoke_void_return_wrapper<void>::__call<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::BackgroundGcOption> const&)::{lambda(art::BackgroundGcOption&)#1}&, art::BackgroundGcOption&>(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::BackgroundGcOption> const&)::{lambda(art::BackgroundGcOption&)#1}&, art::BackgroundGcOption&)
art::verifier::MethodVerifier::ResolveMethodAndCheckAccess(unsigned int, art::verifier::MethodType)
art::Barrier::Wait(art::Thread*)
_jlongArray* art::JNI::NewPrimitiveArray<_jlongArray*, art::mirror::PrimitiveArray<long long> >(_JNIEnv*, int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoIgnore()::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::Unit&)#1}> >*) const
art::ClassLinker::ClassLinker(art::InternTable*)
FileWriter::Create(int, ZipEntry const*)
std::__1::__deque_base<art::Task*, std::__1::allocator<art::Task*> >::~__deque_base()
art::OatFileManager::FindOpenedOatFileFromOatLocationLocked(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
artQuickGenericJniTrampoline
art::jit::JitCodeCache::IsOsrCompiled(art::ArtMethod*)
art::verifier::VerifierDeps::Equals(art::verifier::VerifierDeps const&) const
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::CompleteArgument()
void art::Thread::VisitRoots<false>(art::RootVisitor*)
bool art::interpreter::DoFieldGet<(art::FindFieldType)2, (art::Primitive::Type)1, false>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::SetQuickAllocEntryPoints_tlab(art::QuickEntryPoints*, bool)
_jobject* art::Thread::CreateInternalStackTrace<false>(art::ScopedObjectAccessAlreadyRunnable const&) const
MterpLogNegativeArraySizeException
art::NthCallerVisitor::~NthCallerVisitor()
art::verifier::RegType::~RegType()
std::__1::__hash_table<art::StringTable::Entry, art::StringTable::EntryHash, std::__1::equal_to<art::StringTable::Entry>, std::__1::allocator<art::StringTable::Entry> >::__rehash(unsigned int)
art::ProfileCompilationInfo::ProfileCompilationInfo()
art::x86_64::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::x86_64::Register const&)
art::ArtField::ResolveGetStringName(art::Thread*, art::DexFile const&, art::dex::StringIndex, art::ObjPtr<art::mirror::DexCache>)
art::ThrowClassCastException(char const*)
art::ElfFile::End() const
art::CheckJNI::NewObject(_JNIEnv*, _jclass*, _jmethodID*, ...)
art::gc::space::RegionSpace::AllocThreadUnsafe(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1024u> > const&)::{lambda(art::Memory<1024u>&)#1}, std::__1::allocator<{lambda(art::Memory<1024u>&)#1}>, void (art::Memory<1024u>&)>::operator()(art::Memory<1024u>&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoIgnore()::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>::destroy_deallocate()
artSet8StaticFromCode
art::gc::collector::MarkSweep::ProcessMarkStack(bool)
art::InvokeWithJValues(art::ScopedObjectAccessAlreadyRunnable const&, _jobject*, _jmethodID*, jvalue*)
art::verifier::ShortType::IsShort() const
vtable for art::NullPointerHandler
art::ElfFileImpl<ElfTypes32>::FindProgamHeaderByType(unsigned int) const
art::gc::accounting::MemoryRangeBitmap<16u>::Create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned int)
art::gc::space::FreeListSpace::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::mirror::PrimitiveArray<float>::GetData()
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::CompleteArgument()
art::MemMap::~MemMap()
art::WellKnownClasses::java_nio_DirectByteBuffer_effectiveDirectAddress
art::Thread::RemoveDebuggerShadowFrameMapping(unsigned int)
art::GetInstructionSetFromString(char const*)
non-virtual thunk to art::gc::space::RosAllocSpace::AllocationSize(art::mirror::Object*, unsigned int*)
void std::__1::vector<art::FaultHandler*, std::__1::allocator<art::FaultHandler*> >::__push_back_slow_path<art::FaultHandler* const&>(art::FaultHandler* const&)
art::ThreadList::ThreadList(unsigned long long)
void std::__1::__invoke_void_return_wrapper<void>::__call<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::IntoKey(art::RuntimeArgumentMapKey<unsigned int> const&)::{lambda(unsigned int&)#1}&, unsigned int&>(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::IntoKey(art::RuntimeArgumentMapKey<unsigned int> const&)::{lambda(unsigned int&)#1}&, unsigned int&)
art::gc::Heap::PreZygoteFork()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::IntoKey(art::RuntimeArgumentMapKey<art::verifier::VerifyMode> const&)::{lambda(art::verifier::VerifyMode&)#1}, std::__1::allocator<{lambda(art::verifier::VerifyMode&)#1}>, void (art::verifier::VerifyMode&)>::operator()(art::verifier::VerifyMode&)
art::ClassLinker::DefineClass(art::Thread*, char const*, unsigned int, art::Handle<art::mirror::ClassLoader>, art::DexFile const&, art::DexFile::ClassDef const&)
art::Dbg::GetLocalValues(art::JDWP::Request*, art::JDWP::ExpandBuf*)
art::x86::X86Context::GetGPR(unsigned int)
void std::__1::vector<int (*)(art::JavaVMExt*, void**, int), std::__1::allocator<int (*)(art::JavaVMExt*, void**, int)> >::__push_back_slow_path<int (* const&)(art::JavaVMExt*, void**, int)>(int (* const&)(art::JavaVMExt*, void**, int))
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1u> > const&)::{lambda(art::Memory<1u>&)#1}, std::__1::allocator<{lambda(art::Memory<1u>&)#1}>, void (art::Memory<1u>&)>
art::gc::collector::MarkSweep::ProcessMarkStack()
adler32_combine64
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::IntoKey(art::RuntimeArgumentMapKey<bool> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, bool& ()>::destroy()
art::WellKnownClasses::org_apache_harmony_dalvik_ddmc_Chunk_offset
non-virtual thunk to art::gc::space::ContinuousMemMapAllocSpace::~ContinuousMemMapAllocSpace()
art::ElfFileImpl<ElfTypes32>::GetRelaNum(Elf32_Shdr&) const
art::Trace::Start(char const*, int, unsigned int, int, art::Trace::TraceOutputMode, art::Trace::TraceMode, int)
art::gc::space::BumpPointerSpace::AssertAllThreadLocalBuffersAreRevoked()
art::CheckJNI::CallNonvirtualDoubleMethodA(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, jvalue*)
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, unsigned int>, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned int>, void*>*, int>, bool> std::__1::__tree<std::__1::__value_type<unsigned int, unsigned int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned int>, std::__1::less<unsigned int>, true>, art::ScopedArenaAllocatorAdapter<std::__1::__value_type<unsigned int, unsigned int> > >::__emplace_unique_key_args<unsigned int, unsigned int const&, unsigned int>(unsigned int const&, unsigned int const&, unsigned int&&)
art::JDWP::Request::ReadArrayId()
std::__1::__tree<std::__1::__value_type<art::ArtMethod*, void const*>, std::__1::__map_value_compare<art::ArtMethod*, std::__1::__value_type<art::ArtMethod*, void const*>, std::__1::less<art::ArtMethod*>, true>, std::__1::allocator<std::__1::__value_type<art::ArtMethod*, void const*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<art::ArtMethod*, void const*>, void*>*)
art::mirror::EmulatedStackFrame::SetReturnValue(art::Thread*, art::JValue const&)
_tr_flush_block
art::ti::Agent::operator=(art::ti::Agent&&)
mspace_mallopt
void std::__1::__invoke_void_return_wrapper<void>::__call<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::IntoKey(art::RuntimeArgumentMapKey<bool> const&)::{lambda(bool&)#1}&, bool&>(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::IntoKey(art::RuntimeArgumentMapKey<bool> const&)::{lambda(bool&)#1}&, bool&)
art::ReaderWriterMutex::WakeupToRespondToEmptyCheckpoint()
art::SignalCatcher::~SignalCatcher()
art::Arena::Arena()
art::WellKnownClasses::libcore_reflect_AnnotationMember
non-virtual thunk to art::gc::space::MemoryToolLargeObjectMapSpace::Free(art::Thread*, art::mirror::Object*)
art::mirror::String::CompareTo(art::ObjPtr<art::mirror::String>)
art::RuntimeArgumentMap::ProfileClock
art::GetCalleeSaveMethodCaller(art::ArtMethod**, art::CalleeSaveType, bool)
art::x86::X86Context::FillCalleeSaves(unsigned char*, art::QuickMethodFrameInfo const&)
non-virtual thunk to art::gc::space::LargeObjectMapSpace::~LargeObjectMapSpace()
artThrowClassCastExceptionForObject
vtable for std::__1::__function::__func<android::base::LogdLogger, std::__1::allocator<android::base::LogdLogger>, void (android::base::LogId, android::base::LogSeverity, char const*, char const*, unsigned int, char const*)>
art::ElfFile::Open(unix_file::FdFile*, bool, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, unsigned char*)
art::gc::Heap::WaitForGcToComplete(art::gc::GcCause, art::Thread*)
art::Trace::FlushBuf()
art::X86InstructionSetFeatures::~X86InstructionSetFeatures()
art::gc::collector::ConcurrentCopying::ExpandGcMarkStack()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1u> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1u>& ()>::~__func()
art::JNI::FatalError(_JNIEnv*, char const*)
std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int), std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)> > >::~unordered_map()
art::ClassLoaderContext::ClassLoaderContext(bool)
art::CheckJNI::CallStaticVoidMethod(_JNIEnv*, _jclass*, _jmethodID*, ...)
art::ArtMethod::CheckIncompatibleClassChange(art::InvokeType)
art::Locks::alloc_tracker_lock_
art::CatchLocationFinder::VisitFrame()
std::__1::vector<art::verifier::RegType const*, art::ScopedArenaAllocatorAdapter<art::verifier::RegType const*> >::reserve(unsigned int)
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::imbue(std::__1::locale const&)
non-virtual thunk to art::gc::collector::MarkCompact::~MarkCompact()
void std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >::__push_back_slow_path<unsigned long long>(unsigned long long&&)
art::FaultManager::Release()
art::ScopedSuspendAll::ScopedSuspendAll(char const*, bool)
art::gc::space::LargeObjectSpace::RevokeThreadLocalBuffers(art::Thread*)
guard variable for art::mirror::PrimitiveArray<int>::array_class_
art::JNI::CallStaticDoubleMethod(_JNIEnv*, _jclass*, _jmethodID*, ...)
art::DexFile::kDexMagic
art::gc::collector::ConcurrentCopying::IsOnAllocStack(art::mirror::Object*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::Memory<1u>&)#1}, std::__1::allocator<{lambda(art::Memory<1u>&)#1}>, void (art::Memory<1u>&)>::operator()(art::Memory<1u>&)
art::gc::collector::StickyMarkSweep::Sweep(bool)
art::ProfileCompilationInfo::ReadClasses(art::ProfileCompilationInfo::SafeBuffer&, art::ProfileCompilationInfo::ProfileLineHeader const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::OatFile::DexEnd() const
JNI_CreateJavaVM
art::JNI::CallStaticCharMethodV(_JNIEnv*, _jclass*, _jmethodID*, char*)
art::MemMap::DumpMapsLocked(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bool)
art::verifier::RegType::CanAccess(art::verifier::RegType const&) const
art::gc::Heap::FindSpaceFromAddress(void const*) const
art::TokenRange::Split(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::initializer_list<char>)
art::instrumentation::Instrumentation::InstallStubsForClass(art::mirror::Class*)
void std::__1::vector<art::ArtMethod*, art::ScopedArenaAllocatorAdapter<art::ArtMethod*> >::__push_back_slow_path<art::ArtMethod* const&>(art::ArtMethod* const&)
art::ClassLoaderContext::ClassLoaderContext()
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::DexLayoutSections::SectionType const&)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::IntoKey(art::RuntimeArgumentMapKey<double> const&)
art::SetInterpreterEntrypointArtMethodVisitor::~SetInterpreterEntrypointArtMethodVisitor()
art::ParseStringList<(char)58>& art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination::GetOrCreateFromMap<art::ParseStringList<(char)58> >(art::RuntimeArgumentMapKey<art::ParseStringList<(char)58> > const&)
art::gc::space::RosAllocSpace::AllocationSize(art::mirror::Object*, unsigned int*)
art::OatFileAssistant::GetBestInfo()
art::Dbg::GetModifiers(unsigned long long, art::JDWP::ExpandBuf*)
art::detail::CmdlineParseArgument<art::Unit>::GetTypeName() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::IntoKey(art::RuntimeArgumentMapKey<double> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, double& ()>::destroy()
artInvokePolymorphic
art::CheckJNI::NewStringUTF(_JNIEnv*, char const*)
art::gc::AllocRecordObjectMap::VisitRoots(art::RootVisitor*)
std::__1::function<void (art::XGcOption&)>::swap(std::__1::function<void (art::XGcOption&)>&)
art::ElfFileImpl<ElfTypes64>::FixupSectionHeaders(unsigned long long)
art::verifier::Cat2Type::Cat2Type(art::mirror::Class*, art::StringPiece const&, unsigned short)
art::ProfileCompilationInfo::DexPcData::AddClass(unsigned short, art::dex::TypeIndex const&)
art::detail::CmdlineParseArgument<art::ParseStringList<(char)58> >::ParseArgumentSingle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__shared_ptr_emplace<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__on_zero_shared()
art::Locks::heap_bitmap_lock_
art::gc::TaskProcessor::TaskProcessor()
art::Runtime::IsAsyncDeoptimizeable(unsigned int) const
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)3, false, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::CheckJNI::CallMethodA(char const*, _JNIEnv*, _jobject*, _jclass*, _jmethodID*, jvalue*, art::Primitive::Type, art::InvokeType)
art::gc::accounting::CardTable::kCardSize
std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void*>, std::__1::__tree_node_destructor<std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void*> > > > std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >::__construct_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&&)
art::Thread::Init(art::ThreadList*, art::JavaVMExt*, art::JNIEnvExt*)
non-virtual thunk to art::gc::space::RosAllocSpace::AllocThreadUnsafe(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::jit::ScopedCodeCacheWrite::~ScopedCodeCacheWrite()
art::OatHeader::SetImageFileLocationOatDataBegin(unsigned int)
art::ParsedOptions::Abort()
art::gc::space::BumpPointerSpace::Free(art::Thread*, art::mirror::Object*)
art::ThrowNegativeArraySizeException(char const*)
art::MonitorDeflateVisitor::~MonitorDeflateVisitor()
vtable for art::VariantMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >
art::MemMap::MapFileAtAddress(unsigned char*, unsigned int, int, int, int, long, bool, bool, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
std::__1::__tree<std::__1::__value_type<art::gc::space::Space*, art::gc::accounting::ModUnionTable*>, std::__1::__map_value_compare<art::gc::space::Space*, std::__1::__value_type<art::gc::space::Space*, art::gc::accounting::ModUnionTable*>, std::__1::less<art::gc::space::Space*>, true>, std::__1::allocator<std::__1::__value_type<art::gc::space::Space*, art::gc::accounting::ModUnionTable*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<art::gc::space::Space*, art::gc::accounting::ModUnionTable*>, void*>*)
void art::gc::space::ImageSpaceLoader::FixupObjectVisitor::UpdatePointerArrayContents<art::gc::space::ImageSpaceLoader::FixupObjectAdapter>(art::mirror::PointerArray*, art::gc::space::ImageSpaceLoader::FixupObjectAdapter const&) const
art::gc::Heap::RequestCollectorTransition(art::gc::CollectorType, unsigned long long)
art::ThrowIncompatibleClassChangeErrorClassForInterfaceSuper(art::ArtMethod*, art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::Object>, art::ArtMethod*)
art::JDWP::JdwpSocketState::ProcessIncoming()
art::DexFile::Open(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, std::__1::unique_ptr<art::MemMap, std::__1::default_delete<art::MemMap> >, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::detail::VariantMapKeyCounterAllocator::AllocateCounter()::counter
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::IntoKey(art::RuntimeArgumentMapKey<unsigned int> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, unsigned int& ()>::~__func()
art::Thread::SetThreadName(char const*)
ProcessWriter::~ProcessWriter()
art::JDWP::Request::ReadObjectId(char const*)
void std::__1::__tree<std::__1::__value_type<unsigned int, unsigned int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned int>, std::__1::less<unsigned int>, true>, art::ScopedArenaAllocatorAdapter<std::__1::__value_type<unsigned int, unsigned int> > >::__assign_multi<std::__1::__tree_const_iterator<std::__1::__value_type<unsigned int, unsigned int>, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned int>, void*>*, int> >(std::__1::__tree_const_iterator<std::__1::__value_type<unsigned int, unsigned int>, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned int>, void*>*, int>, std::__1::__tree_const_iterator<std::__1::__value_type<unsigned int, unsigned int>, std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned int>, void*>*, int>)
art::gc::Heap::CollectorTransitionTask::~CollectorTransitionTask()
art::gc::space::RegionSpace::Region::UnfreeLarge(art::gc::space::RegionSpace*, unsigned int)
art::gc::collector::MarkSweep::PausePhase()
art::gc::space::MemoryToolMallocSpace<art::gc::space::DlMallocSpace, 8u, true, false>::RegisterRecentFree(art::mirror::Object*)
art::OatHeader::GetOatDexFilesOffset() const
android::base::SetMinimumLogSeverity(android::base::LogSeverity)
void art::mirror::VisitDexCachePairs<art::mirror::Class, (art::ReadBarrierOption)0, art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor>(std::__1::atomic<art::mirror::DexCachePair<art::mirror::Class> >*, unsigned int, art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor const&)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::BackgroundGcOption& ()>
art::DumpCheckpoint::WaitForThreadsToRunThroughCheckpoint(unsigned int)
art::StackVisitor::~StackVisitor()
art::Dbg::ExecuteMethodWithoutPendingException(art::ScopedObjectAccess&, art::DebugInvokeReq*)
art::gc::accounting::SpaceBitmap<4096u>::SetHeapSize(unsigned int)
vtable for art::RuntimeArgumentMapKey<int (*)(__sFILE*, char const*, char*)>
art::detail::CmdlineParseArgument<art::verifier::VerifyMode>::ParseArgument(art::TokenRange const&, unsigned int*)
art::TypeLookupTable::~TypeLookupTable()
art::PrettyArguments(char const*)
vtable for art::gc::space::ImageSpaceLoader::FixupArtMethodVisitor
art::ClassLinker::InitializeDefaultInterfaceRecursive(art::Thread*, art::Handle<art::mirror::Class>, bool, bool)
std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::ProfileCompilationInfo*>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::ProfileCompilationInfo*>, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::ProfileCompilationInfo*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::ProfileCompilationInfo*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::ProfileCompilationInfo*> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
non-virtual thunk to art::gc::space::BumpPointerSpace::GetBytesAllocated()
_ZN3art6detail11ToStringAnyINS_25MillisecondsToNanosecondsEEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKT_PNS3_9enable_ifIXsr25SupportsInsertionOperatorISA_EE5valueEvE4typeE
art::JavaVMExt::JniAbortV(char const*, char const*, char*)
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)1, false, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
_ZNSt3__16vectorINS_4pairIPKcN3art8verifier10VerifyModeEEENS_9allocatorIS7_EEE6assignIPKS7_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS7_NS_15iterator_traitsISF_E9referenceEEE5valueEvE4typeESF_SF_
art::LinearAlloc::LinearAlloc(art::ArenaPool*)
std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()
art::instrumentation::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::instrumentation::Instrumentation::InstrumentationEvent const&)
art::mirror::Throwable::IsCheckedException()
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)1, false, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
std::__1::__shared_ptr_emplace<art::Memory<1u>, std::__1::allocator<art::Memory<1u> > >::__on_zero_shared()
non-virtual thunk to art::gc::collector::MarkSweep::CheckpointMarkThreadRoots::~CheckpointMarkThreadRoots()
vtable for art::RuntimeArgumentMapKey<art::Memory<1024u> >
art::mirror::Reference::SetClass(art::ObjPtr<art::mirror::Class>)
art::Dbg::DbgThreadLifecycleCallback::ThreadDeath(art::Thread*)
art::Thread::IsAotCompiler()
artSetBooleanInstanceFromCode
MterpInvokeInterfaceRange
art::FormatDuration(unsigned long long, art::TimeUnit, unsigned int)
art::gc::space::Space::AsZygoteSpace()
vtable for art::MonitorExitVisitor
void std::__1::vector<art::mirror::HeapReference<art::mirror::Object>*, std::__1::allocator<art::mirror::HeapReference<art::mirror::Object>*> >::__push_back_slow_path<art::mirror::HeapReference<art::mirror::Object>* const&>(art::mirror::HeapReference<art::mirror::Object>* const&)
art::OatFileAssistant::OatFileAssistant(char const*, art::InstructionSet, bool)
art::gc::space::Space::~Space()
std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::pair(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)
art::Mips64InstructionSetFeatures::FromHwcap()
art::JNI::ReleaseBooleanArrayElements(_JNIEnv*, _jbooleanArray*, unsigned char*, int)
bool art::verifier::MethodVerifier::VerifyInstructions<false>()
art::interpreter::UnstartedRuntime::UnstartedVmClassLoaderFindLoadedClass(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::JDWP::expandBufAdd2BE(art::JDWP::ExpandBuf*, unsigned short)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::TraceClockSource&)#1}, std::__1::allocator<{lambda(art::TraceClockSource&)#1}>, void (art::TraceClockSource&)>::operator()(art::TraceClockSource&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::Memory<1024u>&)#1}, std::__1::allocator<{lambda(art::Memory<1024u>&)#1}>, void (art::Memory<1024u>&)>::~__func()
non-virtual thunk to art::gc::space::MemoryToolMallocSpace<art::gc::space::DlMallocSpace, 8u, true, false>::Alloc(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::jit::JitCompileTask::Run(art::Thread*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::IntoKey(art::RuntimeArgumentMapKey<art::Unit> const&)
art::NanoSleep(unsigned long long)
art::Runtime::RecordWriteFieldShort(art::mirror::Object*, art::MemberOffset, short, bool) const
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::seekoff(long long, std::__1::ios_base::seekdir, unsigned int)
art::Thread::Attach(char const*, bool, _jobject*, bool)
art::gc::Heap::DisableMovingGc()
art::CatchHandlerIterator::Init(unsigned char const*)
art::ElfFileImpl<ElfTypes32>::IsSymbolSectionType(unsigned int)
art::IndirectReferenceTable::EnsureFreeCapacity(unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::JavaVMExt::DecodeWeakGlobal(art::Thread*, void*)
art::ClassLinker::VisitClassesInternal(art::ClassVisitor*)
art::Instruction::GetTargetOffset() const
ProcessWriter::Append(unsigned char*, unsigned int)
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char>, void*>*, int>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const>, true>, art::ArenaAllocatorAdapter<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char> > >::__emplace_unique_impl<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned char const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned char const&)
art::ArenaPool::GetBytesAllocated() const
art::MemMap::Protect(int)
art::ElfFileImpl<ElfTypes32>::GetDynamic(unsigned int) const
art::gc::Heap::VerifyObjectBody(art::ObjPtr<art::mirror::Object>)
non-virtual thunk to art::gc::space::MemoryToolMallocSpace<art::gc::space::DlMallocSpace, 8u, true, false>::~MemoryToolMallocSpace()
std::__1::__shared_ptr_emplace<art::ExperimentalFlags, std::__1::allocator<art::ExperimentalFlags> >::__on_zero_shared()
art::gc::space::RegionSpace::CanMoveObjects() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ProfileSaverOptions& ()>::__clone() const
art::JDWP::JdwpNetStateBase::HaveFullPacket()
art::verifier::MethodVerifier::VerifyInvocationArgsUnresolvedMethod(art::Instruction const*, art::verifier::MethodType, bool)
guard variable for art::mirror::PrimitiveArray<unsigned char>::array_class_
non-virtual thunk to art::gc::space::ZygoteSpace::GetBytesAllocated()
art::detail::CmdlineParserArgumentInfo<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::~CmdlineParserArgumentInfo()
std::__1::__split_buffer<art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> >, std::__1::allocator<art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> > >&>::push_back(art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> >&&)
art::Runtime::VisitImageRoots(art::RootVisitor*)
art::ClassLinker::FindVirtualMethodHolderVisitor::operator()(art::ObjPtr<art::mirror::Class>)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}, std::__1::allocator<{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}>, void (std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)>::__clone() const
art::LookupClassesVisitor::Visit(art::ObjPtr<art::mirror::ClassLoader>)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}, std::__1::allocator<{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}>, void (std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)>
art::detail::CmdlineParseArgument<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::ParseArgument(art::TokenRange const&, unsigned int*)
art::JNI::GetFloatArrayRegion(_JNIEnv*, _jfloatArray*, int, int, float*)
art::JDWP::JdwpState::FindMatchingEventsLocked(art::JDWP::JdwpEventKind, art::JDWP::ModBasket const&, std::__1::vector<art::JDWP::JdwpEvent*, std::__1::allocator<art::JDWP::JdwpEvent*> >*)
MterpInvokeInterface
vtable for art::gc::collector::PartialMarkSweep
art::CheckJNI::DeleteWeakGlobalRef(_JNIEnv*, _jobject*)
art::JNI::GetStaticFieldID(_JNIEnv*, _jclass*, char const*, char const*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions> art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::CreateTypedBuilder<art::ProfileSaverOptions>()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(double&)#1}, std::__1::allocator<{lambda(double&)#1}>, void (double&)>::__clone() const
unsigned int std::__1::__sort3<std::__1::__less<std::__1::tuple<unsigned int, unsigned int, bool>, std::__1::tuple<unsigned int, unsigned int, bool> >&, std::__1::tuple<unsigned int, unsigned int, bool>*>(std::__1::tuple<unsigned int, unsigned int, bool>*, std::__1::tuple<unsigned int, unsigned int, bool>*, std::__1::tuple<unsigned int, unsigned int, bool>*, std::__1::__less<std::__1::tuple<unsigned int, unsigned int, bool>, std::__1::tuple<unsigned int, unsigned int, bool> >&)
art::ClassLinker::LookupString(art::DexFile const&, art::dex::StringIndex, art::ObjPtr<art::mirror::DexCache>)
art::ClassLinker::SetIMTRef(art::ArtMethod*, art::ArtMethod*, art::ArtMethod*, bool*, art::ArtMethod**)
artAllocArrayFromCodeResolvedTLABInstrumented
artGetObjInstanceFromCode
deflateReset
void art::mirror::Class::GetAccessFlagsDCheck<(art::VerifyObjectFlags)7>()
art::JNI::ExceptionCheck(_JNIEnv*)
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)1, true, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
bool std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::tuple<unsigned int, unsigned int, bool>, std::__1::tuple<unsigned int, unsigned int, bool> >&, std::__1::tuple<unsigned int, unsigned int, bool>*>(std::__1::tuple<unsigned int, unsigned int, bool>*, std::__1::tuple<unsigned int, unsigned int, bool>*, std::__1::__less<std::__1::tuple<unsigned int, unsigned int, bool>, std::__1::tuple<unsigned int, unsigned int, bool> >&)
art::ArtMethod* art::FindMethodFromCode<(art::InvokeType)4, true>(unsigned int, art::ObjPtr<art::mirror::Object>*, art::ArtMethod*, art::Thread*)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Instruction::VerifyFlag const&)
art::ArmInstructionSetFeatures::FromHwcap()
art::Dbg::DdmSendHeapInfo(art::Dbg::HpifWhen)
art::detail::CmdlineParseArgument<art::Unit>::~CmdlineParseArgument()
art::verifier::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::verifier::HardFailLogMode const&)
art::Dbg::SetJdwpAllowed(bool)
art::ArtMethod::FindObsoleteDexClassDefIndex()
art::ArtMethod::GetObsoleteDexCache()
std::__1::__split_buffer<art::LockWord*, std::__1::allocator<art::LockWord*> >::push_back(art::LockWord*&&)
std::__1::__wrap_iter<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*> std::__1::remove_if<std::__1::__wrap_iter<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*>, art::TokenRange::RemoveToken(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)#1}>(art::TokenRange::RemoveToken(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)#1}, art::TokenRange::RemoveToken(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)#1}, art::TokenRange::RemoveToken(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)#1})
art::mirror::String::Intern()
art::gc::collector::ConcurrentCopying::FinishPhase()
art::Runtime::BroadcastForNewSystemWeaks(bool)
art::mirror::EmulatedStackFrame::GetReturnValue(art::Thread*, art::JValue*)
art::OatFileAssistant::ImageInfo::GetRuntimeImageInfo(art::InstructionSet, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
FindEntry(void*, ZipString const&, ZipEntry*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::TraceClockSource& ()>::__clone(std::__1::__function::__base<art::TraceClockSource&>*) const
unix_file::FdFile::FdFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, unsigned short, bool)
vtable for art::verifier::PreciseConstLoType
art::JDWP::Request::CheckConsumed()
art::InstructionSetFeatures::AsMipsInstructionSetFeatures() const
art::ArtMethod::IsAnnotatedWithFastNative()
art::CheckJNI::CallStaticObjectMethodV(_JNIEnv*, _jclass*, _jmethodID*, char*)
art::JNI::CallNonvirtualBooleanMethodA(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, jvalue*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ProfileSaverOptions& ()>::destroy_deallocate()
art::gc::space::FreeListSpace::~FreeListSpace()
art::Runtime::DumpDeoptimizations(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
unsigned int art::gc::accounting::CardTable::Scan<false, art::gc::collector::ConcurrentCopying::GrayImmuneObjectVisitor<false> >(art::gc::accounting::SpaceBitmap<8u>*, unsigned char*, unsigned char*, art::gc::collector::ConcurrentCopying::GrayImmuneObjectVisitor<false> const&, unsigned char)
art::MonitorList::Size()
art::ClassLinker::ResolveMethodHandle(unsigned int, art::ArtMethod*)
art::mirror::String::AllocFromModifiedUtf8(art::Thread*, char const*)
art::Transaction::RecordWriteArray(art::mirror::Array*, unsigned int, unsigned long long)
art::StackVisitor::IsAccessibleFPR(unsigned int) const
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::DexRegisterLocation::Kind const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >& ()>::__clone() const
vtable for std::__1::__shared_ptr_emplace<art::Memory<1024u>, std::__1::allocator<art::Memory<1024u> > >
art::DlOpenOatFile::PreLoad()
art::detail::CmdlineParserArgumentInfo<bool>::CompleteArgument()
art::Thread::ClearDebugInvokeReq()
art::SharedLibrary::FindSymbolWithoutNativeBridge(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__shared_ptr_pointer<art::RuntimeArgumentMap*, std::__1::default_delete<art::RuntimeArgumentMap>, std::__1::allocator<art::RuntimeArgumentMap> >::__on_zero_shared_weak()
art::RuntimeCallbacks::AddThreadLifecycleCallback(art::ThreadLifecycleCallback*)
art::DexFileVerifier::CheckIndex(unsigned int, unsigned int, char const*)
art::JDWP::DescribeField(unsigned long long const&)
art::CmdlineType<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::ParseAndAppend(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)
art::Transaction::ResolveStringLog::Undo() const
art::ClassLinker::FindDefaultMethodImplementation(art::Thread*, art::ArtMethod*, art::Handle<art::mirror::Class>, art::ArtMethod**) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::IntoKey(art::RuntimeArgumentMapKey<bool> const&)::{lambda(bool&)#1}, std::__1::allocator<{lambda(bool&)#1}>, void (bool&)>::operator()(bool&)
art::verifier::VerifierDeps::VerifierDeps(std::__1::vector<art::DexFile const*, std::__1::allocator<art::DexFile const*> > const&, art::ArrayRef<unsigned char const>)
art::mirror::Throwable::SetStackState(art::ObjPtr<art::mirror::Object>)
art::RuntimeArgumentMap::HSpaceCompactForOOMMinIntervalsMs
vtable for art::VariantMapKey<std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > >*>
__jit_debug_register_code
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::LogVerbosity&)#1}, std::__1::allocator<{lambda(art::LogVerbosity&)#1}>, void (art::LogVerbosity&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::LogVerbosity&)#1}> >*) const
MterpInvokeSuper
art::ProfileCompilationInfo::ReadProfileLineHeaderElements(art::ProfileCompilationInfo::SafeBuffer&, unsigned short*, art::ProfileCompilationInfo::ProfileLineHeader*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::ElfFileImpl<ElfTypes32>::Open(unix_file::FdFile*, bool, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, unsigned char*)
art::Mips64InstructionSetFeatures::GetFeatureString() const
art::RuntimeArgumentMapKey<art::ExperimentalFlags>::~RuntimeArgumentMapKey()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::XGcOption> const&)::{lambda(art::XGcOption&)#1}, std::__1::allocator<{lambda(art::XGcOption&)#1}>, void (art::XGcOption&)>::destroy_deallocate()
non-virtual thunk to art::gc::collector::GarbageCollector::~GarbageCollector()
art::ClassLinker::AllocClass(art::Thread*, art::ObjPtr<art::mirror::Class>, unsigned int)
void std::__1::vector<art::mirror::Object*, std::__1::allocator<art::mirror::Object*> >::__push_back_slow_path<art::mirror::Object*>(art::mirror::Object*&&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)::{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}, std::__1::allocator<{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}>, void (std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)>::operator()(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)
vtable for art::verifier::DoubleLoType
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const>, true>, art::ArenaAllocatorAdapter<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char>, void*>*)
void art::ClassTable::VisitRoots<art::gc::VerifyReferenceCardVisitor>(art::gc::VerifyReferenceCardVisitor const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::XGcOption> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::XGcOption& ()>::__clone() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1024u> > const&)::{lambda(art::Memory<1024u>&)#1}, std::__1::allocator<{lambda(art::Memory<1024u>&)#1}>, void (art::Memory<1024u>&)>::~__func()
art::gc::allocator::RosAlloc::Footprint()
art::VariantMapKey<art::ExperimentalFlags>::~VariantMapKey()
art::register_java_lang_reflect_Proxy(_JNIEnv*)
art::detail::CmdlineParseArgument<double>::GetNumTokens() const
art::verifier::ReferenceType::GetAssignmentTypeImpl() const
art::QuasiAtomic::gSwapMutexes
art::WellKnownClasses::java_util_Collections_EMPTY_LIST
art::ElfFileImpl<ElfTypes64>::End() const
art::verifier::VerifierDeps::VerifyFields(art::Handle<art::mirror::ClassLoader>, art::DexFile const&, std::__1::set<art::verifier::VerifierDeps::FieldResolution, std::__1::less<art::verifier::VerifierDeps::FieldResolution>, std::__1::allocator<art::verifier::VerifierDeps::FieldResolution> > const&, art::Thread*) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ParseStringList<(char)58>& ()>::__clone(std::__1::__function::__base<art::ParseStringList<(char)58>&>*) const
art::gc::collector::ConcurrentCopying::GetLiveStack()
long long* art::JNI::GetPrimitiveArray<_jlongArray*, long long, art::mirror::PrimitiveArray<long long> >(_JNIEnv*, _jlongArray*, unsigned char*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::IntoKey(art::RuntimeArgumentMapKey<art::ExperimentalFlags> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ExperimentalFlags& ()>::~__func()
art::QuickArgumentVisitor::GetInvokeType(art::ArtMethod**, art::InvokeType*, unsigned int*)
art::Dbg::GetClassLoader(unsigned long long, art::JDWP::ExpandBuf*)
art::WellKnownClasses::libcore_reflect_AnnotationFactory_createAnnotation
std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >& art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination::GetOrCreateFromMap<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::IntoKey(art::RuntimeArgumentMapKey<art::verifier::VerifyMode> const&)::{lambda(art::verifier::VerifyMode&)#1}, std::__1::allocator<{lambda(art::verifier::VerifyMode&)#1}>, void (art::verifier::VerifyMode&)>
art::verifier::RegType::IsUnresolvedMergedReference() const
art::CheckJNI::GetPrimitiveArrayCritical(_JNIEnv*, _jarray*, unsigned char*)
art::DumpCheckpoint::Run(art::Thread*)
android::base::SetAborter(std::__1::function<void (char const*)>&&)
art::gc::accounting::MemoryRangeBitmap<1024u>::CreateFromMemMap(art::MemMap*, unsigned int, unsigned int)
vtable for art::Arm64InstructionSetFeatures
art::jit::JitCodeCache::FreeAllMethodHeaders(std::__1::unordered_set<art::OatQuickMethodHeader*, std::__1::hash<art::OatQuickMethodHeader*>, std::__1::equal_to<art::OatQuickMethodHeader*>, std::__1::allocator<art::OatQuickMethodHeader*> > const&)
art::X86InstructionSetFeatures::FromVariant(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, bool)
std::__1::__hash_table<art::ObjPtr<art::mirror::Class>, art::HashObjPtr, std::__1::equal_to<art::ObjPtr<art::mirror::Class> >, std::__1::allocator<art::ObjPtr<art::mirror::Class> > >::rehash(unsigned int)
artAllocObjectFromCodeWithChecksRegionInstrumented
art::ThrowNoSuchMethodError(art::InvokeType, art::ObjPtr<art::mirror::Class>, art::StringPiece const&, art::Signature const&)
art::DexFile::GetMethodHandle(unsigned int) const
art::mirror::PrimitiveArray<int>::GetData() const
Next(void*, ZipEntry*, ZipString*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ExperimentalFlags& ()>::~__func()
art::verifier::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::verifier::VerifyError const&)
art::ClassLinker::LookupClass(art::Thread*, char const*, unsigned int, art::ObjPtr<art::mirror::ClassLoader>)
artSet8InstanceFromCompiledCode
art::verifier::DoubleHiType::GetAssignmentTypeImpl() const
std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__append(unsigned int)
art::Transaction::GetAbortMessage()
art::Thread::HasTlab() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>::destroy()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > const&)::{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}, std::__1::allocator<{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}>, void (std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)>::operator()(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)
vtable for std::__1::__shared_ptr_emplace<art::InstructionSet, std::__1::allocator<art::InstructionSet> >
non-virtual thunk to art::gc::space::LargeObjectMapSpace::Alloc(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
bool art::interpreter::DoFieldGet<(art::FindFieldType)2, (art::Primitive::Type)5, true>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::gc::accounting::ModUnionTableReferenceCache::~ModUnionTableReferenceCache()
art::IndirectReferenceTable::Remove(art::IRTSegmentState, void*)
art::jit::JitCodeCache::AllocateData(unsigned int)
art::ImageHeader::ImageHeader(unsigned int, unsigned int, art::ImageSection*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool, bool, art::ImageHeader::StorageMode, unsigned int)
art::gc::allocator::RosAlloc::RosAlloc(void*, unsigned int, unsigned int, art::gc::allocator::RosAlloc::PageReleaseMode, bool, unsigned int)
art::gc::accounting::MemoryRangeBitmap<1024u>::HasAddress(unsigned int) const
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)5, true, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::Memory<1024u>&)#1}, std::__1::allocator<{lambda(art::Memory<1024u>&)#1}>, void (art::Memory<1024u>&)>::destroy()
artAllocArrayFromCodeResolvedBumpPointerInstrumented
art::mirror::PrimitiveArray<double>::SetArrayClass(art::ObjPtr<art::mirror::Class>)
non-virtual thunk to art::gc::space::LargeObjectSpace::RevokeAllThreadLocalBuffers()
art::ProfileCompilationInfo::ReadProfileLineHeader(art::ProfileCompilationInfo::SafeBuffer&, art::ProfileCompilationInfo::ProfileLineHeader*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::ElfFileImpl<ElfTypes64>::GetSectionNameStringSection() const
art::mirror::PrimitiveArray<unsigned short>::Memmove(int, art::ObjPtr<art::mirror::PrimitiveArray<unsigned short> >, int, int)
art::detail::CmdlineParseArgument<art::ProfileSaverOptions>::GetNumTokens() const
art::MemMap::MapAnonymous(char const*, unsigned char*, unsigned int, int, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, bool)
art::JDWP::expandBufGetLength(art::JDWP::ExpandBuf*)
art::InternTable::InternTable()
art::Locks::InitConditions()
art::annotations::GetEnclosingClass(art::Handle<art::mirror::Class>)
art::ArtMethod::CopyFrom(art::ArtMethod*, art::PointerSize)
art::jit::Jit::jit_types_loaded_
art::detail::CmdlineParseArgument<art::ProfileSaverOptions>::ParseArgument(art::TokenRange const&, unsigned int*)
art::detail::CmdlineParseArgument<art::Unit>::ParseArgument(art::TokenRange const&, unsigned int*)
vtable for art::DumpCheckpoint
inflateEnd
art::gc::accounting::CardTable::CheckAddrIsInCardTable(unsigned char const*) const
art::x86::X86Context::Reset()
art::mirror::ObjectArray<art::mirror::Object>::Alloc(art::Thread*, art::ObjPtr<art::mirror::Class>, int, art::gc::AllocatorType)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoKey(art::RuntimeArgumentMapKey<art::Unit> const&)
art::MutatorMutex::IsMutatorMutex() const
std::__1::__tree<std::__1::__value_type<unsigned int, unsigned char*>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned char*>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned char*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned char*>, void*>*)
art::ArtMethod::GetSingleImplementation(art::PointerSize)
vtable for art::verifier::UninitializedReferenceType
art::Dbg::GetDebugThread()
non-virtual thunk to art::gc::space::RegionSpace::~RegionSpace()
art::CheckJNI::FromReflectedField(_JNIEnv*, _jobject*)
art::jit::JitCompileTask::Finalize()
art::Dbg::IsForcedInterpreterNeededForResolutionImpl(art::Thread*, art::ArtMethod*)
art::Monitor::SetObject(art::mirror::Object*)
art::Dbg::DbgClassLoadCallback::~DbgClassLoadCallback()
art::JNI::SetBooleanField(_JNIEnv*, _jobject*, _jfieldID*, unsigned char)
art::GetRuntimeShutdownNativeInterface()
art::ElfFileImpl<ElfTypes32>::End() const
art::gc::space::MemoryToolMallocSpace<art::gc::space::DlMallocSpace, 8u, true, false>::~MemoryToolMallocSpace()
art::verifier::UnresolvedUninitializedThisRefType::Dump() const
art::Thread::SetTlab(unsigned char*, unsigned char*, unsigned char*)
art::Dbg::GetStaticFieldBasicTag(unsigned long long)
art::InternTable::InternWeak(art::ObjPtr<art::mirror::String>)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoKey(art::RuntimeArgumentMapKey<art::Unit> const&)::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>::~__func()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::Memory<1u>&)#1}, std::__1::allocator<{lambda(art::Memory<1u>&)#1}>, void (art::Memory<1u>&)>::destroy_deallocate()
art::OatHeader::SetQuickToInterpreterBridgeOffset(unsigned int)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::StackVisitor::CountTransitions const&)
non-virtual thunk to art::gc::space::RegionSpace::LogFragmentationAllocFailure(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, unsigned int)
std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::ReleaseOrDefault<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)
art::ElfFileImpl<ElfTypes32>::GetHashBucket(unsigned int, bool*) const
art::gc::ReferenceQueue::ForwardSoftReferences(art::MarkObjectVisitor*)
art::gc::space::AllocSpace::AllocThreadUnsafe(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::gc::allocator::RosAlloc::numOfSlots
art::ReferenceMapVisitor<art::RootCallbackVisitor, true>::~ReferenceMapVisitor()
art::mirror::String::GetUtfLength()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::IntoKey(art::RuntimeArgumentMapKey<art::TraceClockSource> const&)::{lambda(art::TraceClockSource&)#1}, std::__1::allocator<{lambda(art::TraceClockSource&)#1}>, void (art::TraceClockSource&)>::~__func()
art::gc::space::RosAllocSpace::Create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned int, unsigned int, unsigned char*, bool, bool)
art::Dbg::MatchInstance(unsigned long long, art::mirror::Object*)
art::ElfFileImpl<ElfTypes32>::FixupSectionHeaders(unsigned int)
art::InternTable::WeakSize() const
art::detail::CmdlineParseArgument<bool>::MaybeMatches(art::TokenRange const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoIgnore()::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>::operator()(art::Unit&)
art::VariantMapKey<void (*)(int)>::ValueDelete(void*) const
void art::JNI::ReleasePrimitiveArray<_jbyteArray*, signed char, art::mirror::PrimitiveArray<signed char> >(_JNIEnv*, _jbyteArray*, signed char*, int)
art::MallocArena::~MallocArena()
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)
artAllocObjectFromCodeResolvedBumpPointerInstrumented
art::ClassLinker::AllocArtFieldArray(art::Thread*, art::LinearAlloc*, unsigned int)
art::RuntimeCallbacks::ThreadStart(art::Thread*)
art::jit::Jit::~Jit()
art::Dbg::PostException(art::mirror::Throwable*)
art::DexFile::FindFieldId(art::DexFile::TypeId const&, art::DexFile::StringId const&, art::DexFile::TypeId const&) const
art::ElfFileImpl<ElfTypes64>::GetDynamic(unsigned int) const
art::gc::space::ImageSpace::CreateFromAppImage(char const*, art::OatFile const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::verifier::MethodVerifier::CheckNotMoveException(unsigned short const*, int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ExperimentalFlags& ()>::destroy()
art::instrumentation::Instrumentation::DeoptimizeEverything(char const*)
art::ElfFileImpl<ElfTypes32>::FixupDebugSections(unsigned int)
art::jit::Jit::LoadCompilerLibrary(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::detail::CmdlineParseArgument<art::LogVerbosity>::GetNumTokens() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >& ()>::~__func()
art::verifier::DoubleLoType::Destroy()
art::Dbg::GetObjectTag(unsigned long long, unsigned char*)
art::ElfFileImpl<ElfTypes64>::GetSymbolSectionStart(unsigned int) const
art::gc::collector::MarkCompact::ProcessReferences(art::Thread*)
art::ScopedCheck::CheckFieldID(_jfieldID*)
art::JNI::CallIntMethodV(_JNIEnv*, _jobject*, _jmethodID*, char*)
art::gc::Heap::RevokeRosAllocThreadLocalBuffers(art::Thread*)
art::JavaVMExt::VisitRoots(art::RootVisitor*)
art::ArgArray::ThrowIllegalPrimitiveArgumentException(char const*, char const*)
art::TrackedAllocators::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::SuspensionHandler::SuspensionHandler(art::FaultManager*)
art::verifier::PreciseReferenceType::PreciseReferenceType(art::mirror::Class*, art::StringPiece const&, unsigned short)
std::__1::__function::__func<android::base::LogdLogger, std::__1::allocator<android::base::LogdLogger>, void (android::base::LogId, android::base::LogSeverity, char const*, char const*, unsigned int, char const*)>::destroy()
art::OatQuickMethodHeader::~OatQuickMethodHeader()
android::base::WriteStringToFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned short, unsigned int, unsigned int, bool)
art::interpreter::UnstartedRuntime::UnstartedRuntimeAvailableProcessors(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::ExperimentalFlags& art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination::GetOrCreateFromMap<art::ExperimentalFlags>(art::RuntimeArgumentMapKey<art::ExperimentalFlags> const&)
art::InternTable::InternStrong(art::ObjPtr<art::mirror::String>)
art::gc::space::RegionSpace::RevokeThreadLocalBuffers(art::Thread*)
art::ArtMethod* art::FindMethodFromCode<(art::InvokeType)2, true>(unsigned int, art::ObjPtr<art::mirror::Object>*, art::ArtMethod*, art::Thread*)
vtable for art::verifier::Cat2Type
bool art::ClassLinker::CheckInvokeClassMismatch<true, art::ClassLinker::ResolveMethod<(art::ClassLinker::ResolveMode)1>(art::DexFile const&, unsigned int, art::Handle<art::mirror::DexCache>, art::Handle<art::mirror::ClassLoader>, art::ArtMethod*, art::InvokeType)::{lambda()#1}>(art::ObjPtr<art::mirror::DexCache>, art::InvokeType, art::ClassLinker::ResolveMethod<(art::ClassLinker::ResolveMode)1>(art::DexFile const&, unsigned int, art::Handle<art::mirror::DexCache>, art::Handle<art::mirror::ClassLoader>, art::ArtMethod*, art::InvokeType)::{lambda()#1})
art::TypeIndexInfo::TypeIndexInfo(art::DexFile const*)
std::__1::__shared_ptr_emplace<art::ExperimentalFlags, std::__1::allocator<art::ExperimentalFlags> >::~__shared_ptr_emplace()
art::ImTable::Populate(art::ArtMethod**, art::PointerSize)
art::mirror::PrimitiveArray<double>::GetWithoutChecks(int)
art::ImageHeader::VisitPackedArtMethods(art::ArtMethodVisitor*, unsigned char*, art::PointerSize) const
art::verifier::RegType::CheckInvariants() const
std::__1::__hash_table<_jclass*, std::__1::hash<_jclass*>, std::__1::equal_to<_jclass*>, std::__1::allocator<_jclass*> >::__rehash(unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::XGcOption> const&)::{lambda(art::XGcOption&)#1}, std::__1::allocator<{lambda(art::XGcOption&)#1}>, void (art::XGcOption&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::XGcOption&)#1}> >*) const
art::ProfileSaver::~ProfileSaver()
std::__1::function<void (art::Memory<1024u>&)>::swap(std::__1::function<void (art::Memory<1024u>&)>&)
art::SetQuickAllocEntryPoints_rosalloc(art::QuickEntryPoints*, bool)
ExtractToWriter(void*, ZipEntry*, Writer*)
_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6insertINS_11__wrap_iterIPS6_EEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISE_E9referenceEEE5valueESC_E4typeENSA_IPKS6_EESE_SE_
art::gc::space::LargeObjectMapSpace::~LargeObjectMapSpace()
art::JNI::GetIntArrayRegion(_JNIEnv*, _jintArray*, int, int, int*)
art::gc::space::DiscontinuousSpace::~DiscontinuousSpace()
art::JavaVMExt::~JavaVMExt()
art::ElfFileImpl<ElfTypes64>::GetHashChain(unsigned int, bool*) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>::destroy()
art::OatFileAssistant::OatFileInfo::Reset()
vtable for art::detail::CmdlineParseArgument<art::Memory<1024u> >
art::WellKnownClasses::java_lang_Thread_name
art::verifier::UninitializedType::GetAssignmentTypeImpl() const
artAllocArrayFromCodeResolvedRegion
art::Dbg::LastDebuggerActivity()
void art::ArtField::SetBoolean<false>(art::ObjPtr<art::mirror::Object>, unsigned char)
unix_file::FdFile::IsOpened() const
vtable for art::BaseMutex
art::SingleRootVisitor::VisitRoots(art::mirror::Object***, unsigned int, art::RootInfo const&)
art::verifier::RegType::HasClassVirtual() const
art::CompilerFilter::IsJniCompilationEnabled(art::CompilerFilter::Filter)
art::detail::CmdlineParseArgument<art::JDWP::JdwpOptions>::GetTypeName() const
art::verifier::VerifierDeps::VerifyAssignability(art::Handle<art::mirror::ClassLoader>, art::DexFile const&, std::__1::set<art::verifier::VerifierDeps::TypeAssignability, std::__1::less<art::verifier::VerifierDeps::TypeAssignability>, std::__1::allocator<art::verifier::VerifierDeps::TypeAssignability> > const&, bool, art::Thread*) const
art::ThrowNoSuchFieldError(art::StringPiece const&, art::ObjPtr<art::mirror::Class>, art::StringPiece const&, art::StringPiece const&)
art::gc::space::RosAllocSpace::~RosAllocSpace()
std::__1::__tree<std::__1::__value_type<char const*, art::instrumentation::Instrumentation::InstrumentationLevel>, std::__1::__map_value_compare<char const*, std::__1::__value_type<char const*, art::instrumentation::Instrumentation::InstrumentationLevel>, std::__1::less<char const*>, true>, std::__1::allocator<std::__1::__value_type<char const*, art::instrumentation::Instrumentation::InstrumentationLevel> > >::destroy(std::__1::__tree_node<std::__1::__value_type<char const*, art::instrumentation::Instrumentation::InstrumentationLevel>, void*>*)
art::BitVector::Union(art::BitVector const*)
art::detail::CmdlineParserArgumentInfo<double>::~CmdlineParserArgumentInfo()
art::ElfFileImpl<ElfTypes32>::~ElfFileImpl()
art::verifier::RegTypeCache::From(art::mirror::ClassLoader*, char const*, bool)
artAllocObjectFromCodeWithChecksTLABInstrumented
art::gc::collector::ImmuneRegion::ImmuneRegion()
art::VariantMapKey<art::JDWP::JdwpOptions>::~VariantMapKey()
art::hprof::EndianOutput::HandleU1List(unsigned char const*, unsigned int)
art::DlOpenOatFile::~DlOpenOatFile()
art::mirror::Executable::GetArtMethod()
art::MipsInstructionSetFeatures::MipsInstructionSetFeatures(bool, bool, bool, bool)
art::Dbg::IsForcedInterpreterNeededForCallingImpl(art::Thread*, art::ArtMethod*)
void art::mirror::DexCache::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::FixupInternVisitor>(art::ObjPtr<art::mirror::Class>, art::FixupInternVisitor const&)
art::interpreter::UnstartedRuntime::UnstartedUnsafePutObjectVolatile(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::InternTable::WriteToMemory(unsigned char*)
art::interpreter::RecordArrayElementsInTransaction(art::ObjPtr<art::mirror::Array>, int)
art::ThreadList::WaitForOtherNonDaemonThreadsToExit()
art::JNI::CallDoubleMethodV(_JNIEnv*, _jobject*, _jmethodID*, char*)
art::JDWP::JdwpState::ReleaseJdwpTokenForCommand()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1u> > const&)::{lambda(art::Memory<1u>&)#1}, std::__1::allocator<{lambda(art::Memory<1u>&)#1}>, void (art::Memory<1u>&)>::~__func()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::IntoKey(art::RuntimeArgumentMapKey<unsigned int> const&)::{lambda(unsigned int&)#1}, std::__1::allocator<{lambda(unsigned int&)#1}>, void (unsigned int&)>::~__func()
art::mirror::ClassExt::SetOriginalDexFile(art::ObjPtr<art::mirror::Object>)
art::RuntimeArgumentMap::Interpret
art::GetNsToTimeUnitDivisor(art::TimeUnit)
art::mirror::Method* art::mirror::Method::CreateFromArtMethod<(art::PointerSize)4, false>(art::Thread*, art::ArtMethod*)
art::ElfFileImpl<ElfTypes32>::GetHashBucketNum() const
art::verifier::RegTypeCache::RegTypeFromPrimitiveType(art::Primitive::Type) const
art::instrumentation::Instrumentation::Deoptimize(art::ArtMethod*)
unix_file::FdFile::ReadFully(void*, unsigned int)
art::ElfFileImpl<ElfTypes32>::GetProgramHeadersStart() const
art::gc::ClearedReferenceTask::~ClearedReferenceTask()
art::gc::space::RosAllocSpace::GetFootprint()
art::X86InstructionSetFeatures::Create(bool, bool, bool, bool, bool, bool, bool)
art::gc::allocator::RosAlloc::RevokeAllThreadLocalRuns()
art::JDWP::JdwpState::EventFinish(art::JDWP::ExpandBuf*)
art::gc::space::RosAllocSpace::GetObjectsAllocated()
art::gc::accounting::ModUnionTable::FilterCards()
art::X86InstructionSetFeatures::FromHwcap(bool)
mspace_usable_size
art::ProfileCompilationInfo::ReadProfileHeader(int, unsigned char*, unsigned int*, unsigned int*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::gc::space::BumpPointerSpace::~BumpPointerSpace()
android::base::LogMessageData::LogMessageData(char const*, unsigned int, android::base::LogId, android::base::LogSeverity, int)
vtable for art::MemMapArena
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > android::base::Join<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, char>(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, char)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >& ()>::destroy_deallocate()
art::verifier::RegType::IsUnresolvedTypes() const
art::annotations::GetSignatureAnnotationForClass(art::Handle<art::mirror::Class>)
art::verifier::MethodVerifier::GetQuickInvokedMethod(art::Instruction const*, art::verifier::RegisterLine*, bool, bool)
art::ThreadPool::RemoveAllTasks(art::Thread*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::IntoKey(art::RuntimeArgumentMapKey<double> const&)::{lambda(double&)#1}, std::__1::allocator<{lambda(double&)#1}>, void (double&)>::destroy()
art::Runtime::AddSystemWeakHolder(art::gc::AbstractSystemWeakHolder*)
art::instrumentation::Instrumentation::IsDeoptimized(art::ArtMethod*)
art::gc::space::MallocSpace::GetSweepCallback()
art::JNI::CallCharMethodA(_JNIEnv*, _jobject*, _jmethodID*, jvalue*)
art::DumpFramesWithTypeStackVisitor::VisitFrame()
art::VariantMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::ValueClone(void*) const
artFindNativeMethod
art::gc::accounting::SpaceBitmap<8u>::Size() const
art::mirror::Method* art::mirror::Method::CreateFromArtMethod<(art::PointerSize)8, true>(art::Thread*, art::ArtMethod*)
art::ParsedOptions::MakeParser(bool)
art::gc::space::RegionSpace::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
artGet32InstanceFromCode
art::gc::collector::MarkSweep::MarkStackTask<false>::~MarkStackTask()
unix_file::FdFile::Write(char const*, long long, long long)
art::JavaVMExt::JavaVMExt(art::Runtime*, art::RuntimeArgumentMap const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::gc::space::LargeObjectSpaceType& ()>::operator()()
art::gc::accounting::SpaceBitmap<8u>::SpaceBitmap(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::MemMap*, unsigned int*, unsigned int, void const*, unsigned int)
art::verifier::UnresolvedSuperClass::CheckInvariants() const
vtable for art::RuntimeArgumentMapKey<art::ProfileSaverOptions>
art::ElfFileImpl<ElfTypes64>::GetHashChainNum() const
art::RuntimeArgumentMap::ForegroundHeapGrowthMultiplier
_ZN3art6detail11ToStringAnyINS_18BackgroundGcOptionEEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKT_PNS3_9enable_ifIXsr25SupportsInsertionOperatorISA_EE5valueEvE4typeE
art::RuntimeArgumentMap::Image
art::verifier::RegTypeCache::GetComponentType(art::verifier::RegType const&, art::mirror::ClassLoader*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::IntoKey(art::RuntimeArgumentMapKey<art::TraceClockSource> const&)::{lambda(art::TraceClockSource&)#1}, std::__1::allocator<{lambda(art::TraceClockSource&)#1}>, void (art::TraceClockSource&)>::__clone() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::TraceClockSource&)#1}, std::__1::allocator<{lambda(art::TraceClockSource&)#1}>, void (art::TraceClockSource&)>::~__func()
art::gc::Heap::SetAllocationListener(art::gc::AllocationListener*)
art::ti::Agent::Agent(art::ti::Agent const&)
art::detail::CmdlineParseArgument<unsigned int>::ParseArgument(art::TokenRange const&, unsigned int*)
art::gc::Heap::Compact(art::gc::space::ContinuousMemMapAllocSpace*, art::gc::space::ContinuousMemMapAllocSpace*, art::gc::GcCause)
void art::Thread::DumpThreadOffset<(art::PointerSize)4>(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, unsigned int)
art::JDWP::JdwpState::UnregisterEvent(art::JDWP::JdwpEvent*)
art::DexFile::ReadSignedInt(unsigned char const*, int)
art::DexRegisterMap::GetIndexInDexRegisterMap(unsigned short) const
art::gc::space::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::gc::space::RelocationRange const&)
art::ElfOatFile::FindDynamicSymbolAddress(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
art::Arm64InstructionSetFeatures::FromAssembly()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::TraceClockSource& ()>::__clone() const
art::CheckJNI::CallLongMethodA(_JNIEnv*, _jobject*, _jmethodID*, jvalue*)
art::RuntimeCallbacks::RemoveClassLoadCallback(art::ClassLoadCallback*)
art::mirror::Class::IsInSamePackage(art::StringPiece const&, art::StringPiece const&)
art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> >::Resize(unsigned int)
std::__1::function<void (std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)>::swap(std::__1::function<void (std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)>&)
_Unwind_Resume_or_Rethrow
art::gc::collector::GarbageCollector::ScopedPause::~ScopedPause()
art::interpreter::UnstartedRuntime::UnstartedVoidLookupType(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::instrumentation::Instrumentation::DisableDeoptimization(char const*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::MillisecondsToNanoseconds&)#1}, std::__1::allocator<{lambda(art::MillisecondsToNanoseconds&)#1}>, void (art::MillisecondsToNanoseconds&)>::__clone() const
art::jit::Jit::NewTypeLoadedIfUsingJit(art::mirror::Class*)
std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned short, art::ProfileCompilationInfo::DexPcData>, void*>, std::__1::__tree_node_destructor<art::ArenaAllocatorAdapter<std::__1::__tree_node<std::__1::__value_type<unsigned short, art::ProfileCompilationInfo::DexPcData>, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned short, art::ProfileCompilationInfo::DexPcData>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, art::ProfileCompilationInfo::DexPcData>, std::__1::less<unsigned short>, true>, art::ArenaAllocatorAdapter<std::__1::__value_type<unsigned short, art::ProfileCompilationInfo::DexPcData> > >::__construct_node<unsigned short const&, art::ProfileCompilationInfo::DexPcData const&>(unsigned short const&, art::ProfileCompilationInfo::DexPcData const&)
art::ZipEntry::~ZipEntry()
art::gc::collector::GarbageCollector::~GarbageCollector()
art::JNI::GetObjectClass(_JNIEnv*, _jobject*)
art::ReferenceMapVisitor<art::RootCallbackVisitor, false>::VisitShadowFrame(art::ShadowFrame*)
art::VariantMapKey<art::TraceClockSource>::~VariantMapKey()
art::ObjectRegistry::GetJObject(unsigned long long)
MterpGetCharStatic
art::OatFile::DexBegin() const
art::ArtMethodVisitor::~ArtMethodVisitor()
vtable for art::VariantMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >
art::gc::space::BumpPointerSpace::CanMoveObjects() const
vtable for art::gc::Verification::CollectRootVisitor
art::JDWP::JdwpSuspendPolicy art::JDWP::Request::ReadEnum1<art::JDWP::JdwpSuspendPolicy>(char const*)
art::Runtime::RecordWeakStringInsertion(art::ObjPtr<art::mirror::String>) const
art::GetClassInToObjectArray::operator()(art::ObjPtr<art::mirror::Class>)
MterpSetCharStatic
art::annotations::GetAnnotationDefaultValue(art::ArtMethod*)
art::interpreter::AbortTransactionV(art::Thread*, char const*, char*)
bool art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::SetIfMissing<unsigned int>(art::RuntimeArgumentMapKey<unsigned int> const&, art::Identity<unsigned int>::type const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::IntoKey(art::RuntimeArgumentMapKey<art::verifier::VerifyMode> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::verifier::VerifyMode& ()>::~__func()
art::IndirectReferenceTable::AssertEmpty()
art::JNI::CallNonvirtualCharMethodV(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, char*)
art::gc::TaskProcessor::AddTask(art::Thread*, art::gc::HeapTask*)
art::SetQuickAllocEntryPointsAllocator(art::gc::AllocatorType)
art::ProfileSaver::RunProfileSaverThread(void*)
art::verifier::RegisterLine::Dump(art::verifier::MethodVerifier*) const
art::gc::space::LargeObjectSpace::AsAllocSpace()
art::detail::CmdlineParseArgument<art::Memory<1024u> >::GetTypeName() const
art::ArenaAllocator::GetMemStats() const
art::gc::accounting::MemoryRangeBitmap<1024u>::AddrFromBitIndex(unsigned int) const
art::interpreter::MterpHandleIntrinsic(art::ShadowFrame*, art::ArtMethod*, art::Instruction const*, unsigned short, art::JValue*)
art::Dbg::GetFieldValue(unsigned long long, unsigned long long, art::JDWP::ExpandBuf*)
art::mirror::Field::SetClass(art::ObjPtr<art::mirror::Class>)
art::interpreter::UnstartedRuntime::UnstartedClassGetDeclaredConstructor(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::gc::Heap::DumpGcPerformanceInfo(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::CheckJNI::ReleaseShortArrayElements(_JNIEnv*, _jshortArray*, short*, int)
art::CheckJNI::GetVersion(_JNIEnv*)
vtable for art::VariantMapKey<art::InstructionSet>
art::ElfFileImpl<ElfTypes64>::FindDynamicSymbol(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
art::JNI::AllocObject(_JNIEnv*, _jclass*)
art::WellKnownClasses::java_lang_Thread_group
art::Thread::InitTlsEntryPoints()
artAllocStringFromStringFromCodeRegionTLABInstrumented
artAllocObjectFromCodeWithChecksBumpPointerInstrumented
art::gc::collector::ConcurrentCopying::FlipCallback::Run(art::Thread*)
art::mirror::Class::SetStatus(art::Handle<art::mirror::Class>, art::mirror::Class::Status, art::Thread*)
art::ObjectLock<art::mirror::Class>::~ObjectLock()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::MillisecondsToNanoseconds&)#1}, std::__1::allocator<{lambda(art::MillisecondsToNanoseconds&)#1}>, void (art::MillisecondsToNanoseconds&)>::destroy()
art::CheckJNI::ReleaseByteArrayElements(_JNIEnv*, _jbyteArray*, signed char*, int)
art::JDWP::JdwpSocketState::Establish(art::JDWP::JdwpOptions const*)
void std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__assign_multi<std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, int> >(std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, int>, std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, int>)
vtable for art::StackDumpVisitor
art::DeoptimizeStackVisitor::VisitFrame()
art::PrettyDuration(unsigned long long, unsigned int)
art::ThrowWrappedBootstrapMethodError(char const*, ...)
art::ElfFileImpl<ElfTypes64>::~ElfFileImpl()
art::Thread::ThreadExitCallback(void*)
art::Runtime::RegisterSensitiveThread() const
art::gc::collector::MarkCompact::IsMarked(art::mirror::Object*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::IntoKey(art::RuntimeArgumentMapKey<art::ParseStringList<(char)58> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ParseStringList<(char)58>& ()>::~__func()
art::WellKnownClasses::java_lang_ClassLoader
non-virtual thunk to art::gc::space::RegionSpace::AllocThreadUnsafe(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::ArtMethod* art::FindMethodFromCode<(art::InvokeType)0, true>(unsigned int, art::ObjPtr<art::mirror::Object>*, art::ArtMethod*, art::Thread*)
JNI_GetDefaultJavaVMInitArgs
art::mirror::PrimitiveArray<float>::VisitRoots(art::RootVisitor*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::IntoKey(art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions> const&)::{lambda(art::JDWP::JdwpOptions&)#1}, std::__1::allocator<{lambda(art::JDWP::JdwpOptions&)#1}>, void (art::JDWP::JdwpOptions&)>::~__func()
art::verifier::RegTypeCache::UninitializedThisArgument(art::verifier::RegType const&)
art::OatDexFile::MadviseDexFile(art::DexFile const&, art::MadviseState)
std::__1::__hash_table<std::__1::__hash_value_type<art::gc::AllocRecordStackTraceElement const*, unsigned int>, std::__1::__unordered_map_hasher<art::gc::AllocRecordStackTraceElement const*, std::__1::__hash_value_type<art::gc::AllocRecordStackTraceElement const*, unsigned int>, art::gc::HashAllocRecordTypesPtr<art::gc::AllocRecordStackTraceElement>, true>, std::__1::__unordered_map_equal<art::gc::AllocRecordStackTraceElement const*, std::__1::__hash_value_type<art::gc::AllocRecordStackTraceElement const*, unsigned int>, art::gc::EqAllocRecordTypesPtr<art::gc::AllocRecordStackTraceElement>, true>, std::__1::allocator<std::__1::__hash_value_type<art::gc::AllocRecordStackTraceElement const*, unsigned int> > >::__rehash(unsigned int)
vtable for art::detail::CmdlineParseArgument<art::ParseStringList<(char)58> >
vtable for art::gc::space::LargeObjectMapSpace
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::StringPiece const&)
art::JDWP::JdwpState::ReleaseJdwpTokenForEvent()
art::mirror::PrimitiveArray<long long>* art::JNI::DecodeAndCheckArrayType<_jlongArray*, long long, art::mirror::PrimitiveArray<long long> >(art::ScopedObjectAccess&, _jlongArray*, char const*, char const*)
art::Histogram<unsigned long long>::DumpBins(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
vtable for art::gc::collector::ConcurrentCopying::ActivateReadBarrierEntrypointsCallback
std::__1::__tree<art::verifier::VerifierDeps::MethodResolution, std::__1::less<art::verifier::VerifierDeps::MethodResolution>, std::__1::allocator<art::verifier::VerifierDeps::MethodResolution> >::destroy(std::__1::__tree_node<art::verifier::VerifierDeps::MethodResolution, void*>*)
art::interpreter::UnstartedRuntime::UnstartedThreadLocalGet(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::ArenaBitVector::ArenaBitVector(art::ArenaAllocator*, unsigned int, bool, art::ArenaAllocKind)
art::verifier::LongLoType::instance_
art::gc::collector::MarkSweep::VerifySystemWeakVisitor::~VerifySystemWeakVisitor()
art::Dbg::DdmSendChunk(unsigned int, unsigned int, unsigned char const*)
void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::mirror::ReadBarrierOnNativeRootsVisitor, art::VoidFunctor>(art::mirror::ReadBarrierOnNativeRootsVisitor const&, art::VoidFunctor const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}, std::__1::allocator<{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}>, void (std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)>::operator()(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)
art::ElfFileImpl<ElfTypes64>::Load(unix_file::FdFile*, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)> > >::__node_insert_unique(std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)>, void*>*)
art::ti::Agent::~Agent()
art::Thread::PassActiveSuspendBarriers(art::Thread*)
art::instrumentation::InstrumentationStackFrame::Dump() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::IntoKey(art::RuntimeArgumentMapKey<art::ParseStringList<(char)58> > const&)::{lambda(art::ParseStringList<(char)58>&)#1}, std::__1::allocator<{lambda(art::ParseStringList<(char)58>&)#1}>, void (art::ParseStringList<(char)58>&)>::destroy()
inflateMark
art::mirror::Array::ThrowArrayIndexOutOfBoundsException(int)
bool art::interpreter::DoFieldGet<(art::FindFieldType)6, (art::Primitive::Type)2, true>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::jit::JitCodeCache::CopyInlineCacheInto(art::InlineCache const&, art::Handle<art::mirror::ObjectArray<art::mirror::Class> >)
art::verifier::DoubleLoType::instance_
vtable for art::verifier::IntegerType
art::mirror::MethodHandlesLookup::SetClass(art::mirror::Class*)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::ClassLinker::RegisterDexFile(art::DexFile const&, art::ObjPtr<art::mirror::ClassLoader>)
art::Dbg::CreateString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long long*)
art::JavaVMExt::DecodeGlobal(void*)
art::Monitor::GetOwnerThreadId()
non-virtual thunk to art::gc::space::RosAllocSpace::~RosAllocSpace()
art::ElfFileImpl<ElfTypes64>::GetFilePath() const
art::VariantMapKey<art::XGcOption>::ValueDelete(void*) const
bool art::verifier::MethodVerifier::VerifyInstruction<false>(art::Instruction const*, unsigned int)
art::verifier::VerifierDeps::GetClassDescriptorStringId(art::DexFile const&, art::ObjPtr<art::mirror::Class>)
art::detail::CmdlineParserArgumentInfo<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::CompleteArgument()
art::FaultManager::~FaultManager()
art::Monitor::AtraceMonitorUnlock()
art::ZipEntry::GetCrc32()
art::gc::accounting::SpaceBitmap<4096u>::Set(art::mirror::Object const*)
art::ZipArchive::~ZipArchive()
art::gc::accounting::SpaceBitmap<4096u>::OffsetBitIndex(unsigned int)
art::ComputeGenericJniFrameSize::~ComputeGenericJniFrameSize()
vtable for art::gc::space::RosAllocSpace
art::OatDexFile::FileSize() const
art::verifier::UninitializedReferenceType::HasClassVirtual() const
art::ConditionVariable::WaitHoldingLocks(art::Thread*)
art::ClassLoaderContext::ClassLoaderInfo::~ClassLoaderInfo()
void std::__1::__tree_remove<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*)
void art::gc::accounting::SpaceBitmap<8u>::VisitMarkedRange<art::FixupInternVisitor&>(unsigned int, unsigned int, art::FixupInternVisitor&) const
art::CHACheckpoint::~CHACheckpoint()
art::gc::accounting::RememberedSet::ClearCards()
art::hprof::Hprof::DumpHeapObject(art::mirror::Object*)
art::DexFileVerifier::CheckMethodAccessFlags(unsigned int, unsigned int, unsigned int, unsigned int, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::OatHeader::SetJniDlsymLookupOffset(unsigned int)
void std::__1::vector<art::GcRoot<art::mirror::String>, std::__1::allocator<art::GcRoot<art::mirror::String> > >::__push_back_slow_path<art::GcRoot<art::mirror::String> >(art::GcRoot<art::mirror::String>&&)
void art::gc::accounting::SpaceBitmap<8u>::VisitMarkedRange<art::gc::VerifyLiveStackReferences&>(unsigned int, unsigned int, art::gc::VerifyLiveStackReferences&) const
art::GuardedCopy::CreateGuardedPACopy(_JNIEnv*, _jarray*, unsigned char*, void*)
art::gc::collector::PartialMarkSweep::PartialMarkSweep(art::gc::Heap*, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::WellKnownClasses::java_lang_Throwable
art::JNI::GetFloatArrayElements(_JNIEnv*, _jfloatArray*, unsigned char*)
art::verifier::InstructionFlags::ToString() const
art::CheckJNI::CallNonvirtualObjectMethod(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, ...)
art::Trace::GetMethodTracingMode()
art::gc::collector::ConcurrentCopying::SweepLargeObjects(bool)
art::JDWP::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::JDWP::JdwpTypeTag const&)
art::ElfFileImpl<ElfTypes32>::SetMap(unix_file::FdFile*, art::MemMap*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsVisitor::VisitRoot(art::mirror::Object*, art::RootInfo const&)
art::gc::space::DlMallocSpace::Walk(void (*)(void*, void*, unsigned int, void*), void*)
art::Monitor::LogContentionEvent(art::Thread*, unsigned int, unsigned int, art::ArtMethod*, unsigned int)
art::detail::CmdlineParseArgument<art::Unit>::ParseArgumentSingle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::gc::collector::MarkSweep::MarkSweep(art::gc::Heap*, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::Mips64InstructionSetFeatures::FromCpuInfo()
art::CheckJNI::SetStaticDoubleField(_JNIEnv*, _jclass*, _jfieldID*, double)
deflatePending
art::gc::collector::MarkCompact::MarkReachableObjects()
art::gc::collector::MarkSweep::RevokeAllThreadLocalBuffers()
virtual thunk to std::__1::basic_ifstream<char, std::__1::char_traits<char> >::~basic_ifstream()
art::ProfileCompilationInfo::FindOrAddDexPc(art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::__1::less<unsigned short>, art::ArenaAllocatorAdapter<std::__1::pair<unsigned short const, art::ProfileCompilationInfo::DexPcData> > >*, unsigned int)
art::ThreadList::RunCheckpoint(art::Closure*, art::Closure*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::IntoKey(art::RuntimeArgumentMapKey<double> const&)::{lambda(double&)#1}, std::__1::allocator<{lambda(double&)#1}>, void (double&)>::~__func()
art::ClassLinker::NumNonZygoteClasses() const
art::RootInfo::Describe(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::Dbg::GetThreads(art::mirror::Object*, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >*)
art::gAborting
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::IntoKey(art::RuntimeArgumentMapKey<bool> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, bool& ()>::~__func()
art::gc::Heap::RecordFree(unsigned long long, long long)
vtable for std::__1::__shared_ptr_emplace<art::TraceClockSource, std::__1::allocator<art::TraceClockSource> >
art::ArtMethod* art::ClassLinker::GetResolvedMethod<(art::InvokeType)0, (art::ClassLinker::ResolveMode)1>(unsigned int, art::ArtMethod*)
std::__1::__tree<std::__1::__value_type<art::DexFile const*, std::__1::vector<unsigned short, art::ScopedArenaAllocatorAdapter<unsigned short> > >, std::__1::__map_value_compare<art::DexFile const*, std::__1::__value_type<art::DexFile const*, std::__1::vector<unsigned short, art::ScopedArenaAllocatorAdapter<unsigned short> > >, std::__1::less<art::DexFile const*>, true>, art::ScopedArenaAllocatorAdapter<std::__1::__value_type<art::DexFile const*, std::__1::vector<unsigned short, art::ScopedArenaAllocatorAdapter<unsigned short> > > > >::destroy(std::__1::__tree_node<std::__1::__value_type<art::DexFile const*, std::__1::vector<unsigned short, art::ScopedArenaAllocatorAdapter<unsigned short> > >, void*>*)
art::WellKnownClasses::java_lang_Thread_nativePeer
art::Dbg::GetSuperclass(unsigned long long, unsigned long long*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Parse(art::TokenRange&&)
art::detail::CmdlineParseArgument<art::Memory<1u> >::~CmdlineParseArgument()
art::ArtMethod::GetCanonicalMethod(art::PointerSize)
art::SingleRootVisitor::VisitRoots(art::mirror::CompressedReference<art::mirror::Object>**, unsigned int, art::RootInfo const&)
art::JDWP::JdwpOptions& art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination::GetOrCreateFromMap<art::JDWP::JdwpOptions>(art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions> const&)
art::JNI::GetStringLength(_JNIEnv*, _jstring*)
art::InstructionSetFeatures::~InstructionSetFeatures()
art::ClassLinker::AllocPointerArray(art::Thread*, unsigned int)
art::CheckJNI::GetCharField(_JNIEnv*, _jobject*, _jfieldID*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, bool& ()>::~__func()
art::verifier::UnresolvedMergedType::IsObjectArrayTypes() const
art::verifier::PrimitiveType::PrimitiveType(art::mirror::Class*, art::StringPiece const&, unsigned short)
vtable for art::CurrentMethodVisitor
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::IntoKey(art::RuntimeArgumentMapKey<art::ParseStringList<(char)58> > const&)::{lambda(art::ParseStringList<(char)58>&)#1}, std::__1::allocator<{lambda(art::ParseStringList<(char)58>&)#1}>, void (art::ParseStringList<(char)58>&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::ParseStringList<(char)58>&)#1}> >*) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::gc::space::LargeObjectSpaceType&)#1}, std::__1::allocator<{lambda(art::gc::space::LargeObjectSpaceType&)#1}>, void (art::gc::space::LargeObjectSpaceType&)>::~__func()
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, art::ClassLinker::MethodTranslation>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, art::ClassLinker::MethodTranslation>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, art::ClassLinker::MethodTranslation>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, art::ClassLinker::MethodTranslation> > >::__rehash(unsigned int)
void art::mirror::Object::VisitFieldsReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::VerifyReferenceVisitor>(unsigned int, art::gc::VerifyReferenceVisitor const&)
art::Runtime::GetStat(int)
art::verifier::RegisterLine::CheckUnaryOpWide(art::verifier::MethodVerifier*, art::Instruction const*, art::verifier::RegType const&, art::verifier::RegType const&, art::verifier::RegType const&, art::verifier::RegType const&)
artGetObjInstanceFromCompiledCode
art::gc::allocator::RosAlloc::AssertThreadLocalRunsAreRevoked(art::Thread*)
art::ArtMethod::GetOatQuickMethodHeader(unsigned int)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(bool&)#1}, std::__1::allocator<{lambda(bool&)#1}>, void (bool&)>::operator()(bool&)
art::DebugInstrumentationListener::MethodUnwind(art::Thread*, art::Handle<art::mirror::Object>, art::ArtMethod*, unsigned int)
art::CheckJNI::CallStaticFloatMethodA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
vtable for art::gc::AllocRecordStackVisitor
art::OatFileManager::HasCollisions(art::OatFile const*, art::ClassLoaderContext const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
art::detail::CmdlineParseArgument<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::GetNumTokens() const
art::Trace::FinishTracing()
art::NthCallerVisitor::VisitFrame()
art::gc::Heap::DecrementDisableMovingGC(art::Thread*)
art::JNI::GetBooleanArrayRegion(_JNIEnv*, _jbooleanArray*, int, int, unsigned char*)
art::gc::ZygoteCompactingCollector::MarkNonForwardedObject(art::mirror::Object*)
bool art::ClassTable::Visit<art::GetClassesVisitor>(art::GetClassesVisitor&)
art::VariantMapKey<std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > >*>::~VariantMapKey()
art::ClassTable::~ClassTable()
art::mirror::PrimitiveArray<unsigned short>::Get(int)
std::__1::__tree_iterator<art::Histogram<unsigned long long>*, std::__1::__tree_node<art::Histogram<unsigned long long>*, void*>*, int> std::__1::__tree<art::Histogram<unsigned long long>*, art::CumulativeLogger::HistogramComparator, std::__1::allocator<art::Histogram<unsigned long long>*> >::__lower_bound<art::Histogram<unsigned long long>*>(art::Histogram<unsigned long long>* const&, std::__1::__tree_node<art::Histogram<unsigned long long>*, void*>*, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*)
art::LinearAlloc::Contains(void*) const
art::ElfFileImpl<ElfTypes32>::CheckSectionsLinked(unsigned char const*, unsigned char const*) const
art::verifier::MethodVerifier::UninstantiableError(char const*)
android::base::Basename(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::instrumentation::Instrumentation::AddDeoptimizedMethod(art::ArtMethod*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::ParseStringList<(char)58>&)#1}, std::__1::allocator<{lambda(art::ParseStringList<(char)58>&)#1}>, void (art::ParseStringList<(char)58>&)>::operator()(art::ParseStringList<(char)58>&)
artGetShortInstanceFromCompiledCode
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::gc::space::LargeObjectSpaceType&)#1}, std::__1::allocator<{lambda(art::gc::space::LargeObjectSpaceType&)#1}>, void (art::gc::space::LargeObjectSpaceType&)>::destroy()
art::ClassLoaderContext::CreateContextForClassLoader(_jobject*, _jobjectArray*)
non-virtual thunk to art::gc::collector::ConcurrentCopying::ThreadFlipVisitor::VisitRoots(art::mirror::Object***, unsigned int, art::RootInfo const&)
art::gc::collector::ConcurrentCopying::AssertToSpaceInvariantInNonMovingSpace(art::mirror::Object*, art::mirror::Object*)
art::VariantMapKey<bool (*)()>::~VariantMapKey()
unix_file::FdFile::FlushClose()
art::JNI::CallStaticBooleanMethodV(_JNIEnv*, _jclass*, _jmethodID*, char*)
art::detail::CmdlineParseArgument<art::JDWP::JdwpOptions>::MaybeMatches(art::TokenRange const&)
void art::ClassTable::VisitRoots<art::gc::accounting::AddToReferenceArrayVisitor>(art::gc::accounting::AddToReferenceArrayVisitor const&)
art::HandleUnexpectedSignalAndroid(int, siginfo*, void*)
art::gc::Heap::AddFinalizerReference(art::Thread*, art::ObjPtr<art::mirror::Object>*)
non-virtual thunk to art::gc::space::DlMallocSpace::FreeList(art::Thread*, unsigned int, art::mirror::Object**)
art::detail::CmdlineParseArgument<art::XGcOption>::GetNumTokens() const
art::ToStr<art::Thread>::ToStr(art::Thread const&)
std::__1::__split_buffer<std::__1::pair<art::mirror::Object*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >*, std::__1::allocator<std::__1::pair<art::mirror::Object*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >*> >::push_front(std::__1::pair<art::mirror::Object*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >*&&)
art::ti::Agent::DoDlOpen(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)1, true, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::JDWP::DescribeRefTypeId(unsigned long long const&)
art::CheckJNI::GetObjectClass(_JNIEnv*, _jobject*)
art::Dbg::OutputFieldValue(unsigned long long, art::JValue const*, art::JDWP::ExpandBuf*)
art::gc::space::LargeObjectMapSpace::Create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
void std::__1::vector<art::gc::space::AllocSpace*, std::__1::allocator<art::gc::space::AllocSpace*> >::__push_back_slow_path<art::gc::space::AllocSpace*>(art::gc::space::AllocSpace*&&)
art::ElfFileImpl<ElfTypes32>::ApplyOatPatches(unsigned char const*, unsigned char const*, unsigned int, unsigned char*, unsigned char const*)
int art::interpreter::MterpSetStatic<short, (art::Primitive::Type)4>(unsigned int, short, art::ArtMethod*, art::Thread*, void (art::ArtField::*)(art::ObjPtr<art::mirror::Object>, short))
art::InstructionSetFeatures::AsX86_64InstructionSetFeatures() const
art::DexFileVerifier::CheckInterClassDefItem()
art::register_java_lang_reflect_Field(_JNIEnv*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1u> > const&)::{lambda(art::Memory<1u>&)#1}, std::__1::allocator<{lambda(art::Memory<1u>&)#1}>, void (art::Memory<1u>&)>::__clone() const
art::verifier::DoubleHiType const* art::verifier::RegTypeCache::CreatePrimitiveTypeInstance<art::verifier::DoubleHiType>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::ScopedCheck::CheckInstance(art::ScopedObjectAccess&, art::ScopedCheck::InstanceKind, _jobject*, bool)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>::__clone() const
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::IntoKey(art::RuntimeArgumentMapKey<art::TraceClockSource> const&)::{lambda(art::TraceClockSource&)#1}, std::__1::allocator<{lambda(art::TraceClockSource&)#1}>, void (art::TraceClockSource&)>
art::Thread::RequestCheckpoint(art::Closure*)
std::__1::function<void (std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)>::swap(std::__1::function<void (std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)>&)
art::gc::collector::MarkSweep::MarkConcurrentRoots(art::VisitRootFlags)
art::CheckJNI::CallStaticLongMethodA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
art::ProfileCompilationInfo::MergeWith(art::ProfileCompilationInfo const&, bool)
art::gc::ReferenceProcessor::DelayReferenceReferent(art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::Reference>, art::gc::collector::GarbageCollector*)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::ProfileSaverOptions&)#1}, std::__1::allocator<{lambda(art::ProfileSaverOptions&)#1}>, void (art::ProfileSaverOptions&)>
artSetObjInstanceFromCompiledCode
art::CmdlineType<art::Unit>::Parse(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::Transaction::ObjectLog::UndoFieldWrite(art::mirror::Object*, art::MemberOffset, art::Transaction::ObjectLog::FieldValue const&) const
art::DexFile::GetIndexForMethodId(art::DexFile::MethodId const&) const
art::GetAndroidRootSafe(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::RuntimeArgumentMap::DumpNativeStackOnSigQuit
art::JNI::SetStaticBooleanField(_JNIEnv*, _jclass*, _jfieldID*, unsigned char)
art::ClassLinker::CheckSystemClass(art::Thread*, art::Handle<art::mirror::Class>, char const*)
art::SetInterpreterEntrypointArtMethodVisitor::Visit(art::ArtMethod*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>::__clone() const
std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::operator<< <char, std::__1::char_traits<char>, std::__1::allocator<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
android::base::Dirname(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__hash_table<art::StringTable::Entry, art::StringTable::EntryHash, std::__1::equal_to<art::StringTable::Entry>, std::__1::allocator<art::StringTable::Entry> >::rehash(unsigned int)
void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::accounting::RememberedSetReferenceVisitor, art::gc::accounting::RememberedSetReferenceVisitor>(art::gc::accounting::RememberedSetReferenceVisitor const&, art::gc::accounting::RememberedSetReferenceVisitor const&)
art::JDWP::Request::Read4BE()
art::OatHeader::GetJniDlsymLookup() const
art::verifier::MethodVerifier::Dump(art::VariableIndentationOutputStream*)
art::CatchHandlerIterator::Init(art::DexFile::CodeItem const&, int)
art::ObjectLock<art::mirror::ClassExt>::~ObjectLock()
art::gc::collector::MarkCompact::MarkCompact(art::gc::Heap*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::gc::collector::ImmuneSpaces::CompareByBegin::operator()(art::gc::space::ContinuousSpace*, art::gc::space::ContinuousSpace*) const
art::OatHeader::GetChecksum() const
art::JavaVMExt::LoadNativeLibrary(_JNIEnv*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, _jobject*, _jstring*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::verifier::VerifyMode&)#1}, std::__1::allocator<{lambda(art::verifier::VerifyMode&)#1}>, void (art::verifier::VerifyMode&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::verifier::VerifyMode&)#1}> >*) const
art::gc::collector::SemiSpace::VerifyNoFromSpaceReferences(art::mirror::Object*)
art::mirror::PrimitiveArray<float>::array_class_
artAllocArrayFromCodeResolvedRegionTLAB
artGet32StaticFromCode
art::Mips64InstructionSetFeatures::GetInstructionSet() const
art::gc::space::ImageSpace::GetMarkBitmap() const
art::mirror::Class::ResolveDirectInterface(art::Thread*, art::Handle<art::mirror::Class>, unsigned int)
art::ElfFile::Size() const
std::__1::__function::__func<void (*)(char const*), std::__1::allocator<void (*)(char const*)>, void (char const*)>::destroy_deallocate()
art::CheckJNI::CallNonvirtualIntMethodA(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, jvalue*)
art::ScopedArenaAllocator::ScopedArenaAllocator(art::ArenaStack*)
vtable for art::verifier::CharType
void art::gc::accounting::SpaceBitmap<8u>::Walk<art::gc::ZygoteCompactingCollector::BuildBins(art::gc::space::ContinuousSpace*)::{lambda(art::mirror::Object*)#1}&>(art::gc::ZygoteCompactingCollector::BuildBins(art::gc::space::ContinuousSpace*)::{lambda(art::mirror::Object*)#1}&)
void std::__1::vector<art::ThreadLifecycleCallback*, std::__1::allocator<art::ThreadLifecycleCallback*> >::__push_back_slow_path<art::ThreadLifecycleCallback* const&>(art::ThreadLifecycleCallback* const&)
art::WellKnownClasses::org_apache_harmony_dalvik_ddmc_DdmServer
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)6, false, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::jit::JitCodeCache::GetProfiledMethods(std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::vector<art::ProfileMethodInfo, std::__1::allocator<art::ProfileMethodInfo> >&)
art::gc::accounting::ModUnionTableReferenceCache::ProcessCards()
art::ClassLoaderContext::ParseClassLoaderSpec(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::ClassLoaderContext::ClassLoaderType, bool)
art::gc::collector::MarkSweep::SweepLargeObjects(bool)
art::mirror::ClassExt::SetVerifyError(art::ObjPtr<art::mirror::Object>)
art::RuntimeArgumentMap::Relocate
art::Transaction::RecordWriteField32(art::mirror::Object*, art::MemberOffset, unsigned int, bool)
art::verifier::UndefinedType::Dump() const
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::IntoKey(art::RuntimeArgumentMapKey<art::verifier::VerifyMode> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::verifier::VerifyMode& ()>
art::ElfFileImpl<ElfTypes32>::GetStringSectionStart(unsigned int) const
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>
art::gc::ZygoteCompactingCollector::ShouldSweepSpace(art::gc::space::ContinuousSpace*) const
art::gc::Heap::BroadcastForNewAllocationRecords() const
art::StackVisitor::GetVRegFromDebuggerShadowFrame(unsigned short, art::VRegKind, unsigned int*) const
void std::__1::vector<art::TimingLogger::Timing, std::__1::allocator<art::TimingLogger::Timing> >::__push_back_slow_path<art::TimingLogger::Timing>(art::TimingLogger::Timing&&)
art::CheckJNI::GetDoubleArrayElements(_JNIEnv*, _jdoubleArray*, unsigned char*)
art::verifier::RegType::IsZero() const
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, void*>*)
art::ObjectLock<art::mirror::ClassExt>::ObjectLock(art::Thread*, art::Handle<art::mirror::ClassExt>)
art::ElfFileImpl<ElfTypes32>::GetDynamicSectionStart() const
art::CumulativeLogger::End()
art::EncodedArrayValueIterator::EncodedArrayValueIterator(art::DexFile const&, unsigned char const*)
art::mirror::StackTraceElement::VisitRoots(art::RootVisitor*)
artQuickResolutionTrampoline
art::JNI::GetDoubleArrayElements(_JNIEnv*, _jdoubleArray*, unsigned char*)
art::register_dalvik_system_VMDebug(_JNIEnv*)
art::gc::accounting::SpaceBitmap<4096u>::HasAddress(void const*) const
_ZN3art6detail11ToStringAnyIbEENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKT_PNS2_9enable_ifIXsr25SupportsInsertionOperatorIS9_EE5valueEvE4typeE
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::IntoKey(art::RuntimeArgumentMapKey<art::LogVerbosity> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::LogVerbosity& ()>::operator()()
art::ArtMethod::FindDexMethodIndexInOtherDexFile(art::DexFile const&, unsigned int)
art::VariantMapKey<art::verifier::VerifyMode>::~VariantMapKey()
art::verifier::RegisterLine::CheckBinaryOp2addrWide(art::verifier::MethodVerifier*, art::Instruction const*, art::verifier::RegType const&, art::verifier::RegType const&, art::verifier::RegType const&, art::verifier::RegType const&, art::verifier::RegType const&, art::verifier::RegType const&)
art::JII::AttachCurrentThread(_JavaVM*, _JNIEnv**, void*)
art::interpreter::UnstartedRuntime::InitializeInvokeHandlers()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>::destroy_deallocate()
art::interpreter::UnstartedRuntime::UnstartedJNIClassGetNameNative(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
art::UContext::DumpRegister64(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long long) const
art::BuildGenericJniFrameVisitor::FinalizeHandleScope(art::Thread*)
art::CheckJNI::CallVoidMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)
art::register_dalvik_system_DexFile(_JNIEnv*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::BackgroundGcOption> const&)::{lambda(art::BackgroundGcOption&)#1}, std::__1::allocator<{lambda(art::BackgroundGcOption&)#1}>, void (art::BackgroundGcOption&)>::~__func()
art::JDWP::DescribeMethod(unsigned long long const&)
art::OatFileAssistant::OatFileInfo::GetFile()
art::ClassTable::InsertStrongRoot(art::ObjPtr<art::mirror::Object>)
art::Runtime::SetImtUnimplementedMethod(art::ArtMethod*)
void art::verifier::MethodVerifier::VerifyISFieldAccess<(art::verifier::MethodVerifier::FieldAccessType)0>(art::Instruction const*, art::verifier::RegType const&, bool, bool)
art::verifier::VerifierDeps::GetDexFileDeps(art::DexFile const&) const
art::DexFile::GetIndexForProtoId(art::DexFile::ProtoId const&) const
MterpGetByteStatic
art::RuntimeCallbacks::ClassLoad(art::Handle<art::mirror::Class>)
art::gc::accounting::MemoryRangeBitmap<16u>::Test(unsigned int) const
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)4, false, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::mirror::PrimitiveArray<unsigned short>* art::JNI::DecodeAndCheckArrayType<_jcharArray*, unsigned short, art::mirror::PrimitiveArray<unsigned short> >(art::ScopedObjectAccess&, _jcharArray*, char const*, char const*)
art::x86::X86Context::SetSP(unsigned int)
art::BaseMutex::BaseMutex(char const*, art::LockLevel)
art::CatchHandlerIterator::CatchHandlerIterator(art::DexFile::CodeItem const&, art::DexFile::TryItem const&)
art::mirror::PrimitiveArray<float>::Alloc(art::Thread*, unsigned int)
art::gc::space::LargeObjectMapSpace::SetAllLargeObjectsAsZygoteObjects(art::Thread*)
art::Dbg::Connected()
art::gc::space::MemoryToolLargeObjectMapSpace::~MemoryToolLargeObjectMapSpace()
art::UpdateEntryPointsClassVisitor::operator()(art::ObjPtr<art::mirror::Class>)
art::Transaction::Transaction()
artAllocStringFromCharsFromCodeDlMalloc
void art::mirror::Class::VisitNativeRoots<(art::ReadBarrierOption)0, art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor const>(art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor const&, art::PointerSize)
art::RuntimeArgumentMapKey<art::CompilerCallbacks*>::~RuntimeArgumentMapKey()
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)::{lambda()#1}::operator()() const
void art::gc::accounting::SpaceBitmap<8u>::VisitMarkedRange<art::gc::collector::MarkSweep::ScanObjectVisitor const&>(unsigned int, unsigned int, art::gc::collector::MarkSweep::ScanObjectVisitor const&) const
art::gc::space::BumpPointerSpace::BumpPointerSpace(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned char*, unsigned char*)
art::jit::Jit::jit_compile_method_
unsigned int art::gc::space::RosAllocSpace::AllocationSizeNonvirtual<true>(art::mirror::Object*, unsigned int*)
art::Runtime::RecordWeakStringRemoval(art::ObjPtr<art::mirror::String>) const
art::Plugin::~Plugin()
art::Locks::thread_list_lock_
art::gc::collector::SemiSpace::GetCollectorType() const
void art::gc::accounting::CardTable::ModifyCardsAtomic<art::gc::AgeCardVisitor, art::gc::accounting::ModUnionAddToCardBitmapVisitor>(unsigned char*, unsigned char*, art::gc::AgeCardVisitor const&, art::gc::accounting::ModUnionAddToCardBitmapVisitor const&)
non-virtual thunk to art::gc::space::BumpPointerSpace::RevokeThreadLocalBuffers(art::Thread*)
art::Monitor::GetLockOwnerThreadId(art::mirror::Object*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::JDWP::JdwpOptions&)#1}, std::__1::allocator<{lambda(art::JDWP::JdwpOptions&)#1}>, void (art::JDWP::JdwpOptions&)>::destroy_deallocate()
vtable for art::RuntimeArgumentMapKey<void (*)()>
void std::__1::vector<art::ProfileMethodInfo, std::__1::allocator<art::ProfileMethodInfo> >::__emplace_back_slow_path<art::MethodReference, std::__1::vector<art::ProfileMethodInfo::ProfileInlineCache, std::__1::allocator<art::ProfileMethodInfo::ProfileInlineCache> >&>(art::MethodReference&&, std::__1::vector<art::ProfileMethodInfo::ProfileInlineCache, std::__1::allocator<art::ProfileMethodInfo::ProfileInlineCache> >&)
art::verifier::LongHiType::GetAssignmentTypeImpl() const
art::DexFileVerifier::CheckInterMethodHandleItem()
art::instrumentation::Instrumentation::Undeoptimize(art::ArtMethod*)
art::ArtField* art::FindFieldFromCode<(art::FindFieldType)7, false>(unsigned int, art::ArtMethod*, art::Thread*, unsigned int)
art::mirror::Class::FindTypeIndexInOtherDexFile(art::DexFile const&)
artSetByteInstanceFromCode
art::gc::collector::ConcurrentCopying::VisitRoots(art::mirror::Object***, unsigned int, art::RootInfo const&)
art::gc::allocator::RosAlloc::RevokeThreadUnsafeCurrentRuns()
mspace_realloc_in_place
art::verifier::IntegerType::GetAssignmentTypeImpl() const
art::Dbg::StartJdwp()
art::ClassTable::InsertOatFileLocked(art::OatFile const*)
art::mirror::Class::FindInstanceField(art::StringPiece const&, art::StringPiece const&)
art::Trace::~Trace()
non-virtual thunk to art::gc::space::BumpPointerSpace::AllocationSize(art::mirror::Object*, unsigned int*)
art::OatFileAssistant::OatFileInfo::GetDexOptNeeded(art::CompilerFilter::Filter, bool, bool, art::ClassLoaderContext*)
art::gc::accounting::SpaceBitmap<8u>::SetHeapLimit(unsigned int)
std::__1::__shared_ptr_emplace<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__on_zero_shared()
std::__1::__split_buffer<std::__1::tuple<void const*, unsigned int, bool>*, std::__1::allocator<std::__1::tuple<void const*, unsigned int, bool>*>&>::push_front(std::__1::tuple<void const*, unsigned int, bool>* const&)
art::VariantMapKey<void (*)(int)>::~VariantMapKey()
art::JavaVMExt::DisallowNewWeakGlobals()
art::mirror::PrimitiveArray<unsigned short>::SetArrayClass(art::ObjPtr<art::mirror::Class>)
deflateCopy
art::gc::Heap::ClampGrowthLimit()
bool art::interpreter::DoFieldGet<(art::FindFieldType)2, (art::Primitive::Type)1, true>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
std::__1::__shared_ptr_pointer<art::RuntimeArgumentMap*, std::__1::default_delete<art::RuntimeArgumentMap>, std::__1::allocator<art::RuntimeArgumentMap> >::~__shared_ptr_pointer()
art::ClassLinker::CreateWellKnownClassLoader(art::Thread*, std::__1::vector<art::DexFile const*, std::__1::allocator<art::DexFile const*> > const&, _jclass*, _jobject*)
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<art::StringPiece, art::OatDexFile const*>, std::__1::__tree_node<std::__1::__value_type<art::StringPiece, art::OatDexFile const*>, void*>*, int>, bool> std::__1::__tree<std::__1::__value_type<art::StringPiece, art::OatDexFile const*>, std::__1::__map_value_compare<art::StringPiece, std::__1::__value_type<art::StringPiece, art::OatDexFile const*>, std::__1::less<art::StringPiece>, true>, std::__1::allocator<std::__1::__value_type<art::StringPiece, art::OatDexFile const*> > >::__emplace_unique_key_args<art::StringPiece, art::StringPiece const&, art::OatDexFile const*>(art::StringPiece const&, art::StringPiece const&, art::OatDexFile const*&&)
art::detail::CmdlineParseArgument<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::GetTypeName() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::LogVerbosity&)#1}, std::__1::allocator<{lambda(art::LogVerbosity&)#1}>, void (art::LogVerbosity&)>::destroy()
ZipString::ZipString(char const*)
art::gc::AllocRecordObjectMap::AllowNewAllocationRecords()
art::gc::accounting::SpaceBitmap<8u>::~SpaceBitmap()
_jobject* art::Thread::CreateInternalStackTrace<true>(art::ScopedObjectAccessAlreadyRunnable const&) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)::{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}, std::__1::allocator<{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}>, void (std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)>::operator()(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)
art::Dbg::full_deoptimization_event_count_
art::OS::FileExists(char const*)
art::OatFileAssistant::IsInBootClassPath()
art::verifier::UnresolvedUninitializedThisRefType::IsUnresolvedTypes() const
art::mirror::Class::FindDeclaredVirtualMethodByName(art::StringPiece const&, art::PointerSize)
guard variable for art::mirror::PrimitiveArray<unsigned short>::array_class_
_ZN3art6detail11ToStringAnyINS_6PluginEEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKT_PNS3_9enable_ifIXsr25SupportsInsertionOperatorISA_EE5valueEvE4typeE
art::VariantMapKey<art::gc::space::LargeObjectSpaceType>::~VariantMapKey()
art::WellKnownClasses::java_lang_Thread_lock
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::MillisecondsToNanoseconds&)#1}, std::__1::allocator<{lambda(art::MillisecondsToNanoseconds&)#1}>, void (art::MillisecondsToNanoseconds&)>
art::gc::space::DlMallocSpace::RevokeThreadLocalBuffers(art::Thread*)
art::JNI::ReleaseByteArrayElements(_JNIEnv*, _jbyteArray*, signed char*, int)
art::verifier::RegisterLine::CheckBinaryOp2addrWideShift(art::verifier::MethodVerifier*, art::Instruction const*, art::verifier::RegType const&, art::verifier::RegType const&, art::verifier::RegType const&)
art::CheckJNI::CallStaticVoidMethodA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
vtable for art::MonitorDeflateVisitor
android::base::LogdLogger::operator()(android::base::LogId, android::base::LogSeverity, char const*, char const*, unsigned int, char const*)
art::gc::space::ZygoteSpace::Create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::MemMap*, art::gc::accounting::SpaceBitmap<8u>*, art::gc::accounting::SpaceBitmap<8u>*)
art::RuntimeArgumentMap::JITPriorityThreadWeight
art::gc::collector::GarbageCollector::DumpPerformanceInfo(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::gc::collector::ImmuneSpaces::AddSpace(art::gc::space::ContinuousSpace*)
art::ThreadCpuNanoTime()
bool art::interpreter::DoIPutQuick<(art::Primitive::Type)6, true>(art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::AbortState::DumpThread(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Thread*) const
zlibCompileFlags
art::ConditionVariable::Broadcast(art::Thread*)
art::ElfFileImpl<ElfTypes32>::FindSectionByName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
art::JNIEnvExt::SetCheckJniEnabled(bool)
art::ClassLinker::LookupResolvedType(art::DexFile const&, art::dex::TypeIndex, art::ObjPtr<art::mirror::DexCache>, art::ObjPtr<art::mirror::ClassLoader>)
art::ElfFileImpl<ElfTypes64>::Open(unix_file::FdFile*, int, int, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::gc::space::Space::AsBumpPointerSpace()
art::ClassLinker::AllocAndInitializeDexCache(art::Thread*, art::DexFile const&, art::LinearAlloc*)
art::mirror::MethodHandleImpl::VisitRoots(art::RootVisitor*)
art::WellKnownClasses::java_lang_OutOfMemoryError
art::mirror::Class::FindDeclaredInstanceField(art::ObjPtr<art::mirror::DexCache>, unsigned int)
art::ElfFileImpl<ElfTypes32>::FindSymbolAddress(unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
void art::gc::accounting::SpaceBitmap<8u>::VisitMarkedRange<art::gc::space::ImageSpaceLoader::FixupObjectVisitor&>(unsigned int, unsigned int, art::gc::space::ImageSpaceLoader::FixupObjectVisitor&) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoIgnore()::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>::__clone() const
art::CheckJNI::MonitorExit(_JNIEnv*, _jobject*)
art::gc::Heap::Heap(unsigned int, unsigned int, unsigned int, unsigned int, double, double, unsigned int, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::InstructionSet, art::gc::CollectorType, art::gc::CollectorType, art::gc::space::LargeObjectSpaceType, unsigned int, unsigned int, unsigned int, bool, unsigned int, unsigned int, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, unsigned long long)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::IntoKey(art::RuntimeArgumentMapKey<art::ProfileSaverOptions> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ProfileSaverOptions& ()>::~__func()
art::gc::Heap::AddRememberedSet(art::gc::accounting::RememberedSet*)
void std::__1::vector<unsigned short, art::ScopedArenaAllocatorAdapter<unsigned short> >::__push_back_slow_path<unsigned short const&>(unsigned short const&)
art::verifier::VerifierDeps::MaybeRecordVerificationStatus(art::DexFile const&, art::dex::TypeIndex, art::verifier::FailureKind)
art::Arm64InstructionSetFeatures::FromHwcap()
art::mirror::PrimitiveArray<float>::GetData() const
art::Dbg::EnableCollection(unsigned long long)
art::VdexFile::Header::IsMagicValid() const
art::gc::collector::ConcurrentCopying::ProcessMarkStackOnce()
art::OatFileAssistant::DexLocationToOdexFilename(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::InstructionSet, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::LogVerbosity& ()>::destroy_deallocate()
std::__1::__shared_ptr_emplace<art::ExperimentalFlags, std::__1::allocator<art::ExperimentalFlags> >::__on_zero_shared_weak()
art::ThreadPoolWorker::ThreadPoolWorker(art::ThreadPool*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int)
art::JDWP::Request::ReadFieldId()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::IntoKey(art::RuntimeArgumentMapKey<art::gc::space::LargeObjectSpaceType> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::gc::space::LargeObjectSpaceType& ()>::~__func()
art::g_malloc_allocator
art::ObjectLock<art::mirror::ClassExt>::Notify()
art::HeapChunkContext::ExamineJavaObject(art::mirror::Object*)
art::X86InstructionSetFeatures::FromBitmap(unsigned int, bool)
artGetShortInstanceFromCode
std::__1::__tree<std::__1::__value_type<int, art::ObjectRegistryEntry*>, std::__1::__map_value_compare<int, std::__1::__value_type<int, art::ObjectRegistryEntry*>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, art::ObjectRegistryEntry*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<int, art::ObjectRegistryEntry*>, void*>*)
art::ProfileSaver::IsStarted()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::IntoKey(art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds> const&)::{lambda(art::MillisecondsToNanoseconds&)#1}, std::__1::allocator<{lambda(art::MillisecondsToNanoseconds&)#1}>, void (art::MillisecondsToNanoseconds&)>::destroy()
void art::gc::collector::ConcurrentCopying::MarkRoot<true>(art::mirror::CompressedReference<art::mirror::Object>*)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1u> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1u>& ()>
artSet8InstanceFromMterp
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::IntoKey(art::RuntimeArgumentMapKey<art::verifier::VerifyMode> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::verifier::VerifyMode& ()>::__clone() const
art::gc::collector::MarkCompact::SetSpace(art::gc::space::BumpPointerSpace*)
art::verifier::RegType::IsImpreciseConstantHi() const
art::gc::ReferenceQueue::AtomicEnqueueIfNotEnqueued(art::Thread*, art::ObjPtr<art::mirror::Reference>)
art::verifier::IntegerType::CreateInstance(art::mirror::Class*, art::StringPiece const&, unsigned short)
art::Monitor::AppendToWaitSet(art::Thread*)
art::ArtField* art::FindFieldFromCode<(art::FindFieldType)4, true>(unsigned int, art::ArtMethod*, art::Thread*, unsigned int)
vtable for art::GetClassesVisitor
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::ProfileSaverOptions&)#1}, std::__1::allocator<{lambda(art::ProfileSaverOptions&)#1}>, void (art::ProfileSaverOptions&)>::destroy_deallocate()
art::verifier::MethodVerifier::ScanTryCatchBlocks()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >& ()>::operator()()
art::HeapChunkContext::AppendChunk(unsigned char, void*, unsigned int, bool)
art::gc::accounting::ModUnionTable::~ModUnionTable()
art::Trace::DumpThreadList(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::GetClassesVisitor::~GetClassesVisitor()
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::IntoKey(art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds> const&)::{lambda(art::MillisecondsToNanoseconds&)#1}, std::__1::allocator<{lambda(art::MillisecondsToNanoseconds&)#1}>, void (art::MillisecondsToNanoseconds&)>
artAllocObjectFromCodeInitializedTLABInstrumented
android::base::ScopedLogSeverity::~ScopedLogSeverity()
art::JDWP::JdwpState::JdwpState(art::JDWP::JdwpOptions const*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >& ()>::destroy_deallocate()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::XGcOption&)#1}, std::__1::allocator<{lambda(art::XGcOption&)#1}>, void (art::XGcOption&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::XGcOption&)#1}> >*) const
art::JNI::CallNonvirtualByteMethodA(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, jvalue*)
art::gc::Heap::FindContinuousSpaceFromObject(art::ObjPtr<art::mirror::Object>, bool) const
artAllocObjectFromCodeInitializedRosAllocInstrumented
art::ArtMethod::RegisterNative(void const*, bool)
void art::annotations::RuntimeEncodedStaticFieldValueIterator::ReadValueToField<true>(art::ArtField*) const
art::CatchLocationFinder::~CatchLocationFinder()
art::LinearAlloc::GetArenaPool()
art::JNI::SetStaticDoubleField(_JNIEnv*, _jclass*, _jfieldID*, double)
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sync()
art::ThrowIllegalAccessErrorClassForMethodDispatch(art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::Class>, art::ArtMethod*, art::InvokeType)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::XGcOption&)#1}, std::__1::allocator<{lambda(art::XGcOption&)#1}>, void (art::XGcOption&)>::operator()(art::XGcOption&)
art::ThreadList::AssertThreadsAreSuspended(art::Thread*, art::Thread*, art::Thread*)
art::JNI::CallByteMethodA(_JNIEnv*, _jobject*, _jmethodID*, jvalue*)
art::BuildQuickArgumentVisitor::FixupReferences()
art::BuildQuickArgumentVisitor::~BuildQuickArgumentVisitor()
art::interpreter::UnstartedRuntime::UnstartedClassGetInnerClassFlags(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::register_java_lang_invoke_MethodHandleImpl(_JNIEnv*)
MterpSetUpHotnessCountdown
art::gc::space::BumpPointerSpace::BumpPointerSpace(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned char*, unsigned char*)
art::jit::ScopedJitSuspend::~ScopedJitSuspend()
art::ObjPtr<art::mirror::Constructor> art::mirror::Class::GetDeclaredConstructorInternal<(art::PointerSize)4, true>(art::Thread*, art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::ObjectArray<art::mirror::Class> >)
std::__1::function<void (std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)>::swap(std::__1::function<void (std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)>&)
art::gc::space::ZygoteSpace::GetBytesAllocated()
art::Thread::ResetQuickAllocEntryPointsForThread(bool)
art::verifier::RegTypeCache::VisitStaticRoots(art::RootVisitor*)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Signature const&)
art::gc::space::ImageSpace::ImageSpace(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*, art::MemMap*, art::gc::accounting::SpaceBitmap<8u>*, unsigned char*)
art::DexFile::FindClassDef(art::dex::TypeIndex) const
art::JavaStackTraceHandler::JavaStackTraceHandler(art::FaultManager*)
art::JNI::GetByteField(_JNIEnv*, _jobject*, _jfieldID*)
art::BitVector::BitVector(unsigned int, bool, art::Allocator*)
art::interpreter::UnstartedRuntime::Initialize()
art::ImageHeader::VisitPackedArtFields(art::ArtFieldVisitor*, unsigned char*) const
vtable for art::VariantMapKey<art::Memory<1u> >
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ProfileSaverOptions& ()>::__clone(std::__1::__function::__base<art::ProfileSaverOptions&>*) const
art::DexFile::Header::GetVersion() const
art::interpreter::UnstartedRuntime::UnstartedUnsafePutOrderedObject(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::gc::collector::ConcurrentCopying::DisableMarking()
art::verifier::RegisterLine::PushMonitor(art::verifier::MethodVerifier*, unsigned int, int)
art::gc::Heap::RevokeAllThreadLocalAllocationStacks(art::Thread*)
art::jit::JitCodeCache::ContainsMethod(art::ArtMethod*)
art::gc::space::LargeObjectSpace::GetType() const
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned short, art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::__1::less<unsigned short>, art::ArenaAllocatorAdapter<std::__1::pair<unsigned short const, art::ProfileCompilationInfo::DexPcData> > > >, std::__1::__tree_node<std::__1::__value_type<unsigned short, art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::__1::less<unsigned short>, art::ArenaAllocatorAdapter<std::__1::pair<unsigned short const, art::ProfileCompilationInfo::DexPcData> > > >, void*>*, int>, bool> std::__1::__tree<std::__1::__value_type<unsigned short, art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::__1::less<unsigned short>, art::ArenaAllocatorAdapter<std::__1::pair<unsigned short const, art::ProfileCompilationInfo::DexPcData> > > >, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::__1::less<unsigned short>, art::ArenaAllocatorAdapter<std::__1::pair<unsigned short const, art::ProfileCompilationInfo::DexPcData> > > >, std::__1::less<unsigned short>, true>, art::ArenaAllocatorAdapter<std::__1::__value_type<unsigned short, art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::__1::less<unsigned short>, art::ArenaAllocatorAdapter<std::__1::pair<unsigned short const, art::ProfileCompilationInfo::DexPcData> > > > > >::__emplace_unique_key_args<unsigned short, unsigned short const&, art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::__1::less<unsigned short>, art::ArenaAllocatorAdapter<std::__1::pair<unsigned short const, art::ProfileCompilationInfo::DexPcData> > > const&>(unsigned short const&, unsigned short const&, art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::__1::less<unsigned short>, art::ArenaAllocatorAdapter<std::__1::pair<unsigned short const, art::ProfileCompilationInfo::DexPcData> > > const&)
art::Thread::kStackOverflowImplicitCheckSize
art::jit::JitCodeCache::DataCacheSize()
art::ThrowIllegalAccessErrorField(art::ObjPtr<art::mirror::Class>, art::ArtField*)
art::detail::CmdlineParseArgument<art::LogVerbosity>::ParseArgument(art::TokenRange const&, unsigned int*)
art::hprof::EndianOutput::HandleU1AsU2List(unsigned char const*, unsigned int)
art::JNI::UnregisterNatives(_JNIEnv*, _jclass*)
art::verifier::VerifierDeps::IsInClassPath(art::ObjPtr<art::mirror::Class>) const
art::gc::accounting::CardTable::ClearCardTable()
art::DexFile::GetIndexForStringId(art::DexFile::StringId const&) const
art::ProfileSaver::profiler_pthread_
art::Thread::FromManagedThread(art::ScopedObjectAccessAlreadyRunnable const&, art::ObjPtr<art::mirror::Object>)
art::JDWP::Request::~Request()
art::mirror::PrimitiveArray<double>::array_class_
bool art::interpreter::DoFilledNewArray<false, true, false>(art::Instruction const*, art::ShadowFrame const&, art::Thread*, art::JValue*)
MterpShouldSwitchInterpreters
art::DexFileVerifier::CheckIntraSection()
art::ZeroAndReleasePages(void*, unsigned int)
art::OatFileAssistant::GivenOatFileStatus(art::OatFile const&)
std::__1::__tree<art::mirror::Object*, std::__1::less<art::mirror::Object*>, std::__1::allocator<art::mirror::Object*> >::destroy(std::__1::__tree_node<art::mirror::Object*, void*>*)
art::gc::ReferenceProcessor::StartPreservingReferences(art::Thread*)
art::MemMap::Shutdown()
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > android::base::Join<std::__1::vector<char const*, std::__1::allocator<char const*> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::vector<char const*, std::__1::allocator<char const*> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::LockCountData::RemoveMonitorOrThrow(art::Thread*, art::mirror::Object const*)
art::interpreter::UnstartedRuntime::UnstartedJNIDoubleLongBitsToDouble(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::accounting::ModUnionUpdateObjectReferencesVisitor, art::VoidFunctor>(art::gc::accounting::ModUnionUpdateObjectReferencesVisitor const&, art::VoidFunctor const&)
std::__1::__shared_ptr_emplace<void (*)(int), std::__1::allocator<void (*)(int)> >::~__shared_ptr_emplace()
std::__1::__function::__func<void (*)(char const*), std::__1::allocator<void (*)(char const*)>, void (char const*)>::__clone(std::__1::__function::__base<void (char const*)>*) const
art::InternTable::Table::AddTableFromMemory(unsigned char const*)
art::verifier::RegisterLine::MarkAllRegistersAsConflictsExceptWide(art::verifier::MethodVerifier*, unsigned int)
art::ClassLinker::UpdateClassMethods(art::ObjPtr<art::mirror::Class>, art::LengthPrefixedArray<art::ArtMethod>*)
art::gc::space::DlMallocSpace::Trim()
art::MonitorList::MonitorList()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)::{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}, std::__1::allocator<{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}>, void (std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)>::~__func()
art::CheckJNI::GetIntArrayElements(_JNIEnv*, _jintArray*, unsigned char*)
art::verifier::VerifierDeps::Dump(art::VariableIndentationOutputStream*) const
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, int)
art::jit::JitOptions::CreateFromRuntimeArguments(art::RuntimeArgumentMap const&)
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned char const*, std::__1::vector<art::mirror::HeapReference<art::mirror::Object>*, std::__1::allocator<art::mirror::HeapReference<art::mirror::Object>*> > >, std::__1::__tree_node<std::__1::__value_type<unsigned char const*, std::__1::vector<art::mirror::HeapReference<art::mirror::Object>*, std::__1::allocator<art::mirror::HeapReference<art::mirror::Object>*> > >, void*>*, int>, bool> std::__1::__tree<std::__1::__value_type<unsigned char const*, std::__1::vector<art::mirror::HeapReference<art::mirror::Object>*, std::__1::allocator<art::mirror::HeapReference<art::mirror::Object>*> > >, std::__1::__map_value_compare<unsigned char const*, std::__1::__value_type<unsigned char const*, std::__1::vector<art::mirror::HeapReference<art::mirror::Object>*, std::__1::allocator<art::mirror::HeapReference<art::mirror::Object>*> > >, std::__1::less<unsigned char const*>, true>, std::__1::allocator<std::__1::__value_type<unsigned char const*, std::__1::vector<art::mirror::HeapReference<art::mirror::Object>*, std::__1::allocator<art::mirror::HeapReference<art::mirror::Object>*> > > > >::__emplace_unique_key_args<unsigned char const*, unsigned char const* const&, std::__1::vector<art::mirror::HeapReference<art::mirror::Object>*, std::__1::allocator<art::mirror::HeapReference<art::mirror::Object>*> > const&>(unsigned char const* const&, unsigned char const* const&, std::__1::vector<art::mirror::HeapReference<art::mirror::Object>*, std::__1::allocator<art::mirror::HeapReference<art::mirror::Object>*> > const&)
art::BuildNativeCallFrameStateMachine<art::ComputeNativeCallFrameSize>::~BuildNativeCallFrameStateMachine()
art::gc::collector::MarkSweep::ScanObject(art::mirror::Object*)
art::gc::collector::MarkSweep::VerifyRootVisitor::VisitRoot(art::mirror::Object*, art::RootInfo const&)
art::Runtime::UpdateProcessState(art::ProcessState)
art::MemMap::MapInternal(void*, unsigned int, int, int, int, long, bool)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::XGcOption&)#1}, std::__1::allocator<{lambda(art::XGcOption&)#1}>, void (art::XGcOption&)>
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::IntoKey(art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::JDWP::JdwpOptions& ()>::~__func()
art::gc::collector::MarkCompact::UpdateRootVisitor::VisitRoots(art::mirror::CompressedReference<art::mirror::Object>**, unsigned int, art::RootInfo const&)
art::verifier::RegTypeCache::FromDescriptor(art::mirror::ClassLoader*, char const*, bool)
art::verifier::MethodVerifier::VerifyClass(art::Thread*, art::mirror::Class*, art::CompilerCallbacks*, bool, art::verifier::HardFailLogMode, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::DexFile::OpenZip(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > >*)
art::detail::CmdlineParserArgumentInfo<art::LogVerbosity>::CompleteArgument()
art::ArenaBitVector::ArenaBitVector(art::ScopedArenaAllocator*, unsigned int, bool, art::ArenaAllocKind)
non-virtual thunk to art::gc::collector::ConcurrentCopying::ThreadFlipVisitor::~ThreadFlipVisitor()
art::ElfFileImpl<ElfTypes32>::Setup(unix_file::FdFile*, int, int, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::Thread::ShortDump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::DexFile::PrettyField(unsigned int, bool) const
art::detail::CmdlineParseArgument<art::JDWP::JdwpOptions>::GetNumTokens() const
deflate_copyright
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoKey(art::RuntimeArgumentMapKey<art::Unit> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>::destroy()
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int> > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
_jfloatArray* art::JNI::NewPrimitiveArray<_jfloatArray*, art::mirror::PrimitiveArray<float> >(_JNIEnv*, int)
art::JNI::CallStaticIntMethod(_JNIEnv*, _jclass*, _jmethodID*, ...)
art::ProfileSaver::FetchAndCacheResolvedClassesAndMethods(bool)
art::ProfileCompilationInfo::DexFileData::FindOrAddMethod(unsigned short)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::IntoKey(art::RuntimeArgumentMapKey<art::LogVerbosity> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::LogVerbosity& ()>::destroy()
art::QuickExceptionHandler::UpdateInstrumentationStack()
art::MemMap::DumpMaps(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, bool)
art::ClassLinker::FindClassInBootClassLoaderClassPath(art::Thread*, char const*, unsigned int)
art::detail::CmdlineParseArgument<art::LogVerbosity>::~CmdlineParseArgument()
vtable for art::RuntimeArgumentMapKey<std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > >*>
art::verifier::UnresolvedMergedType::~UnresolvedMergedType()
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Mutex const&)
art::gc::space::ZygoteSpace::~ZygoteSpace()
art::verifier::UnresolvedReferenceType::IsUnresolvedReference() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::ParseStringList<(char)58>&)#1}, std::__1::allocator<{lambda(art::ParseStringList<(char)58>&)#1}>, void (art::ParseStringList<(char)58>&)>::destroy()
art::ElfFileImpl<ElfTypes64>::FindSectionByName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
art::VariantMapKey<art::Memory<1u> >::~VariantMapKey()
artGetShortStaticFromCompiledCode
art::ElfFileImpl<ElfTypes64>::FindDynamicValueByType(int) const
art::ClassLinker::ValidateSuperClassDescriptors(art::Handle<art::mirror::Class>)
art::mirror::PrimitiveArray<short>::VisitRoots(art::RootVisitor*)
art::gc::ZygoteCompactingCollector::AddBin(unsigned int, unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}, std::__1::allocator<{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}>, void (std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)>::operator()(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)
art::StackVisitor::GetGPRAddress(unsigned int) const
art::GetDalvikCacheFilename(char const*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::TraceClockSource&)#1}, std::__1::allocator<{lambda(art::TraceClockSource&)#1}>, void (art::TraceClockSource&)>::__clone() const
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::underflow()
art::JNI::MonitorEnter(_JNIEnv*, _jobject*)
art::Runtime::IsTransactionAborted() const
art::detail::CmdlineParseArgument<art::BackgroundGcOption>::GetTypeName() const
art::VariantMapKey<art::Unit>::ValueDelete(void*) const
art::mirror::Class::SetSkipAccessChecksFlagOnAllMethods(art::PointerSize)
artGetCharInstanceFromCompiledCode
art::CumulativeLogger::kDefaultBucketCount
art::ti::AGENT_ON_UNLOAD_FUNCTION_NAME
art::ProfileCompilationInfo::ProfileCompilationInfo()
art::WellKnownClasses::java_lang_StringFactory
art::Barrier::Increment(art::Thread*, int)
art::ElfFileImpl<ElfTypes32>::GetSectionHeader(unsigned int) const
art::mirror::Class::GetDescriptor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::OatFile::GetClassLoaderContext() const
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<art::BackgroundGcOption>(art::RuntimeArgumentMapKey<art::BackgroundGcOption> const&)
art::detail::CmdlineParserArgumentInfo<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::CmdlineParserArgumentInfo(art::detail::CmdlineParserArgumentInfo<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >&&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::ThrowIllegalAccessErrorMethod(art::ObjPtr<art::mirror::Class>, art::ArtMethod*)
art::NonDebuggableClasses::AddNonDebuggableClass(_jclass*)
art::ElfFileImpl<ElfTypes32>::FixupSymbols(unsigned int, bool)
art::gc::ReferenceQueue::EnqueueFinalizerReferences(art::gc::ReferenceQueue*, art::gc::collector::GarbageCollector*)
art::JNI::NewDirectByteBuffer(_JNIEnv*, void*, long long)
art::JNI::GetCharArrayElements(_JNIEnv*, _jcharArray*, unsigned char*)
crc32
std::__1::__split_buffer<art::Task**, std::__1::allocator<art::Task**> >::push_back(art::Task**&&)
art::FileExistsAndNotEmpty(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::Runtime::GetPreAllocatedNoClassDefFoundError()
art::JNI::CallFloatMethodA(_JNIEnv*, _jobject*, _jmethodID*, jvalue*)
art::register_java_lang_ref_Reference(_JNIEnv*)
art::gc::space::MallocSpace::ClampGrowthLimit()
art::MemMap::~MemMap()
art::gc::accounting::SpaceBitmap<8u>::OffsetToMask(unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::IntoKey(art::RuntimeArgumentMapKey<art::TraceClockSource> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::TraceClockSource& ()>::~__func()
unix_file::FdFile::FdFile(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
art::WellKnownClasses::java_nio_DirectByteBuffer_init
art::JNI::CallStaticObjectMethodA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::IntoKey(art::RuntimeArgumentMapKey<art::TraceClockSource> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::TraceClockSource& ()>::destroy()
std::__1::__tree<art::gc::HeapTask*, art::gc::TaskProcessor::CompareByTargetRunTime, std::__1::allocator<art::gc::HeapTask*> >::destroy(std::__1::__tree_node<art::gc::HeapTask*, void*>*)
MterpConstString
art::WellKnownClasses::java_lang_invoke_MethodHandle_invokeExact
art::ThreadList::ThreadList(unsigned long long)
vtable for art::Mips64InstructionSetFeatures
non-virtual thunk to art::gc::collector::MarkCompact::IsMarked(art::mirror::Object*)
art::Trace::MethodUnwind(art::Thread*, art::Handle<art::mirror::Object>, art::ArtMethod*, unsigned int)
art::SignalCatcher::Run(void*)
artAllocObjectFromCodeInitializedRegionTLAB
art::gc::Heap::ChangeAllocator(art::gc::AllocatorType)
art::gc::allocator::RosAlloc::dedicated_full_run_storage_
art::gc::collector::StickyMarkSweep::MarkConcurrentRoots(art::VisitRootFlags)
art::OatHeader::SetImageFileLocationOatChecksum(unsigned int)
art::gc::space::BumpPointerSpace::BumpPointerSpace(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::MemMap*)
art::NullPointerHandler::~NullPointerHandler()
art::interpreter::UnstartedRuntime::UnstartedMemoryPeekShort(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::Signature::GetNumberOfParameters() const
bool art::interpreter::DoFieldGet<(art::FindFieldType)2, (art::Primitive::Type)4, false>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::JNI::CallNonvirtualBooleanMethodV(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, char*)
art::RuntimeArgumentMap::ShowVersion
art::detail::CmdlineParserArgumentInfo<art::XGcOption>::~CmdlineParserArgumentInfo()
art::gc::allocator::RosAlloc::FreePageRun::ShouldReleasePages(art::gc::allocator::RosAlloc*)
art::CHAStackVisitor::VisitFrame()
non-virtual thunk to art::gc::space::ContinuousMemMapAllocSpace::~ContinuousMemMapAllocSpace()
art::register_dalvik_system_ZygoteHooks(_JNIEnv*)
art::ThrowSecurityException(char const*, ...)
art::VarArgs::GetValue(char)
art::CheckJII::DetachCurrentThread(_JavaVM*)
art::ClassLinker::RegisterBootClassPathDexFile(art::DexFile const&, art::ObjPtr<art::mirror::DexCache>)
art::JNI::CallStaticVoidMethod(_JNIEnv*, _jclass*, _jmethodID*, ...)
vtable for art::CHACheckpoint
art::JavaVMExt::Create(art::Runtime*, art::RuntimeArgumentMap const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::CompleteArgument()
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::BackgroundGcOption> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::BackgroundGcOption& ()>::operator()()
art::verifier::FloatType::~FloatType()
art::Arena::Arena()
art::ClassLinker::AllocClass(art::Thread*, unsigned int)
art::gc::collector::SemiSpace::MarkingPhase()
art::gc::accounting::MemoryRangeBitmap<1024u>::MemoryRangeBitmap(art::MemMap*, unsigned int, unsigned int)
non-virtual thunk to art::gc::space::LargeObjectMapSpace::~LargeObjectMapSpace()
art::JNI::ReleaseFloatArrayElements(_JNIEnv*, _jfloatArray*, float*, int)
art::mirror::String::AllocFromModifiedUtf8(art::Thread*, int, char const*, int)
art::ti::Agent::Agent(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
art::gc::accounting::ModUnionTableReferenceCache::Verify()
art::gc::accounting::SpaceBitmap<8u>::SweepWalk(art::gc::accounting::SpaceBitmap<8u> const&, art::gc::accounting::SpaceBitmap<8u> const&, unsigned int, unsigned int, void (*)(unsigned int, art::mirror::Object**, void*), void*)
art::UContext::DumpRegister32(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned int) const
art::gc::space::BumpPointerSpace::GetSweepCallback()
art::mirror::Class::SetDexCache(art::ObjPtr<art::mirror::DexCache>)
std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::DexFile const*>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::DexFile const*>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::DexFile const*>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::DexFile const*>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::DexFile const*> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
bool art::mirror::ObjectArray<art::mirror::StackTraceElement>::CheckAssignable<(art::VerifyObjectFlags)0>(art::ObjPtr<art::mirror::StackTraceElement>)
art::Allocator::GetNoopAllocator()
art::WellKnownClasses::java_lang_Thread_dispatchUncaughtException
art::JNI::IsInstanceOf(_JNIEnv*, _jobject*, _jclass*)
art::RuntimeArgumentMap::LargeObjectSpace
art::gc::allocator::RosAlloc::FreeInternal(art::Thread*, void*)
art::Runtime::RecordWriteField32(art::mirror::Object*, art::MemberOffset, unsigned int, bool) const
art::gc::space::RosAllocSpace::GetFootprintLimit()
vtable for art::verifier::UninitializedType
art::JDWP::JdwpAdbState::Establish(art::JDWP::JdwpOptions const*)
art::gc::Verification::IsValidClass(void const*) const
art::RememberForGcArgumentVisitor::~RememberForGcArgumentVisitor()
art::ClassLinker::LoadField(art::ClassDataItemIterator const&, art::Handle<art::mirror::Class>, art::ArtField*)
art::Dbg::CreateObject(unsigned long long, unsigned long long*)
art::VariantMapKey<art::CompilerCallbacks*>::~VariantMapKey()
art::hprof::EndianOutputBuffered::~EndianOutputBuffered()
zcfree
art::mirror::Object::Clone(art::Thread*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::ParseStringList<(char)58>&)#1}, std::__1::allocator<{lambda(art::ParseStringList<(char)58>&)#1}>, void (art::ParseStringList<(char)58>&)>::__clone() const
art::mirror::Object* art::gc::Heap::AllocObjectWithAllocator<true, true, art::mirror::SetLengthVisitor>(art::Thread*, art::ObjPtr<art::mirror::Class>, unsigned int, art::gc::AllocatorType, art::mirror::SetLengthVisitor const&)
art::RuntimeArgumentMapKey<int (*)(__sFILE*, char const*, char*)>::~RuntimeArgumentMapKey()
art::Transaction::ArrayLog::LogValue(unsigned int, unsigned long long)
art::ClassLinker::LinkInstanceFields(art::Thread*, art::Handle<art::mirror::Class>)
art::Dbg::DisposeObject(unsigned long long, unsigned int)
art::gc::accounting::SpaceBitmap<4096u>::SpaceBitmap(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::MemMap*, unsigned int*, unsigned int, void const*, unsigned int)
art::Dbg::DbgThreadLifecycleCallback::ThreadStart(art::Thread*)
art::gc::space::MemoryToolMallocSpace<art::gc::space::RosAllocSpace, 8u, false, true>::MaxBytesBulkAllocatedFor(unsigned int)
art::JDWP::Request::ReadTypeTag()
art::mips::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::mips::VectorRegister const&)
art::gc::collector::MarkCompact::ForwardObject(art::mirror::Object*)
art::Closure::~Closure()
art::Dbg::OutputDeclaredMethods(unsigned long long, bool, art::JDWP::ExpandBuf*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::verifier::VerifyMode& ()>::__clone(std::__1::__function::__base<art::verifier::VerifyMode&>*) const
art::ElfFile::FindDynamicSymbolAddress(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
art::JNI::MonitorExit(_JNIEnv*, _jobject*)
art::Dbg::DdmDisconnected()
non-virtual thunk to art::gc::space::FreeListSpace::Alloc(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::JavaVMExt::BroadcastForNewWeakGlobals()
art::ProfileCompilationInfo::AddMethodIndex(art::ProfileCompilationInfo::MethodHotness::Flag, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned short, unsigned int)
art::Runtime::ParseOptions(std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void const*>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void const*> > > const&, bool, art::RuntimeArgumentMap*)
art::CheckJNI::GetFieldIDInternal(char const*, _JNIEnv*, _jclass*, char const*, char const*, bool)
art::gc::allocator::RosAlloc::dedicated_full_run_
art::interpreter::UnstartedRuntime::UnstartedSystemArraycopyChar(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::Instruction::kInstructionNames
art::CreateJITCodeEntryForAddress(unsigned int, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >)
std::__1::__tree_node_base<void*>*& std::__1::__tree<art::Histogram<unsigned long long>*, art::CumulativeLogger::HistogramComparator, std::__1::allocator<art::Histogram<unsigned long long>*> >::__find_equal<art::Histogram<unsigned long long>*>(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, art::Histogram<unsigned long long>* const&)
void art::mirror::Class::GetAccessFlagsDCheck<(art::VerifyObjectFlags)2>()
art::gc::TaskProcessor::TaskProcessor()
art::gc::accounting::MemoryRangeBitmap<16u>::CreateFromMemMap(art::MemMap*, unsigned int, unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}, std::__1::allocator<{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}>, void (std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)>::destroy_deallocate()
art::mirror::Class::CopyOf(art::Thread*, int, art::ImTable*, art::PointerSize)
art::Thread::DumpFromGdb() const
art::TypeLookupTable::CalculateMask(unsigned int)
art::CheckJNI::SetShortField(_JNIEnv*, _jobject*, _jfieldID*, short)
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf32_Sym*>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf32_Sym*>, void*>*, int>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf32_Sym*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf32_Sym*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf32_Sym*> > >::__emplace_unique_impl<std::__1::pair<char const*, Elf32_Sym*> >(std::__1::pair<char const*, Elf32_Sym*>&&)
art::gc::Heap::TransitionCollector(art::gc::CollectorType)
bool art::interpreter::DoIGetQuick<(art::Primitive::Type)6>(art::ShadowFrame&, art::Instruction const*, unsigned short)
art::Trace::GetOutputMode()
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > const&)
unix_file::FdFile::moveUp(unix_file::FdFile::GuardState, char const*)
art::LinkVirtualHashTable::Add(unsigned int)
android::base::LogMessage::LogLine(char const*, unsigned int, android::base::LogId, android::base::LogSeverity, char const*)
art::gc::space::Space::AsContinuousMemMapAllocSpace()
art::detail::CmdlineParseArgument<art::BackgroundGcOption>::MaybeMatches(art::TokenRange const&)
std::__1::function<void (bool&)>::swap(std::__1::function<void (bool&)>&)
art::gc::TrimIndirectReferenceTableClosure::Run(art::Thread*)
art::instrumentation::Instrumentation::UpdateMethodsCode(art::ArtMethod*, void const*)
art::JavaFrameRootInfo::~JavaFrameRootInfo()
art::Trace::Abort()
vtable for std::__1::__shared_ptr_pointer<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination*, std::__1::default_delete<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>, std::__1::allocator<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination> >
art::gc::accounting::SpaceBitmap<8u>::Clear()
art::CheckJNI::SetByteField(_JNIEnv*, _jobject*, _jfieldID*, signed char)
art::gc::Heap::SetGcPauseListener(art::gc::GcPauseListener*)
art::CheckJNI::NewObjectArray(_JNIEnv*, int, _jclass*, _jobject*)
art::WellKnownClasses::java_lang_Throwable_stackTrace
std::__1::unordered_set<void*, std::__1::hash<void*>, std::__1::equal_to<void*>, std::__1::allocator<void*> >::~unordered_set()
_ZNSt3__16vectorIN3art4UnitENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_
art::gc::space::ImageSpace::ImageSpace(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*, art::MemMap*, art::gc::accounting::SpaceBitmap<8u>*, unsigned char*)
art::Thread::TearDownAlternateSignalStack()
art::Locks::reference_processor_lock_
art::Split(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)
art::gc::space::MemoryToolLargeObjectMapSpace::Free(art::Thread*, art::mirror::Object*)
void art::mirror::DexCache::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::gc::collector::ConcurrentCopying::VerifyNoMissingCardMarkVisitor>(art::ObjPtr<art::mirror::Class>, art::gc::collector::ConcurrentCopying::VerifyNoMissingCardMarkVisitor const&)
inflateCopy
art::Dbg::ClearWaitForEventThread()
art::gc::space::RosAllocSpace::RevokeAllThreadLocalBuffers()
art::gc::space::RosAllocSpace::DumpStats(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::OatHeader::SetQuickImtConflictTrampolineOffset(unsigned int)
std::__1::__shared_ptr_emplace<art::InstructionSet, std::__1::allocator<art::InstructionSet> >::__on_zero_shared_weak()
vtable for art::RuntimeArgumentMapKey<art::XGcOption>
art::gc::space::RegionSpace::AllocationSize(art::mirror::Object*, unsigned int*)
art::gc::accounting::CardTable::VerifyCardTable()
std::__1::__tree<std::__1::__value_type<unsigned int, unsigned int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned int>, std::__1::less<unsigned int>, true>, art::ScopedArenaAllocatorAdapter<std::__1::__value_type<unsigned int, unsigned int> > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned int>, void*>*)
std::__1::__split_buffer<art::instrumentation::InstrumentationStackFrame*, std::__1::allocator<art::instrumentation::InstrumentationStackFrame*> >::push_front(art::instrumentation::InstrumentationStackFrame*&&)
art::register_libcore_util_CharsetUtils(_JNIEnv*)
vtable for art::RuntimeArgumentMapKey<double>
art::jit::JitCodeCache::MarkCompiledCodeOnThreadStacks(art::Thread*)
void std::__1::__sift_down<art::FieldGapsComparator&, std::__1::__wrap_iter<art::FieldGap*> >(std::__1::__wrap_iter<art::FieldGap*>, std::__1::__wrap_iter<art::FieldGap*>, art::FieldGapsComparator&, std::__1::iterator_traits<std::__1::__wrap_iter<art::FieldGap*> >::difference_type, std::__1::__wrap_iter<art::FieldGap*>)
std::__1::__tree<art::gc::allocator::RosAlloc::FreePageRun*, std::__1::less<art::gc::allocator::RosAlloc::FreePageRun*>, std::__1::allocator<art::gc::allocator::RosAlloc::FreePageRun*> >::destroy(std::__1::__tree_node<art::gc::allocator::RosAlloc::FreePageRun*, void*>*)
art::VerifyRootVisitor::VisitRoot(art::mirror::Object*, art::RootInfo const&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > android::base::Join<std::__1::vector<char const*, std::__1::allocator<char const*> >, char>(std::__1::vector<char const*, std::__1::allocator<char const*> > const&, char)
art::ClassLinker::ClassInClassTable(art::ObjPtr<art::mirror::Class>)
art::Thread::PushStackedShadowFrame(art::ShadowFrame*, art::StackedShadowFrameType)
art::RuntimeCallbacks::AddRuntimePhaseCallback(art::RuntimePhaseCallback*)
art::JavaVMExt::ShouldTrace(art::ArtMethod*)
art::WellKnownClasses::java_lang_ThreadGroup_ngroups
art::Dbg::BuildInvokeReply(art::JDWP::ExpandBuf*, unsigned int, art::JDWP::JdwpTag, unsigned long long, unsigned long long)
art::jit::Jit::Create(art::jit::JitOptions*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::OatMethodOffsets::~OatMethodOffsets()
vtable for std::__1::__shared_ptr_emplace<double, std::__1::allocator<double> >
std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()
art::CheckJNI::SetFloatArrayRegion(_JNIEnv*, _jfloatArray*, int, int, float const*)
art::detail::CmdlineParseArgument<art::MillisecondsToNanoseconds>::GetTypeName() const
art::instrumentation::Instrumentation::RequiresInstrumentationInstallation(art::instrumentation::Instrumentation::InstrumentationLevel) const
art::JNI::CallNonvirtualIntMethodV(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, char*)
art::mirror::Class::GetArrayDescriptor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
virtual thunk to std::__1::basic_istream<char, std::__1::char_traits<char> >::~basic_istream()
art::DexFileVerifier::CheckLoadFieldId(unsigned int, char const*)
non-virtual thunk to art::gc::collector::MarkSweep::CheckpointMarkThreadRoots::~CheckpointMarkThreadRoots()
art::register_sun_misc_Unsafe(_JNIEnv*)
artSetBooleanStaticFromCode
unsigned int art::gc::accounting::CardTable::Scan<false, art::gc::collector::MarkSweep::MarkStackTask<false>::ScanObjectParallelVisitor>(art::gc::accounting::SpaceBitmap<8u>*, unsigned char*, unsigned char*, art::gc::collector::MarkSweep::MarkStackTask<false>::ScanObjectParallelVisitor const&, unsigned char)
art::JDWP::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::JDWP::JdwpThreadStatus const&)
art::gc::space::LargeObjectMapSpace::Free(art::Thread*, art::mirror::Object*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, unsigned int& ()>::destroy_deallocate()
art::CheckJNI::CallNonvirtualFloatMethodA(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, jvalue*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::BackgroundGcOption& ()>::~__func()
art::RuntimeArgumentMap::Plugins
art::gc::space::MemoryToolMallocSpace<art::gc::space::RosAllocSpace, 8u, false, true>::RegisterRecentFree(art::mirror::Object*)
art::verifier::ByteType::CreateInstance(art::mirror::Class*, art::StringPiece const&, unsigned short)
art::DebugInstrumentationListener::MethodExited(art::Thread*, art::Handle<art::mirror::Object>, art::ArtMethod*, unsigned int, art::JValue const&)
art::JavaVMExt::AllowNewWeakGlobals()
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags> art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::CreateTypedBuilder<art::ExperimentalFlags>()
art::OatHeader::GetKeyValueStore() const
art::gc::accounting::ModUnionTableCardCache::~ModUnionTableCardCache()
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::gc::accounting::RememberedSetReferenceVisitor const>(art::gc::accounting::RememberedSetReferenceVisitor const&, art::PointerSize)
art::instrumentation::Instrumentation::MethodUnwindEvent(art::Thread*, art::mirror::Object*, art::ArtMethod*, unsigned int) const
art::ArtField* art::FindFieldFromCode<(art::FindFieldType)5, true>(unsigned int, art::ArtMethod*, art::Thread*, unsigned int)
art::ClassLinker::GetRuntimeQuickGenericJniStub() const
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Instruction::Code const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::IntoKey(art::RuntimeArgumentMapKey<art::ParseStringList<(char)58> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ParseStringList<(char)58>& ()>::__clone() const
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)6, false, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::instrumentation::Instrumentation::ExceptionCaughtEvent(art::Thread*, art::mirror::Throwable*) const
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::IntoKey(art::RuntimeArgumentMapKey<art::verifier::VerifyMode> const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::BackgroundGcOption& ()>::__clone(std::__1::__function::__base<art::BackgroundGcOption&>*) const
art::DexFileVerifier::CheckIntraStringDataItem()
non-virtual thunk to art::gc::space::MemoryToolMallocSpace<art::gc::space::DlMallocSpace, 8u, true, false>::~MemoryToolMallocSpace()
art::InvokeVirtualOrInterfaceWithJValues(art::ScopedObjectAccessAlreadyRunnable const&, _jobject*, _jmethodID*, jvalue*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoIgnore()::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}> >*) const
art::Dbg::dex_pc_change_event_ref_count_
bool art::interpreter::DoIPutQuick<(art::Primitive::Type)5, false>(art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::hprof::Hprof::LookupStackTraceSerialNumber(art::mirror::Object const*)
art::ClassLinker::ResolveString(art::DexFile const&, art::dex::StringIndex, art::Handle<art::mirror::DexCache>)
art::ConditionVariable::~ConditionVariable()
art::JDWP::JdwpTag art::JDWP::Request::ReadEnum1<art::JDWP::JdwpTag>(char const*)
art::Transaction::RecordResolveString(art::ObjPtr<art::mirror::DexCache>, art::dex::StringIndex)
art::Arm64InstructionSetFeatures::GetInstructionSet() const
android::base::KernelLogger(android::base::LogId, android::base::LogSeverity, char const*, char const*, unsigned int, char const*)
void art::mirror::Object::VisitFieldsReferences<false, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::FixupInternVisitor>(unsigned int, art::FixupInternVisitor const&)
art::Thread::Attach(char const*, bool, _jobject*)
bool art::interpreter::DoFieldGet<(art::FindFieldType)6, (art::Primitive::Type)6, false>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
artAllocStringFromStringFromCodeTLABInstrumented
art::jit::Jit::Start()
art::Primitive::ComponentSize(art::Primitive::Type)
art::ProfileSaver::ForceProcessProfiles()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoIgnore()::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>::__clone(std::__1::__function::__base<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&>*) const
art::ArenaAllocator::Contains(void const*) const
art::ClassLinker::ShouldUseInterpreterEntrypoint(art::ArtMethod*, void const*)
art::Thread::DumpState(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::CheckJNI::GetStaticShortField(_JNIEnv*, _jclass*, _jfieldID*)
art::GetClassLoadersVisitor::Visit(art::ObjPtr<art::mirror::ClassLoader>)
std::__1::__hash_table<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int> >::__rehash(unsigned int)
art::ElfFileImpl<ElfTypes32>::GetSymbolSectionStart(unsigned int) const
art::BackgroundGcOption& art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination::GetOrCreateFromMap<art::BackgroundGcOption>(art::RuntimeArgumentMapKey<art::BackgroundGcOption> const&)
art::RuntimeArgumentMap::ZygoteMaxFailedBoots
art::verifier::MethodVerifier::AppendToLastFailMessage(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::gc::accounting::ModUnionTableCardCache::VisitObjects(void (*)(art::mirror::Object*, void*), void*)
art::X86InstructionSetFeatures::FromCppDefines(bool)
non-virtual thunk to art::gc::space::MemoryToolMallocSpace<art::gc::space::RosAllocSpace, 8u, false, true>::FreeList(art::Thread*, unsigned int, art::mirror::Object**)
art::RuntimeArgumentMap::ImageInstructionSet
art::VariantMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::ValueClone(void*) const
art::JDWP::Request::Read2BE()
art::StackVisitor::GetRegisterPairIfAccessible(unsigned int, unsigned int, art::VRegKind, unsigned long long*) const
unix_file::CopyFile(unix_file::RandomAccessFile const&, unix_file::RandomAccessFile*)
art::MonitorList::Add(art::Monitor*)
art::LinearAlloc::Alloc(art::Thread*, unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::IntoKey(art::RuntimeArgumentMapKey<double> const&)::{lambda(double&)#1}, std::__1::allocator<{lambda(double&)#1}>, void (double&)>::operator()(double&)
art::ConditionVariable::Signal(art::Thread*)
art::gc::space::ImageSpace::VerifyImageAllocations()
std::__1::function<art::Memory<1024u>& ()>::swap(std::__1::function<art::Memory<1024u>& ()>&)
art::Thread::jit_sensitive_thread_
std::__1::basic_filebuf<char, std::__1::char_traits<char> >::~basic_filebuf()
art::MemMap::MemMap(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned char*, unsigned int, void*, unsigned int, int, bool, unsigned int)
void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__emplace_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&)
__divdi3
art::gc::collector::MarkSweep::RecursiveMarkDirtyObjects(bool, unsigned char)
art::ClassTable::AddClassSet(art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> >&&)
void art::JNI::SetPrimitiveArrayRegion<_jcharArray*, unsigned short, art::mirror::PrimitiveArray<unsigned short> >(_JNIEnv*, _jcharArray*, int, int, unsigned short const*)
art::gc::accounting::CardTable::~CardTable()
art::verifier::LongLoType const* art::verifier::RegTypeCache::CreatePrimitiveTypeInstance<art::verifier::LongLoType>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::basic_istream<char, std::__1::char_traits<char> >::~basic_istream()
art::detail::CmdlineParseArgument<art::Memory<1024u> >::MaybeMatches(art::TokenRange const&)
art::gc::space::FreeListSpace::~FreeListSpace()
art::WellKnownClasses::java_lang_Thread_init
void std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >::__push_back_slow_path<unsigned long long const&>(unsigned long long const&)
art::gc::accounting::SpaceBitmap<4096u>::CreateFromMemMap(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::MemMap*, unsigned char*, unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >& ()>::__clone(std::__1::__function::__base<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&>*) const
art::WellKnownClasses::dalvik_annotation_optimization_CriticalNative
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)6, true, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
_Unwind_SetGR
art::DexFileVerifier::CheckLoadStringByIdx(art::dex::StringIndex, char const*)
art::ElfFileImpl<ElfTypes64>::FindProgamHeaderByType(unsigned int) const
art::gc::space::RegionSpace::CreateMemMap(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned char*)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >& ()>
art::gc::Heap::ConcurrentGC(art::Thread*, art::gc::GcCause, bool)
art::Mips64InstructionSetFeatures::FromAssembly()
art::mirror::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::mirror::Class::Status const&)
art::MallocAllocator::~MallocAllocator()
art::gc::accounting::RememberedSet::UpdateAndMarkReferences(art::gc::space::ContinuousSpace*, art::gc::collector::GarbageCollector*)
art::CmdlineType<art::JDWP::JdwpOptions>::Parse(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
artSet64StaticFromCode
CloseArchive(void*)
art::verifier::UnresolvedMergedType::IsUnresolvedMergedReference() const
art::mirror::PrimitiveArray<short>::SetArrayClass(art::ObjPtr<art::mirror::Class>)
short* art::JNI::GetPrimitiveArray<_jshortArray*, short, art::mirror::PrimitiveArray<short> >(_JNIEnv*, _jshortArray*, unsigned char*)
art::CheckJNI::CallNonvirtualCharMethodA(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, jvalue*)
art::gc::collector::SemiSpace::MarkObject<false>(art::mirror::ObjectReference<false, art::mirror::Object>*)::{lambda(art::mirror::Object const*)#1}::operator()(art::mirror::Object const*) const
art::gc::AllocRecordObjectMap::~AllocRecordObjectMap()
art::RuntimeArgumentMap::MemoryMaximumSize
unix_file::FdFile::PwriteFully(void const*, unsigned int, unsigned int)
void art::ClassTable::VisitRoots<art::gc::space::ImageSpaceLoader::FixupRootVisitor>(art::gc::space::ImageSpaceLoader::FixupRootVisitor&)
art::CheckJNI::ThrowNew(_JNIEnv*, _jclass*, char const*)
art::mirror::Method* art::mirror::Method::CreateFromArtMethod<(art::PointerSize)4, true>(art::Thread*, art::ArtMethod*)
art::gc::collector::MarkSweep::MarkSweep(art::gc::Heap*, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
artInvokeInterfaceTrampolineWithAccessCheck
art::OatHeader::IsPic() const
art::LinkVirtualHashTable::removed_index_
art::JDWP::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::JDWP::JdwpTag const&)
art::interpreter::UnstartedRuntime::UnstartedJNIUnsafePutObject(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
art_d2i
artAllocStringFromCharsFromCodeTLABInstrumented
art::CheckJNI::CallStaticIntMethodA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
art::VdexFile::GetQuickenedInfoOf(art::DexFile const&, unsigned int) const
art::RuntimeArgumentMap::MethodTraceFile
art_d2l
art::ClassLinker::LinkInterfaceMethodsHelper::GetOrCreateMirandaMethod(art::ArtMethod*, art::MethodNameAndSignatureComparator&)
art::Monitor::MonitorExit(art::Thread*, art::mirror::Object*)
art::OatDexFile::~OatDexFile()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, double& ()>::~__func()
art::Dbg::GetTagWidth(art::JDWP::JdwpTag)
art::gc::space::RegionSpace::AllocationSizeNonvirtual(art::mirror::Object*, unsigned int*)
art::verifier::MethodVerifier::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
artAllocStringFromStringFromCodeTLAB
art::ClassLinker::RegisterExistingDexCache(art::ObjPtr<art::mirror::DexCache>, art::ObjPtr<art::mirror::ClassLoader>)
art::CmdlineType<art::XGcOption>::Parse(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
construction vtable for std::__1::basic_istream<char, std::__1::char_traits<char> >-in-std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
art::ArtMethod::HasAnyCompiledCode()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::MillisecondsToNanoseconds& ()>::__clone() const
bool art::interpreter::DoFieldPut<(art::FindFieldType)1, (art::Primitive::Type)0, true, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)4, true, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)
void art::mirror::ObjectArray<art::mirror::Object>::VisitReferences<art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsFieldVisitor>(art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsFieldVisitor const&)
non-virtual thunk to art::gc::collector::MarkSweep::CheckpointMarkThreadRoots::VisitRoots(art::mirror::Object***, unsigned int, art::RootInfo const&)
art::mirror::StackTraceElement::Alloc(art::Thread*, art::Handle<art::mirror::String>, art::Handle<art::mirror::String>, art::Handle<art::mirror::String>, int)
art::gc::space::ContinuousMemMapAllocSpace::~ContinuousMemMapAllocSpace()
void std::__1::vector<art::GcRoot<art::mirror::Object>, std::__1::allocator<art::GcRoot<art::mirror::Object> > >::__push_back_slow_path<art::GcRoot<art::mirror::Object> >(art::GcRoot<art::mirror::Object>&&)
art::gc::space::MemoryToolLargeObjectMapSpace::AllocationSize(art::mirror::Object*, unsigned int*)
artAllocStringFromBytesFromCodeRegionInstrumented
art::CodeSimulatorContainer::~CodeSimulatorContainer()
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)4, true, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::verifier::VerifierDeps::VerifyClasses(art::Handle<art::mirror::ClassLoader>, art::DexFile const&, std::__1::set<art::verifier::VerifierDeps::ClassResolution, std::__1::less<art::verifier::VerifierDeps::ClassResolution>, std::__1::allocator<art::verifier::VerifierDeps::ClassResolution> > const&, art::Thread*) const
android::base::StartsWith(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*)
art::gc::space::RegionSpace::DumpRegions(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::JNI::EnsureLocalCapacityInternal(art::ScopedObjectAccess&, int, char const*)
_ZNSt3__16vectorINS_4pairIPKcN3art16TraceClockSourceEEENS_9allocatorIS6_EEE6assignIPKS6_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISE_E9referenceEEE5valueEvE4typeESE_SE_
art::OatFileManager::FindOpenedOatFileFromOatLocation(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)
art::mirror::Object* art::gc::Heap::AllocLargeObject<false, art::mirror::SetStringCountAndValueVisitorFromCharArray>(art::Thread*, art::ObjPtr<art::mirror::Class>*, unsigned int, art::mirror::SetStringCountAndValueVisitorFromCharArray const&)
art::interpreter::UnstartedRuntime::UnstartedSystemGetProperty(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::ProfileSaver::ResolveTrackedLocations()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::verifier::VerifyMode&)#1}, std::__1::allocator<{lambda(art::verifier::VerifyMode&)#1}>, void (art::verifier::VerifyMode&)>::~__func()
android::base::LogdLogger::LogdLogger(android::base::LogId)
art::JNI::GetJavaVM(_JNIEnv*, _JavaVM**)
art::detail::CmdlineParseArgument<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::~CmdlineParseArgument()
void std::__1::vector<art::GcRoot<art::mirror::Object>, std::__1::allocator<art::GcRoot<art::mirror::Object> > >::__push_back_slow_path<art::GcRoot<art::mirror::Object> const&>(art::GcRoot<art::mirror::Object> const&)
art::Arm64InstructionSetFeatures::Equals(art::InstructionSetFeatures const*) const
_Unwind_SetIP
art::JDWP::expandBufAdd4BE(art::JDWP::ExpandBuf*, unsigned int)
art::mirror::Object* art::gc::space::memory_tool_details::AdjustForValgrind<8u, false>(void*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::JDWP::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::JDWP::JdwpEventKind const&)
vtable for art::verifier::ImpreciseConstHiType
art::MemMap::Init()
void std::__1::vector<art::gc::accounting::AtomicStack<art::mirror::Object>*, std::__1::allocator<art::gc::accounting::AtomicStack<art::mirror::Object>*> >::__push_back_slow_path<art::gc::accounting::AtomicStack<art::mirror::Object>* const&>(art::gc::accounting::AtomicStack<art::mirror::Object>* const&)
art::gc::space::Space::IsContinuousMemMapAllocSpace() const
art::PrintableChar(unsigned short)
art::ProfileCompilationInfo::AddMethodIndex(art::ProfileCompilationInfo::MethodHotness::Flag, art::MethodReference const&)
art::detail::CmdlineParserArgumentInfo<art::JDWP::JdwpOptions>::~CmdlineParserArgumentInfo()
art::QuickArgumentVisitor::VisitArguments()
art::WellKnownClasses::java_lang_reflect_Parameter
art::gc::accounting::SpaceBitmap<8u>::ClearVisitor::ClearVisitor(art::gc::accounting::SpaceBitmap<8u>*)
bool art::interpreter::DoFieldGet<(art::FindFieldType)6, (art::Primitive::Type)1, false>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::CheckJNI::GetByteArrayRegion(_JNIEnv*, _jbyteArray*, int, int, signed char*)
art::OatFileAssistant::DexChecksumUpToDate(art::OatFile const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::ThreadList::DumpNativeStacks(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::DexFile::FindStringId(unsigned short const*, unsigned int) const
art::detail::CmdlineParseArgument<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::GetTypeName() const
std::__1::__tree<art::gc::space::AllocationInfo*, art::gc::space::FreeListSpace::SortByPrevFree, std::__1::allocator<art::gc::space::AllocationInfo*> >::destroy(std::__1::__tree_node<art::gc::space::AllocationInfo*, void*>*)
void std::__1::vector<std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::allocator<std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >*> >::__push_back_slow_path<std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >* const&>(std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >* const&)
art::verifier::MethodVerifier::CheckVarArgRegs(unsigned int, unsigned int*)
art::mirror::PrimitiveArray<float>::SetArrayClass(art::ObjPtr<art::mirror::Class>)
art::Instruction::kInstructionDescriptors
art::gc::space::FreeListSpace::GetAllocationInfoForAddress(unsigned int) const
art::verifier::DoubleHiType::CreateInstance(art::mirror::Class*, art::StringPiece const&, unsigned short)
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<art::verifier::VerifyMode>(art::RuntimeArgumentMapKey<art::verifier::VerifyMode> const&)
art::gc::collector::SemiSpace::~SemiSpace()
art::DexFile::IsMagicValid(unsigned char const*)
art::SharedLibrary::FindSymbolWithNativeBridge(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*)
art::Trace::GetMode()
artSet32StaticFromCompiledCode
art::Runtime::UseJitCompilation() const
art::gc::space::RegionSpace::LogFragmentationAllocFailure(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, unsigned int)
art::gc::Heap::SwapStacks()
art::interpreter::UnstartedRuntime::UnstartedDoubleDoubleToRawLongBits(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
mspace_malloc_stats
art::JNI::GetStringUTFRegion(_JNIEnv*, _jstring*, int, int, char*)
int art::interpreter::MterpSetStatic<signed char, (art::Primitive::Type)2>(unsigned int, signed char, art::ArtMethod*, art::Thread*, void (art::ArtField::*)(art::ObjPtr<art::mirror::Object>, signed char))
art::ThrowNullPointerExceptionFromDexPC(bool, unsigned int)
art::gc::collector::ConcurrentCopying::ConcurrentCopying(art::gc::Heap*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
art::DexFile::LineNumForPcCb(void*, art::DexFile::PositionInfo const&)
art::RuntimeArgumentMap::Compiler
vtable for std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
art::Runtime::DeoptimizeBootImage()
void std::__1::vector<art::RuntimePhaseCallback*, std::__1::allocator<art::RuntimePhaseCallback*> >::__push_back_slow_path<art::RuntimePhaseCallback* const&>(art::RuntimePhaseCallback* const&)
art::ElfFileImpl<ElfTypes32>::GetRelaSectionStart(Elf32_Shdr&) const
art::gc::accounting::ModUnionTableCardCache::Verify()
art::gc::collector::MarkSweep::VerifyIsLive(art::mirror::Object const*)
art::verifier::MethodVerifier::FindInvokedMethodAtDexPc(unsigned int)
art::StackVisitor::DescribeLocation() const
art::FixupArtMethodArrayVisitor::~FixupArtMethodArrayVisitor()
art::ScopedCheck::CheckPossibleHeapValue(art::ScopedObjectAccess&, char, art::JniValueType)
artAllocArrayFromCodeResolvedBumpPointer
art::mirror::Field::SetArrayClass(art::ObjPtr<art::mirror::Class>)
art::gc::collector::PartialMarkSweep::BindBitmaps()
art::verifier::DoubleHiType::instance_
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ProfileSaverOptions& ()>::~__func()
art::hprof::Hprof::DumpHeapInstanceObject(art::mirror::Object*, art::mirror::Class*, std::__1::set<art::mirror::Object*, std::__1::less<art::mirror::Object*>, std::__1::allocator<art::mirror::Object*> > const&)
std::__1::__shared_ptr_emplace<unsigned int, std::__1::allocator<unsigned int> >::~__shared_ptr_emplace()
art::ReferenceMapVisitor<art::RootCallbackVisitor, false>::VisitQuickFrameNonPrecise()
art::dex::tracking::DexFileTrackingRegistrar::SetAllStringDataStartRegistration(bool)
art::gc::collector::ConcurrentCopying::IssueEmptyCheckpoint()
art::GetCheckJniNativeInterface()
art::Dbg::DbgClassLoadCallback::ClassPrepare(art::Handle<art::mirror::Class>, art::Handle<art::mirror::Class>)
art::dex::tracking::DexFileTrackingRegistrar::SetAllCodeItemRegistration(bool)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::IntoKey(art::RuntimeArgumentMapKey<bool> const&)::{lambda(bool&)#1}, std::__1::allocator<{lambda(bool&)#1}>, void (bool&)>::~__func()
art::ScopedCheck::CheckStaticFieldID(art::ScopedObjectAccess&, _jclass*, _jfieldID*)
void art::mirror::Class::VisitNativeRoots<(art::ReadBarrierOption)1, art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsFieldVisitor const>(art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsFieldVisitor const&, art::PointerSize)
non-virtual thunk to art::gc::space::DlMallocSpace::RevokeThreadLocalBuffers(art::Thread*)
bool art::mirror::Class::ResolvedFieldAccessTest<true>(art::ObjPtr<art::mirror::Class>, art::ArtField*, art::ObjPtr<art::mirror::DexCache>, unsigned int)
std::__1::__shared_ptr_emplace<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::~__shared_ptr_emplace()
art::gc::allocator::RosAlloc::InspectAll(void (*)(void*, void*, unsigned int, void*), void*)
art::OatHeader::GetInterpreterToInterpreterBridgeOffset() const
art::ProfileSaverOptions& art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination::GetOrCreateFromMap<art::ProfileSaverOptions>(art::RuntimeArgumentMapKey<art::ProfileSaverOptions> const&)
art::JNIEnvExt::NewLocalRef(art::mirror::Object*)
art::DexCacheResolvedClasses::DexCacheResolvedClasses(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned int)
art::Transaction::ObjectLog::Undo(art::mirror::Object*) const
std::__1::__tree_node_base<void*>*& std::__1::__tree<art::verifier::VerifierDeps::FieldResolution, std::__1::less<art::verifier::VerifierDeps::FieldResolution>, std::__1::allocator<art::verifier::VerifierDeps::FieldResolution> >::__find_equal<art::verifier::VerifierDeps::FieldResolution>(std::__1::__tree_const_iterator<art::verifier::VerifierDeps::FieldResolution, std::__1::__tree_node<art::verifier::VerifierDeps::FieldResolution, void*>*, int>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, art::verifier::VerifierDeps::FieldResolution const&)
art::gc::collector::SemiSpace::ScanObject(art::mirror::Object*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1024u> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1024u>& ()>::__clone(std::__1::__function::__base<art::Memory<1024u>&>*) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::IntoKey(art::RuntimeArgumentMapKey<unsigned int> const&)::{lambda(unsigned int&)#1}, std::__1::allocator<{lambda(unsigned int&)#1}>, void (unsigned int&)>::destroy_deallocate()
unsigned long long art::ObjectRegistry::Add<art::mirror::Throwable>(art::Handle<art::mirror::Throwable>)
art::MallocArena::~MallocArena()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::XGcOption& ()>::destroy()
android::base::EagerEvaluator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > android::base::MakeEagerEvaluator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
art::jit::Jit::~Jit()
art::jit::JitCodeCache::IsWeakAccessEnabled(art::Thread*) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(bool&)#1}, std::__1::allocator<{lambda(bool&)#1}>, void (bool&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(bool&)#1}> >*) const
art::ObjectTryLock<art::mirror::Class>::ObjectTryLock(art::Thread*, art::Handle<art::mirror::Class>)
art::OS::DirectoryExists(char const*)
_Unwind_Resume
art::ElfFileImpl<ElfTypes32>::GetRelSectionStart(Elf32_Shdr&) const
art::gc::Verification::BFSFindReachable::operator()(art::mirror::Object*, art::MemberOffset, bool) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoIgnore()::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::gc::space::LargeObjectSpaceType& ()>::destroy_deallocate()
art::verifier::PcToRegisterLineTable::Init(art::verifier::RegisterTrackingMode, art::verifier::InstructionFlags*, unsigned int, unsigned short, art::verifier::MethodVerifier*)
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)1, art::gc::collector::SemiSpace::MarkObjectVisitor const>(art::gc::collector::SemiSpace::MarkObjectVisitor const&, art::PointerSize)
art::mirror::PrimitiveArray<double>* art::JNI::DecodeAndCheckArrayType<_jdoubleArray*, double, art::mirror::PrimitiveArray<double> >(art::ScopedObjectAccess&, _jdoubleArray*, char const*, char const*)
art::gc::AllocRecordObjectMap::SweepAllocationRecords(art::IsMarkedVisitor*)
std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char>, void*>*, int> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const>, true>, art::ArenaAllocatorAdapter<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::Barrier::Barrier(int)
art::OatHeader::GetExecutableOffset() const
art::Runtime::Abort(char const*)
artAllocStringFromCharsFromCodeRegion
art::mirror::Throwable::Dump()
art::gc::collector::ConcurrentCopying::IsMarked(art::mirror::Object*)
std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, int> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
art::Dbg::ConfigureJdwp(art::JDWP::JdwpOptions const&)
art::gc::collector::ConcurrentCopying::VisitRoots(art::mirror::CompressedReference<art::mirror::Object>**, unsigned int, art::RootInfo const&)
art::OatQuickMethodHeader::~OatQuickMethodHeader()
art::mirror::Object::PrettyTypeOf(art::ObjPtr<art::mirror::Object>)
art::mirror::DexCache::AtomicStoreRelease16B(std::__1::atomic<art::mirror::DexCache::ConversionPair<unsigned long long> >*, art::mirror::DexCache::ConversionPair<unsigned long long>)
art::gc::collector::GarbageCollector::RecordFreeLOS(art::gc::collector::ObjectBytePair const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::BackgroundGcOption& ()>::__clone() const
vtable for art::BuildInternalStackTraceVisitor<false>
art::detail::CmdlineParserArgumentInfo<art::TraceClockSource>::~CmdlineParserArgumentInfo()
artInvokeStaticTrampolineWithAccessCheck
art::gc::space::MemoryToolMallocSpace<art::gc::space::DlMallocSpace, 8u, true, false>::Alloc(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::verifier::RegisterLine::VerifyMonitorStackEmpty(art::verifier::MethodVerifier*) const
art::gc::collector::Iteration::Reset(art::gc::GcCause, bool)
art::interpreter::UnstartedRuntime::UnstartedReferenceGetReferent(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::ProfileSaver::~ProfileSaver()
art::PLUGIN_INITIALIZATION_FUNCTION_NAME
std::__1::__tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> >::destroy(std::__1::__tree_node<unsigned int, void*>*)
art::gc::space::ImageSpace::~ImageSpace()
art::CodeInfo::GetInvokeInfoForNativePcOffset(unsigned int, art::CodeInfoEncoding const&)
art::ArtField* art::FindFieldFromCode<(art::FindFieldType)3, false>(unsigned int, art::ArtMethod*, art::Thread*, unsigned int)
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)> > >::rehash(unsigned int)
art::OatFileAssistant::ImageLocation()
art::GetThisVisitor::~GetThisVisitor()
std::__1::__shared_ptr_emplace<art::Memory<1u>, std::__1::allocator<art::Memory<1u> > >::__on_zero_shared_weak()
art::WellKnownClasses::java_lang_invoke_MethodHandles_lookup
art::gc::collector::MarkSweep::SweepArray(art::gc::accounting::AtomicStack<art::mirror::Object>*, bool)
art::gc::Heap::WaitForGcToCompleteLocked(art::gc::GcCause, art::Thread*)
art::ObjectLock<art::mirror::Class>::NotifyAll()
art::SignalCatcher::SetHaltFlag(bool)
unix_file::FdFile::WriteFully(void const*, unsigned int)
art::ThreadList::VisitRootsForSuspendedThreads(art::RootVisitor*)
art::MemMap::GetLargestMemMapAt(void*)
art::ElfFileImpl<ElfTypes32>::GetSymbolTable(unsigned int)
art::ProfileCompilationInfo::Equals(art::ProfileCompilationInfo const&)
art::CheckJNI::CallNonvirtualLongMethodV(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, char*)
art::detail::CmdlineParseArgument<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::MaybeMatches(art::TokenRange const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}, std::__1::allocator<{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}>, void (std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)>::__clone() const
art::gc::space::RosAllocSpace::~RosAllocSpace()
art::RuntimeArgumentMap::StackTraceFile
art::Thread::SetClassLoaderOverride(_jobject*)
art::StackDumpVisitor::~StackDumpVisitor()
art::TimingLogger::~TimingLogger()
art::mirror::Field* art::mirror::Field::CreateFromArtField<(art::PointerSize)8, true>(art::Thread*, art::ArtField*, bool)
art::gc::collector::ConcurrentCopying::DisableWeakRefAccessCallback::Run(art::Thread*)
unix_file::FdFile::DisableAutoClose()
art::RuntimeArgumentMap::HeapTargetUtilization
art::Barrier::SetCountLocked(art::Thread*, int)
art::JavaVMExt::DumpReferenceTables(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::BaseMutex::DumpAll(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<art::InstructionSet>(art::RuntimeArgumentMapKey<art::InstructionSet> const&)
non-virtual thunk to art::gc::space::MemoryToolLargeObjectMapSpace::AllocationSize(art::mirror::Object*, unsigned int*)
vtable for art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions>
art::JDWP::operator==(art::JDWP::JdwpLocation const&, art::JDWP::JdwpLocation const&)
art::ClassLinker::InitializeClass(art::Thread*, art::Handle<art::mirror::Class>, bool, bool)
art::CheckJNI::GetShortArrayElements(_JNIEnv*, _jshortArray*, unsigned char*)
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)> > >::__rehash(unsigned int)
vtable for art::gc::collector::MarkSweep::VerifySystemWeakVisitor
art::JNIEnvExt::DeleteLocalRef(_jobject*)
MterpFilledNewArrayRange
art::verifier::RegisterLine::MarkRefsAsInitialized(art::verifier::MethodVerifier*, art::verifier::RegType const&)
std::__1::__hash_table<art::dex::TypeIndex, std::__1::hash<art::dex::TypeIndex>, std::__1::equal_to<art::dex::TypeIndex>, std::__1::allocator<art::dex::TypeIndex> >::__rehash(unsigned int)
art::mirror::Class::IsInSamePackage(art::ObjPtr<art::mirror::Class>)
art::ReferenceMapVisitor<art::RootCallbackVisitor, true>::VisitFrame()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::IntoKey(art::RuntimeArgumentMapKey<art::TraceClockSource> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::TraceClockSource& ()>::destroy_deallocate()
void art::ArtField::SetChar<false>(art::ObjPtr<art::mirror::Object>, unsigned short)
art::gc::space::MemMapSpace::~MemMapSpace()
void std::__1::vector<art::gc::accounting::SpaceBitmap<8u>*, std::__1::allocator<art::gc::accounting::SpaceBitmap<8u>*> >::__push_back_slow_path<art::gc::accounting::SpaceBitmap<8u>* const&>(art::gc::accounting::SpaceBitmap<8u>* const&)
void art::mirror::VisitDexCachePairs<art::mirror::String, (art::ReadBarrierOption)0, art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor>(std::__1::atomic<art::mirror::DexCachePair<art::mirror::String> >*, unsigned int, art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor const&)
art::detail::CmdlineParserArgumentInfo<art::ProfileSaverOptions>::~CmdlineParserArgumentInfo()
art::mirror::Method::SetClass(art::mirror::Class*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::gc::space::LargeObjectSpaceType&)#1}, std::__1::allocator<{lambda(art::gc::space::LargeObjectSpaceType&)#1}>, void (art::gc::space::LargeObjectSpaceType&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::gc::space::LargeObjectSpaceType&)#1}> >*) const
art::Thread::SetStateUnsafe(art::ThreadState)
art::ArtMethod* art::FindMethodFromCode<(art::InvokeType)2, false>(unsigned int, art::ObjPtr<art::mirror::Object>*, art::ArtMethod*, art::Thread*)
art::JNI::SetStaticLongField(_JNIEnv*, _jclass*, _jfieldID*, long long)
art::Thread::ThrowOutOfMemoryError(char const*)
art::gc::space::RegionSpace::RegionSpace(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::MemMap*)
art::hprof::Hprof::WriteClassTable()
art::verifier::VerifierDeps::MaybeRecordAssignability(art::DexFile const&, art::mirror::Class*, art::mirror::Class*, bool, bool)
art::WellKnownClasses::java_lang_ref_FinalizerReference_add
void std::__1::vector<std::__1::unique_ptr<art::detail::CmdlineParseArgumentAny, std::__1::default_delete<art::detail::CmdlineParseArgumentAny> >, std::__1::allocator<std::__1::unique_ptr<art::detail::CmdlineParseArgumentAny, std::__1::default_delete<art::detail::CmdlineParseArgumentAny> > > >::__push_back_slow_path<std::__1::unique_ptr<art::detail::CmdlineParseArgumentAny, std::__1::default_delete<art::detail::CmdlineParseArgumentAny> > >(std::__1::unique_ptr<art::detail::CmdlineParseArgumentAny, std::__1::default_delete<art::detail::CmdlineParseArgumentAny> >&&)
art::Unit& art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination::GetOrCreateFromMap<art::Unit>(art::RuntimeArgumentMapKey<art::Unit> const&)
art::ThrowIllegalAccessError(art::ObjPtr<art::mirror::Class>, char const*, ...)
art::mirror::Field::ResetClass()
art::Dbg::GetFieldName(unsigned long long)
vtable for art::RuntimeArgumentMapKey<void (*)(int)>
art::mirror::Constructor::SetArrayClass(art::mirror::Class*)
art::Runtime::SetInstructionSet(art::InstructionSet)
art::x86::X86Context::DoLongJump()
art::Locks::verifier_deps_lock_
unsigned int art::gc::accounting::CardTable::Scan<false, art::gc::collector::MarkSweep::ScanObjectVisitor>(art::gc::accounting::SpaceBitmap<8u>*, unsigned char*, unsigned char*, art::gc::collector::MarkSweep::ScanObjectVisitor const&, unsigned char)
art::WellKnownClasses::java_lang_String
art::verifier::RegisterLine::VerifyRegisterTypeWide(art::verifier::MethodVerifier*, unsigned int, art::verifier::RegType const&, art::verifier::RegType const&)
art::SetRuntimeDebugFlagsEnabled(bool)
art::ProfileSaver::ShuttingDown(art::Thread*)
art::jit::JitCodeCache::CheckLiveCompiledCodeHasProfilingInfo()
art::gc::collector::SemiSpace::ShouldSweepSpace(art::gc::space::ContinuousSpace*) const
art::ImageHeader::GetImageSection(art::ImageHeader::ImageSections) const
art::JNI::NewGlobalRef(_JNIEnv*, _jobject*)
art::Trace::DumpBuf(unsigned char*, unsigned int, art::TraceClockSource)
_dist_code
std::__1::function<art::ProfileSaverOptions& ()>::swap(std::__1::function<art::ProfileSaverOptions& ()>&)
art::HeapChunkContext::HeapChunkJavaCallback(void*, void*, unsigned int, void*)
vtable for art::gc::collector::GarbageCollector
art::DexFileVerifier::CheckIntraDebugInfoItem()
art::Mutex::ExclusiveUnlock(art::Thread*)
art::interpreter::UnstartedRuntime::UnstartedCharacterToUpperCase(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::Runtime::instance_
art::hprof::Hprof::DumpHeapArray(art::mirror::Array*, art::mirror::Class*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>::destroy()
art::BitVector::BitVector(bool, art::Allocator*, unsigned int, unsigned int*)
void art::ClassTable::VisitRoots<art::gc::collector::ConcurrentCopying::VerifyNoMissingCardMarkVisitor>(art::gc::collector::ConcurrentCopying::VerifyNoMissingCardMarkVisitor const&)
art::gc::space::Space::AsDlMallocSpace()
art::verifier::MethodVerifier::GetStaticField(int)
art::verifier::ReferenceType::Dump() const
art::Allocator::GetMallocAllocator()
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::~basic_streambuf()
art::Monitor::IsValidLockWord(art::LockWord)
art::gc::ReferenceQueue::DequeuePendingReference()
art::ConvertModifiedUtf8ToUtf16(unsigned short*, unsigned int, char const*, unsigned int)
art::Runtime::InitNativeMethods()
art::ImageHeader::kImageVersion
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::IntoKey(art::RuntimeArgumentMapKey<art::ProfileSaverOptions> const&)::{lambda(art::ProfileSaverOptions&)#1}, std::__1::allocator<{lambda(art::ProfileSaverOptions&)#1}>, void (art::ProfileSaverOptions&)>::destroy_deallocate()
art::ArtMethod* art::FindMethodFast<(art::InvokeType)4, true>(unsigned int, art::ObjPtr<art::mirror::Object>, art::ArtMethod*)
art::ClassLinker::VisitClassLoaders(art::ClassLoaderVisitor*) const
art::gc::VerifyReferenceCardVisitor::operator()(art::mirror::Object*, art::MemberOffset, bool) const
art::ProfileCompilationInfo::AddMethods(std::__1::vector<art::ProfileMethodInfo, std::__1::allocator<art::ProfileMethodInfo> > const&)
art::gc::space::RosAllocSpace::FreeList(art::Thread*, unsigned int, art::mirror::Object**)
art::VariantMapKey<art::TraceClockSource>::ValueClone(void*) const
art::gc::space::ContinuousMemMapAllocSpace::UnBindBitmaps()
art::ElfFileImpl<ElfTypes32>::GetDynamicProgramHeader() const
art::JavaStackTraceHandler::JavaStackTraceHandler(art::FaultManager*)
art::VariantMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::Clone() const
art::mirror::PrimitiveArray<float>::Memmove(int, art::ObjPtr<art::mirror::PrimitiveArray<float> >, int, int)
art::ThrowAbstractMethodError(unsigned int, art::DexFile const&)
void art::mirror::ObjectArray<art::mirror::Object>::VisitReferences<art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor>(art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor const&)
void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor, art::VoidFunctor>(art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor const&, art::VoidFunctor const&)
art::VariantMapKey<art::ExperimentalFlags>::Clone() const
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Instruction::Flags const&)
art::verifier::RegType::GetSuperClass(art::verifier::RegTypeCache*) const
vtable for FileWriter
std::__1::__hash_table<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__rehash(unsigned int)
art::CheckJNI::GetStringUTFChars(_JNIEnv*, _jstring*, unsigned char*)
art::mirror::PrimitiveArray<int>::GetWithoutChecks(int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::LogVerbosity& ()>::operator()()
art::HashSet<art::GcRoot<art::mirror::String>, art::InternTable::GcRootEmptyFn, art::InternTable::StringHashEquals, art::InternTable::StringHashEquals, std::__1::allocator<art::GcRoot<art::mirror::String> > >::HashSet(unsigned char const*, bool, unsigned int*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >& ()>::destroy()
art::CheckJNI::CallObjectMethodA(_JNIEnv*, _jobject*, _jmethodID*, jvalue*)
void std::__1::vector<art::GcRoot<art::mirror::Class>, std::__1::allocator<art::GcRoot<art::mirror::Class> > >::__push_back_slow_path<art::GcRoot<art::mirror::Class> >(art::GcRoot<art::mirror::Class>&&)
vtable for art::VariantMapKey<art::LogVerbosity>
art::ZipEntry::~ZipEntry()
art::CheckJNI::GetStaticDoubleField(_JNIEnv*, _jclass*, _jfieldID*)
vtable for art::gc::collector::ConcurrentCopying::DisableMarkingCallback
art::mirror::String::SetClass(art::ObjPtr<art::mirror::Class>)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::InstructionSetFeatures const&)
art::SleepForever()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::BackgroundGcOption> const&)::{lambda(art::BackgroundGcOption&)#1}, std::__1::allocator<{lambda(art::BackgroundGcOption&)#1}>, void (art::BackgroundGcOption&)>::operator()(art::BackgroundGcOption&)
art::Runtime::GetCompilerExecutable() const
art::interpreter::UnstartedRuntime::UnstartedMemoryPeekInt(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::Histogram<unsigned long long>::BucketiseValue(unsigned long long)
art::JNI::GetStaticDoubleField(_JNIEnv*, _jclass*, _jfieldID*)
art::JavaVMExt::SweepJniWeakGlobals(art::IsMarkedVisitor*)
art::StringPiece::find(char, unsigned int) const
art::OatFileManager::RegisterImageOatFiles(std::__1::vector<art::gc::space::ImageSpace*, std::__1::allocator<art::gc::space::ImageSpace*> >)
art::gc::space::FreeListSpace::GetSlotIndexForAllocationInfo(art::gc::space::AllocationInfo const*) const
non-virtual thunk to art::gc::collector::MarkSweep::~MarkSweep()
art::JNI::SetShortField(_JNIEnv*, _jobject*, _jfieldID*, short)
art::CheckJNI::CallNonvirtualIntMethod(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, ...)
art::instrumentation::Instrumentation::MethodExitEventImpl(art::Thread*, art::ObjPtr<art::mirror::Object>, art::ArtMethod*, unsigned int, art::JValue const&) const
art::ti::Agent::Unload()
art::ClassLinker::LoadSuperAndInterfaces(art::Handle<art::mirror::Class>, art::DexFile const&)
art::RuntimeArgumentMap::StackSize
artSetBooleanStaticFromCompiledCode
art::mirror::Class::SetClassClass(art::ObjPtr<art::mirror::Class>)
art::gc::Heap::ResetGcPerformanceInfo()
art::Runtime::RecordWriteFieldReference(art::mirror::Object*, art::MemberOffset, art::ObjPtr<art::mirror::Object>, bool) const
art::Runtime::ClearCalleeSaveMethods()
art::JDWP::JdwpNetStateBase::IsAwaitingHandshake()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoIgnore()::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>::operator()()
art::Arm64InstructionSetFeatures::GetFeatureString() const
art::mirror::PrimitiveArray<int>::Memmove(int, art::ObjPtr<art::mirror::PrimitiveArray<int> >, int, int)
art::RuntimeArgumentMap::NoDexFileFallback
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}, std::__1::allocator<{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}>, void (std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)>::~__func()
art::gc::ReferenceQueue::UpdateRoots(art::IsMarkedVisitor*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >& ()>::~__func()
art::Dbg::GetClassList(std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >*)
void art::mirror::Object::VisitFieldsReferences<false, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::accounting::AddToReferenceArrayVisitor>(unsigned int, art::gc::accounting::AddToReferenceArrayVisitor const&)
art::Locks::jni_globals_lock_
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf32_Sym*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf32_Sym*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf32_Sym*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf32_Sym*>, void*>*)
artThrowStackOverflowFromCode
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::IntoKey(art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::JDWP::JdwpOptions& ()>::__clone(std::__1::__function::__base<art::JDWP::JdwpOptions&>*) const
art::verifier::RegType::IsPreciseConstant() const
art::verifier::VerifierDeps::VerifyMethods(art::Handle<art::mirror::ClassLoader>, art::DexFile const&, std::__1::set<art::verifier::VerifierDeps::MethodResolution, std::__1::less<art::verifier::VerifierDeps::MethodResolution>, std::__1::allocator<art::verifier::VerifierDeps::MethodResolution> > const&, art::Thread*) const
std::__1::__split_buffer<art::instrumentation::InstrumentationStackFrame*, std::__1::allocator<art::instrumentation::InstrumentationStackFrame*>&>::push_front(art::instrumentation::InstrumentationStackFrame* const&)
void art::gc::accounting::SpaceBitmap<8u>::VisitMarkedRange<art::gc::space::CountObjectsAllocated&>(unsigned int, unsigned int, art::gc::space::CountObjectsAllocated&) const
art::Runtime::RecordStrongStringRemoval(art::ObjPtr<art::mirror::String>) const
art::ClassLinker::WriteBarrierForBootOatFileBssRoots(art::OatFile const*)
art::detail::CmdlineParseArgument<art::Memory<1024u> >::~CmdlineParseArgument()
_ZN3art6detail11ToStringAnyIdEENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKT_PNS2_9enable_ifIXsr25SupportsInsertionOperatorIS9_EE5valueEvE4typeE
std::__1::basic_ostream<char, std::__1::char_traits<char> >::flush()
art::InternTable::BroadcastForNewInterns()
art::mirror::PrimitiveArray<unsigned char>::Get(int)
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsgetn(char*, int)
art::gc::collector::MarkSweep::InitializePhase()
art::StackVisitor::GetMethod() const
art::verifier::RegType::IsPreciseConstantHi() const
std::__1::__tree<art::dex::TypeIndex, std::__1::less<art::dex::TypeIndex>, std::__1::allocator<art::dex::TypeIndex> >::destroy(std::__1::__tree_node<art::dex::TypeIndex, void*>*)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > art::gc::allocator::RosAlloc::Run::FreeListToStr<true>(art::gc::allocator::RosAlloc::SlotFreeList<true>*)
_Unwind_GetRegionStart
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::gc::VerifyReferenceCardVisitor const>(art::gc::VerifyReferenceCardVisitor const&, art::PointerSize)
art::InternTable::Table::Find(art::InternTable::Utf8String const&)
art::VariantMapKey<double>::~VariantMapKey()
art::Signature::ToString() const
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<art::TraceClockSource>(art::RuntimeArgumentMapKey<art::TraceClockSource> const&)
vtable for art::verifier::BooleanType
art::Runtime::CreateImtConflictMethod(art::LinearAlloc*)
art::ReferenceMapVisitor<art::RootCallbackVisitor, false>::VisitFrame()
art::jit::JitCompileTask::~JitCompileTask()
vtable for art::ComputeGenericJniFrameSize
vtable for art::ArenaBitVectorAllocator<art::ArenaAllocator>
art::ProfileCompilationInfo::DexFileData::GetHotnessInfo(unsigned int) const
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Dbg::HpsgWhat const&)
void art::gc::accounting::Bitmap::VisitSetBits<art::gc::accounting::CardBitVisitor>(unsigned int, unsigned int, art::gc::accounting::CardBitVisitor const&) const
art::ClassTable::InsertWithHash(art::ObjPtr<art::mirror::Class>, unsigned int)
art::gc::accounting::SpaceBitmap<8u>::SetHeapSize(unsigned int)
art::InternTable::Table::SweepWeaks(art::HashSet<art::GcRoot<art::mirror::String>, art::InternTable::GcRootEmptyFn, art::InternTable::StringHashEquals, art::InternTable::StringHashEquals, std::__1::allocator<art::GcRoot<art::mirror::String> > >*, art::IsMarkedVisitor*)
art::verifier::MethodVerifier::VerifyInvocationArgs(art::Instruction const*, art::verifier::MethodType, bool)
art::Arm64InstructionSetFeatures::AsBitmap() const
MterpInvokeStaticRange
art::gc::accounting::SpaceBitmap<4096u>::Begin()
art::ti::AGENT_ON_ATTACH_FUNCTION_NAME
std::__1::__tree<std::__1::__value_type<art::DexCacheResolvedClasses const*, art::GetResolvedClassesVisitor::ExtraStats>, std::__1::__map_value_compare<art::DexCacheResolvedClasses const*, std::__1::__value_type<art::DexCacheResolvedClasses const*, art::GetResolvedClassesVisitor::ExtraStats>, std::__1::less<art::DexCacheResolvedClasses const*>, true>, std::__1::allocator<std::__1::__value_type<art::DexCacheResolvedClasses const*, art::GetResolvedClassesVisitor::ExtraStats> > >::destroy(std::__1::__tree_node<std::__1::__value_type<art::DexCacheResolvedClasses const*, art::GetResolvedClassesVisitor::ExtraStats>, void*>*)
art::StackVisitor::StackVisitor(art::Thread*, art::Context*, art::StackVisitor::StackWalkKind, unsigned int, bool)
art::StackVisitor::GetThisObject() const
android::base::WriteStringToFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
art::gc::collector::GarbageCollector::Run(art::gc::GcCause, bool)
art::gc::allocator::RosAlloc::RosAlloc(void*, unsigned int, unsigned int, art::gc::allocator::RosAlloc::PageReleaseMode, bool, unsigned int)
art::Locks::instrument_entrypoints_lock_
art::ObjectRegistry::Promote(art::ObjectRegistryEntry&)
art::interpreter::UnstartedRuntime::UnstartedSystemGetPropertyWithDefault(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::mirror::Class::FindClassMethod(art::StringPiece const&, art::StringPiece const&, art::PointerSize)
art::ti::Agent::~Agent()
void art::mirror::Class::VisitNativeRoots<(art::ReadBarrierOption)0, art::gc::VerifyReferenceCardVisitor const>(art::gc::VerifyReferenceCardVisitor const&, art::PointerSize)
vtable for art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}, std::__1::allocator<{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}>, void (std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}> >*) const
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::CompleteArgument()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::BackgroundGcOption> const&)::{lambda(art::BackgroundGcOption&)#1}, std::__1::allocator<{lambda(art::BackgroundGcOption&)#1}>, void (art::BackgroundGcOption&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::BackgroundGcOption&)#1}> >*) const
art::BuildInternalStackTraceVisitor<false>::~BuildInternalStackTraceVisitor()
art::ReferenceTable::~ReferenceTable()
art::JNIEnvExt::CheckNoHeldMonitors()
art::verifier::PreciseConstLoType::GetAssignmentTypeImpl() const
art::JDWP::Request::ReadObjectId()
art::verifier::MethodVerifier::PrependToLastFailMessage(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
art::MemMap::MapInternalArtLow4GBAllocator(unsigned int, int, int, int, long)
art::ClassLinker::FillIMTFromIfTable(art::ObjPtr<art::mirror::IfTable>, art::ArtMethod*, art::ArtMethod*, art::ObjPtr<art::mirror::Class>, bool, bool, bool*, art::ArtMethod**)
art::gc::collector::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::gc::collector::GcType const&)
art::mirror::Reference::java_lang_ref_Reference_
art::CheckJNI::GetShortArrayRegion(_JNIEnv*, _jshortArray*, int, int, short*)
non-virtual thunk to art::gc::space::RosAllocSpace::~RosAllocSpace()
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::DeoptimizationKind const&)
art::ScopedCheck::CheckInstanceFieldID(art::ScopedObjectAccess&, _jobject*, _jfieldID*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > const&)::{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}, std::__1::allocator<{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}>, void (std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)>::~__func()
vtable for std::__1::__shared_ptr_pointer<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::default_delete<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >
art::mirror::Class::SetReferenceInstanceOffsets(unsigned int)
std::__1::__tree_node_base<void*>*& std::__1::__tree<art::verifier::VerifierDeps::ClassResolution, std::__1::less<art::verifier::VerifierDeps::ClassResolution>, std::__1::allocator<art::verifier::VerifierDeps::ClassResolution> >::__find_equal<art::verifier::VerifierDeps::ClassResolution>(std::__1::__tree_const_iterator<art::verifier::VerifierDeps::ClassResolution, std::__1::__tree_node<art::verifier::VerifierDeps::ClassResolution, void*>*, int>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, art::verifier::VerifierDeps::ClassResolution const&)
art::gc::allocator::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::gc::allocator::RosAlloc::PageReleaseMode const&)
art::NanoTime()
art::dex::tracking::RegisterDexFile(art::DexFile const*)
art::ti::Agent::Agent(art::ti::Agent&&)
artAllocObjectFromCodeWithChecksRosAllocInstrumented
vtable for art::MutatorMutex
non-virtual thunk to art::gc::space::RegionSpace::RevokeThreadLocalBuffers(art::Thread*)
art::Thread::IsExceptionThrownByCurrentMethod(art::ObjPtr<art::mirror::Throwable>) const
art::RuntimeArgumentMap::Verify
art::DexRegisterLocationCatalog::Dump(art::VariableIndentationOutputStream*, art::CodeInfo const&)
_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertINS_11__wrap_iterIPKhEEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPhEEE4typeES8_SA_SA_
std::__1::__tree<std::__1::__value_type<art::mirror::Object*, art::gc::space::LargeObjectMapSpace::LargeObject>, std::__1::__map_value_compare<art::mirror::Object*, std::__1::__value_type<art::mirror::Object*, art::gc::space::LargeObjectMapSpace::LargeObject>, std::__1::less<art::mirror::Object*>, true>, std::__1::allocator<std::__1::__value_type<art::mirror::Object*, art::gc::space::LargeObjectMapSpace::LargeObject> > >::destroy(std::__1::__tree_node<std::__1::__value_type<art::mirror::Object*, art::gc::space::LargeObjectMapSpace::LargeObject>, void*>*)
art::gc::accounting::MemoryRangeBitmap<16u>::MemoryRangeBitmap(art::MemMap*, unsigned int, unsigned int)
art::gc::Heap::VerifyHeapReferences(bool)
art::JDWP::JdwpState::ClearWaitForJdwpToken()
art::ArenaBitVectorAllocator<art::ScopedArenaAllocator>::~ArenaBitVectorAllocator()
art::gc::collector::ConcurrentCopying::ActivateReadBarrierEntrypoints()
art::DexFileVerifier::CheckListSize(void const*, unsigned int, unsigned int, char const*)
unsigned int std::__1::__sort4<std::__1::__less<std::__1::tuple<unsigned int, unsigned int, bool>, std::__1::tuple<unsigned int, unsigned int, bool> >&, std::__1::tuple<unsigned int, unsigned int, bool>*>(std::__1::tuple<unsigned int, unsigned int, bool>*, std::__1::tuple<unsigned int, unsigned int, bool>*, std::__1::tuple<unsigned int, unsigned int, bool>*, std::__1::tuple<unsigned int, unsigned int, bool>*, std::__1::__less<std::__1::tuple<unsigned int, unsigned int, bool>, std::__1::tuple<unsigned int, unsigned int, bool> >&)
art::mirror::PrimitiveArray<long long>::Memmove(int, art::ObjPtr<art::mirror::PrimitiveArray<long long> >, int, int)
__udivdi3
artLdiv
void art::JNI::GetPrimitiveArrayRegion<_jcharArray*, unsigned short, art::mirror::PrimitiveArray<unsigned short> >(_JNIEnv*, _jcharArray*, int, int, unsigned short*)
art::ThreadList::ShutDown()
art::instrumentation::InstrumentationListener::~InstrumentationListener()
art::ArtMethod* art::FindMethodFromCode<(art::InvokeType)0, false>(unsigned int, art::ObjPtr<art::mirror::Object>*, art::ArtMethod*, art::Thread*)
art::ScopedCheck::CheckMethodID(_jmethodID*)
art::WellKnownClasses::java_lang_Daemons
art::JNI::GetObjectRefType(_JNIEnv*, _jobject*)
art::gc::Heap::UnBindBitmaps()
art::JavaVMExt::DumpForSigQuit(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<art::CompilerCallbacks*>(art::RuntimeArgumentMapKey<art::CompilerCallbacks*> const&)
art::Dbg::ManageDeoptimization()
art::NullPointerHandler::NullPointerHandler(art::FaultManager*)
art::ScopedCheck::CheckFieldAccess(art::ScopedObjectAccess&, _jobject*, _jfieldID*, bool, art::Primitive::Type)
art::HeapChunkContext::Flush()
std::__1::__tree<art::DexCacheResolvedClasses, std::__1::less<art::DexCacheResolvedClasses>, std::__1::allocator<art::DexCacheResolvedClasses> >::destroy(std::__1::__tree_node<art::DexCacheResolvedClasses, void*>*)
art::jit::JitCodeCache::RemoveMethodsIn(art::Thread*, art::LinearAlloc const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::IntoKey(art::RuntimeArgumentMapKey<art::ParseStringList<(char)58> > const&)::{lambda(art::ParseStringList<(char)58>&)#1}, std::__1::allocator<{lambda(art::ParseStringList<(char)58>&)#1}>, void (art::ParseStringList<(char)58>&)>::operator()(art::ParseStringList<(char)58>&)
art::verifier::VerifierDeps::AddAssignability(art::DexFile const&, art::mirror::Class*, art::mirror::Class*, bool, bool)
artAllocObjectFromCodeInitializedTLAB
art::TimingLogger::GetTotalNs() const
ExtractEntryToFile(void*, ZipEntry*, int)
vtable for art::BuildNativeCallFrameStateMachine<art::ComputeNativeCallFrameSize>
art::Transaction::ObjectLog::Log64BitsValue(art::MemberOffset, unsigned long long, bool)
art::verifier::RegTypeCache::VisitRoots(art::RootVisitor*, art::RootInfo const&)
void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::Verification::BFSFindReachable, art::VoidFunctor>(art::gc::Verification::BFSFindReachable const&, art::VoidFunctor const&)
art::ClassDataItemIterator::ReadClassDataMethod()
std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::VariantMapKey<art::ProfileSaverOptions>::~VariantMapKey()
art::mirror::PrimitiveArray<unsigned short>::ResetArrayClass()
art::detail::CmdlineParseArgument<art::JDWP::JdwpOptions>::~CmdlineParseArgument()
art::WellKnownClasses::java_lang_System_runFinalization
art::gc::ReferenceQueue::EnqueueReference(art::ObjPtr<art::mirror::Reference>)
art::gc::Heap::IsValidObjectAddress(void const*) const
art::StackOverflowHandler::Action(int, siginfo*, void*)
art::Dbg::OutputArray(unsigned long long, int, int, art::JDWP::ExpandBuf*)
art::Monitor::IsLocked()
art::JniMethodEndSynchronized(unsigned int, _jobject*, art::Thread*)
art::mirror::Class::GetClassDef()
art::gc::allocator::RosAlloc::ReleasePageRange(unsigned char*, unsigned char*)
non-virtual thunk to art::gc::collector::StickyMarkSweep::~StickyMarkSweep()
art::InternTable::RemoveStrong(art::ObjPtr<art::mirror::String>)
art::CountUtf8Bytes(unsigned short const*, unsigned int)
vtable for art::RuntimeArgumentMapKey<art::BackgroundGcOption>
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::verifier::VerifyMode& ()>
std::__1::__hash_table<art::dex::TypeIndex, std::__1::hash<art::dex::TypeIndex>, std::__1::equal_to<art::dex::TypeIndex>, std::__1::allocator<art::dex::TypeIndex> >::rehash(unsigned int)
std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringbuf()
std::__1::function<void (art::TraceClockSource&)>::swap(std::__1::function<void (art::TraceClockSource&)>&)
art::gc::space::DlMallocSpace::Create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned int, unsigned int, unsigned char*, bool)
art::interpreter::UnstartedRuntime::UnstartedJNIFloatIntBitsToFloat(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
unsigned long long art::ObjectRegistry::InternalAdd<art::mirror::Object>(art::Handle<art::mirror::Object>)
art::CountClassesVisitor::~CountClassesVisitor()
art::Locks::reference_queue_phantom_references_lock_
art::gc::collector::MarkCompact::UpdateRootVisitor::VisitRoots(art::mirror::Object***, unsigned int, art::RootInfo const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>::operator()(art::Unit&)
vtable for art::detail::CmdlineParseArgument<art::verifier::VerifyMode>
android::base::ScopedLogSeverity::ScopedLogSeverity(android::base::LogSeverity)
art::gc::collector::SemiSpace::BindBitmaps()
art::verifier::RegType::IsConflict() const
art::Dbg::GetInvokeReq()
std::__1::__split_buffer<std::__1::tuple<void const*, unsigned int, bool>*, std::__1::allocator<std::__1::tuple<void const*, unsigned int, bool>*> >::push_back(std::__1::tuple<void const*, unsigned int, bool>*&&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::JDWP::JdwpOptions& ()>::destroy()
art::UpdateReadBarrierEntrypoints(art::QuickEntryPoints*, bool)
std::__1::__shared_ptr_emplace<art::verifier::VerifyMode, std::__1::allocator<art::verifier::VerifyMode> >::~__shared_ptr_emplace()
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<art::Memory<1u> >(art::RuntimeArgumentMapKey<art::Memory<1u> > const&)
art::GetAndroidRoot()
art::JDWP::operator==(art::JDWP::JdwpOptions const&, art::JDWP::JdwpOptions const&)
art::RuntimeArgumentMap::LongGCLogThreshold
art::gc::collector::ConcurrentCopying::PushOntoMarkStack(art::mirror::Object*)
art::ElfFileImpl<ElfTypes64>::GetProgramHeadersStart() const
art::MemMap::mem_maps_lock_
vtable for art::VariantMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >
art::RuntimeCallbacks::RegisterNativeMethod(art::ArtMethod*, void const*, void**)
art::gc::space::MemoryToolMallocSpace<art::gc::space::DlMallocSpace, 8u, true, false>::AllocWithGrowth(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::interpreter::UnstartedRuntime::UnstartedJNIVMRuntimeNewUnpaddedArray(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
vtable for art::StackVisitor
art::ScopedArenaAllocator::ScopedArenaAllocator(art::ArenaStack*)
art::jit::JitCodeCache::GetLastUpdateTimeNs() const
art::Dbg::SuspendSelf()
vtable for std::__1::__shared_ptr_emplace<void (*)(int), std::__1::allocator<void (*)(int)> >
art::ElfFileImpl<ElfTypes64>::FixupSymbols(unsigned long long, bool)
art::JavaStackTraceHandler::Action(int, siginfo*, void*)
art::Dbg::OutputVariableTable(unsigned long long, unsigned long long, bool, art::JDWP::ExpandBuf*)
art::RuntimeArgumentMap::NonMovingSpaceCapacity
bool art::mirror::Class::ResolvedMethodAccessTest<true>(art::ObjPtr<art::mirror::Class>, art::ArtMethod*, art::ObjPtr<art::mirror::DexCache>, unsigned int, art::InvokeType)
art::Plugin::Unload()
art::detail::CmdlineParseArgument<art::TraceClockSource>::GetTypeName() const
art::verifier::CharType::GetAssignmentTypeImpl() const
vtable for art::ArmInstructionSetFeatures
art::Runtime::IsVerificationSoftFail() const
bool art::interpreter::DoFieldGet<(art::FindFieldType)0, (art::Primitive::Type)0, true>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::interpreter::UnstartedRuntime::UnstartedThreadGetNativeState(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::VariantMapKey<art::Unit>::ValueClone(void*) const
art::MoveClassTableToPreZygoteVisitor::~MoveClassTableToPreZygoteVisitor()
art::JavaVMExt::IsWeakGlobalCleared(art::Thread*, void*)
vtable for art::detail::CmdlineParseArgument<bool>
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::IntoKey(art::RuntimeArgumentMapKey<bool> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, bool& ()>
art::gc::space::RegionSpace::DumpNonFreeRegions(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
std::__1::__split_buffer<std::__1::pair<art::mirror::Object*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >*, std::__1::allocator<std::__1::pair<art::mirror::Object*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >*>&>::push_front(std::__1::pair<art::mirror::Object*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >* const&)
art::gc::space::BumpPointerSpace::BumpPointerSpace(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::MemMap*)
art::MipsInstructionSetFeatures::FromCppDefines()
artAllocStringFromCharsFromCodeRegionTLAB
art::gc::allocator::RosAlloc::Run::FreeSlot(void*)
art::detail::CmdlineParseArgument<art::gc::space::LargeObjectSpaceType>::ParseArgument(art::TokenRange const&, unsigned int*)
art::Monitor::AtraceMonitorLockImpl(art::Thread*, art::mirror::Object*, bool)
art::Transaction::VisitInternStringLogs(art::RootVisitor*)
art::JDWP::Request::ReadTag()
void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsFieldVisitor, art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsFieldVisitor>(art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsFieldVisitor const&, art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsFieldVisitor const&)
art::RuntimeArgumentMap::ProfileSaverOpts
art::Libraries::FindNativeMethodInternal(art::Thread*, void*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::JNI::CallVoidMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)
art::instrumentation::Instrumentation::~Instrumentation()
art::DexFileVerifier::CheckSizeLimit(unsigned int, unsigned int, char const*)
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)5, false, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::RuntimeArgumentMap::Help
art::detail::CmdlineParseArgument<art::ParseStringList<(char)58> >::~CmdlineParseArgument()
art::ArtField* art::FindFieldFromCode<(art::FindFieldType)4, false>(unsigned int, art::ArtMethod*, art::Thread*, unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::XGcOption& ()>::__clone(std::__1::__function::__base<art::XGcOption&>*) const
std::__1::__hash_table<art::ArtMethod*, std::__1::hash<art::ArtMethod*>, std::__1::equal_to<art::ArtMethod*>, std::__1::allocator<art::ArtMethod*> >::__rehash(unsigned int)
std::__1::function<void (art::verifier::VerifyMode&)>::swap(std::__1::function<void (art::verifier::VerifyMode&)>&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::gc::space::LargeObjectSpaceType&)#1}, std::__1::allocator<{lambda(art::gc::space::LargeObjectSpaceType&)#1}>, void (art::gc::space::LargeObjectSpaceType&)>::operator()(art::gc::space::LargeObjectSpaceType&)
art::CodeInfo::GetInlineInfo(unsigned int, art::CodeInfoEncoding const&) const
art::ObjectLock<art::mirror::ClassExt>::~ObjectLock()
art::JniMethodEndWithReferenceSynchronized(_jobject*, unsigned int, _jobject*, art::Thread*)
art::gc::collector::ConcurrentCopying::DelayReferenceReferent(art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::Reference>)
non-virtual thunk to art::gc::ZygoteCompactingCollector::~ZygoteCompactingCollector()
art::interpreter::UnstartedRuntime::UnstartedMathCeil(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::ArtField::GetTypeDescriptor()
art::Plugin::Plugin(art::Plugin const&)
art::instrumentation::InstallStubsClassVisitor::~InstallStubsClassVisitor()
art::ElfFileImpl<ElfTypes64>::GetRelaSectionStart(Elf64_Shdr&) const
art::JNI::CallNonvirtualByteMethod(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, ...)
art::verifier::MethodVerifier::DetermineCat1Constant(int, bool)
art::VariantMapKey<art::Memory<1024u> >::ValueDelete(void*) const
art::JavaFrameRootInfo::Describe(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::detail::CmdlineParseArgument<art::TraceClockSource>::~CmdlineParseArgument()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::IntoKey(art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions> const&)::{lambda(art::JDWP::JdwpOptions&)#1}, std::__1::allocator<{lambda(art::JDWP::JdwpOptions&)#1}>, void (art::JDWP::JdwpOptions&)>::destroy_deallocate()
art::verifier::RegType::IsReference() const
art::JDWP::JdwpState::AcquireJdwpTokenForCommand()
art::instrumentation::Instrumentation::InstallStubsForMethod(art::ArtMethod*)
art::RuntimeArgumentMap::DisableExplicitGC
art::ArtMethod::FindCatchBlock(art::Handle<art::mirror::Class>, unsigned int, bool*)
art::ArenaAllocator::BytesUsed() const
art::gc::space::ImageSpace::DumpSections(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::ReferenceTable::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ExperimentalFlags& ()>
void std::__1::vector<art::gc::AllocRecordStackTraceElement, std::__1::allocator<art::gc::AllocRecordStackTraceElement> >::__push_back_slow_path<art::gc::AllocRecordStackTraceElement const&>(art::gc::AllocRecordStackTraceElement const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>::~__func()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1024u> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1024u>& ()>::~__func()
art::Runtime::Init(art::RuntimeArgumentMap&&)
art_l2d
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::FixupInternVisitor const>(art::FixupInternVisitor const&, art::PointerSize)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(bool&)#1}, std::__1::allocator<{lambda(bool&)#1}>, void (bool&)>
art_l2f
art::ProfileSaver::Start(art::ProfileSaverOptions const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::jit::JitCodeCache*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)
art::mirror::Method::ResetClass()
mspace_track_large_chunks
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::IntoKey(art::RuntimeArgumentMapKey<art::ParseStringList<(char)58> > const&)::{lambda(art::ParseStringList<(char)58>&)#1}, std::__1::allocator<{lambda(art::ParseStringList<(char)58>&)#1}>, void (art::ParseStringList<(char)58>&)>::~__func()
art::UnloadNativeBridge()
art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::operator=(art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>&&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1024u> > const&)::{lambda(art::Memory<1024u>&)#1}, std::__1::allocator<{lambda(art::Memory<1024u>&)#1}>, void (art::Memory<1024u>&)>::__clone() const
art::DexFileVerifier::ReadUnsignedLittleEndian(unsigned int)
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)3, false, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::OatFile::ResolveRelativeEncodedDexLocation(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::gc::space::FreeListSpace::SetAllLargeObjectsAsZygoteObjects(art::Thread*)
art::ClassLinker::CreateReferenceInstanceOffsets(art::Handle<art::mirror::Class>)
non-virtual thunk to art::gc::space::LargeObjectSpace::RevokeThreadLocalBuffers(art::Thread*)
StartIteration(void*, void**, ZipString const*, ZipString const*)
art::gc::collector::MarkCompact::MarkRoots()
art::instrumentation::Instrumentation::IsDeoptimizedMethodsEmpty() const
art::gc::allocator::RosAlloc::RevokeRun(art::Thread*, unsigned int, art::gc::allocator::RosAlloc::Run*)
art::Trace::WriteToBuf(unsigned char const*, unsigned int)
art::DeoptimizeStackVisitor::HandleOptimizingDeoptimization(art::ArtMethod*, art::ShadowFrame*, bool const*)
art::verifier::ConflictType::instance_
art::gc::collector::MarkSweep::MarkObjectNonNull(art::mirror::Object*, art::mirror::Object*, art::MemberOffset)
art::ObjPtr<art::mirror::Class> art::ArtField::GetType<true>()
art::gc::space::MallocSpace::FindRecentFreedObject(art::mirror::Object const*)
void art::mirror::Object::VisitFieldsReferences<false, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::collector::MarkCompact::MarkObjectVisitor>(unsigned int, art::gc::collector::MarkCompact::MarkObjectVisitor const&)
art::detail::CmdlineParserArgumentInfo<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::CompleteArgument()
art::detail::CmdlineParseArgument<bool>::~CmdlineParseArgument()
art::VariantMapKey<art::LogVerbosity>::ValueClone(void*) const
art::LinearAlloc::Realloc(art::Thread*, void*, unsigned int, unsigned int)
std::__1::function<art::ExperimentalFlags& ()>::swap(std::__1::function<art::ExperimentalFlags& ()>&)
art::mirror::PrimitiveArray<unsigned short>::VisitRoots(art::RootVisitor*)
art::ThreadList::SuspendAllInternal(art::Thread*, art::Thread*, art::Thread*, art::SuspendReason)
art::CheckJNI::CallStaticByteMethodV(_JNIEnv*, _jclass*, _jmethodID*, char*)
art::ClassLinker::LookupClass(art::Thread*, char const*, art::ObjPtr<art::mirror::ClassLoader>)
art::CheckJNI::CallStaticLongMethodV(_JNIEnv*, _jclass*, _jmethodID*, char*)
art::ScopedCheck::CheckPrimitiveArrayType(art::ScopedObjectAccess&, _jarray*, art::Primitive::Type)
art::gc::collector::GarbageCollector::ScopedPause::ScopedPause(art::gc::collector::GarbageCollector*, bool)
art::JNI::CallNonvirtualDoubleMethodV(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, char*)
art::detail::CmdlineParseArgument<art::ExperimentalFlags>::ParseArgumentSingle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::Runtime::BlockSignals()
art::WellKnownClasses::java_lang_Throwable_suppressedExceptions
art::ProfileSaver::Stop(bool)
art::detail::CmdlineParseArgument<art::ProfileSaverOptions>::GetTypeName() const
art::CheckJNI::GetStringCharsInternal(char const*, _JNIEnv*, _jstring*, unsigned char*, bool, bool)
art::x86::X86Context::SetFPR(unsigned int, unsigned int)
vtable for art::CHAStackVisitor
art::VariantMapKey<art::gc::space::LargeObjectSpaceType>::ValueDelete(void*) const
art::BuildInternalStackTraceVisitor<false>::VisitFrame()
art::InitLogging(char**, void (&)(char const*))
art::JNI::IsAssignableFrom(_JNIEnv*, _jclass*, _jclass*)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Plugin const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::LogVerbosity&)#1}, std::__1::allocator<{lambda(art::LogVerbosity&)#1}>, void (art::LogVerbosity&)>::~__func()
art::CheckJNI::CallShortMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)
art::Transaction::Transaction()
art::BaseMutex::RecordContention(unsigned long long, unsigned long long, unsigned long long)
_JNIEnv::CallNonvirtualVoidMethod(_jobject*, _jclass*, _jmethodID*, ...)
void std::__1::vector<art::DexFile const*, std::__1::allocator<art::DexFile const*> >::__push_back_slow_path<art::DexFile const* const&>(art::DexFile const* const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, bool& ()>::destroy()
art::BitVector::NumSetBits(unsigned int) const
art::annotations::IsFieldAnnotationPresent(art::ArtField*, art::Handle<art::mirror::Class>)
art::DexFile::FindCatchHandlerOffset(art::DexFile::CodeItem const&, unsigned int)
art::IndirectReferenceTable::VisitRoots(art::RootVisitor*, art::RootInfo const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::IntoKey(art::RuntimeArgumentMapKey<art::ExperimentalFlags> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ExperimentalFlags& ()>::destroy_deallocate()
art::verifier::RegisterLine::ClearRegToLockDepth(unsigned int, unsigned int)
art::BitVector::NumSetBits() const
std::__1::__shared_ptr_emplace<bool, std::__1::allocator<bool> >::__on_zero_shared()
art::gc::space::MemoryToolMallocSpace<art::gc::space::DlMallocSpace, 8u, true, false>::MaxBytesBulkAllocatedFor(unsigned int)
art::ArtMethod* art::ClassLinker::ResolveMethod<(art::ClassLinker::ResolveMode)1>(art::DexFile const&, unsigned int, art::Handle<art::mirror::DexCache>, art::Handle<art::mirror::ClassLoader>, art::ArtMethod*, art::InvokeType)
art::JDWP::JdwpState::LastDebuggerActivity()
non-virtual thunk to art::gc::collector::MarkSweep::~MarkSweep()
artInstrumentationMethodEntryFromCode
unix_file::FdFile::Destroy()
art::detail::CmdlineParseArgument<art::BackgroundGcOption>::GetNumTokens() const
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::ThreadPriority const&)
art::ClassLinker::GetDexLockOwner()
_JNIEnv::NewObject(_jclass*, _jmethodID*, ...)
MterpInvokeStatic
art::ClassLinker::SetupInterfaceLookupTable(art::Thread*, art::Handle<art::mirror::Class>, art::Handle<art::mirror::ObjectArray<art::mirror::Class> >)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::IntoKey(art::RuntimeArgumentMapKey<art::TraceClockSource> const&)::{lambda(art::TraceClockSource&)#1}, std::__1::allocator<{lambda(art::TraceClockSource&)#1}>, void (art::TraceClockSource&)>::destroy_deallocate()
art::ArtField* art::FindFieldFromCode<(art::FindFieldType)1, true>(unsigned int, art::ArtMethod*, art::Thread*, unsigned int)
art::ClassDataItemIterator::ReadClassDataField()
art::VariantMapKey<bool (*)()>::Clone() const
art::ResetQuickAllocEntryPoints(art::QuickEntryPoints*, bool)
art::Locks::SetClientCallback(bool (*)())
art::PrintableString(char const*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ParseStringList<(char)58>& ()>::destroy_deallocate()
vtable for art::ElfOatFile
inflate_copyright
art::gc::accounting::SpaceBitmap<8u>::~SpaceBitmap()
bool art::interpreter::DoFilledNewArray<true, true, true>(art::Instruction const*, art::ShadowFrame const&, art::Thread*, art::JValue*)
art::BuildQuickArgumentVisitor::Visit()
art::OatQuickMethodHeader::OatQuickMethodHeader(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
art::VariantMapKey<art::JDWP::JdwpOptions>::Clone() const
art::ArmInstructionSetFeatures::AsBitmap() const
art::GetAndroidDataSafe(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
vtable for art::BuildNativeCallFrameStateMachine<art::BuildGenericJniFrameVisitor::FillJniCall>
art::ArenaBitVectorAllocator<art::ArenaAllocator>::~ArenaBitVectorAllocator()
mspace_trim
art::verifier::PreciseReferenceType::Dump() const
void art::ArtField::SetShort<false>(art::ObjPtr<art::mirror::Object>, short)
art::gc::Heap::GetInstances(art::VariableSizedHandleScope&, art::Handle<art::mirror::Class>, int, std::__1::vector<art::Handle<art::mirror::Object>, std::__1::allocator<art::Handle<art::mirror::Object> > >&)
non-virtual thunk to art::gc::collector::MarkCompact::MarkObject(art::mirror::Object*)
art::DumpCheckpoint::~DumpCheckpoint()
art::hprof::Hprof::LookupStringId(char const*)
art::RuntimeArgumentMap::BackgroundGc
std::__1::deque<art::Task*, std::__1::allocator<art::Task*> >::__add_back_capacity()
artLockObjectFromCode
art::verifier::UninitializedReferenceType::~UninitializedReferenceType()
art::CheckJNI::CallDoubleMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)
void art::mirror::Class::VisitNativeRoots<(art::ReadBarrierOption)1, art::gc::collector::ConcurrentCopying::VerifyNoMissingCardMarkVisitor const>(art::gc::collector::ConcurrentCopying::VerifyNoMissingCardMarkVisitor const&, art::PointerSize)
art::detail::CmdlineParseArgument<art::MillisecondsToNanoseconds>::~CmdlineParseArgument()
art::VdexFile::Header::kVdexInvalidMagic
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::CompleteArgument()
art::jit::Jit::ShouldUsePriorityThreadWeight()
vtable for art::BitVector
art::mirror::String::DoReplace(art::Thread*, art::Handle<art::mirror::String>, unsigned short, unsigned short)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}, std::__1::allocator<{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}>, void (std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)>
art::VariantMapKey<double>::Clone() const
art::gc::space::RosAllocSpace::InspectAllRosAlloc(void (*)(void*, void*, unsigned int, void*), void*, bool)
art::JNI::CallDoubleMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)
art::ProfileCompilationInfo::FindDexData(art::DexFile const*) const
art::detail::CmdlineParserArgumentInfo<art::BackgroundGcOption>::CompleteArgument()
art::verifier::ByteType::instance_
art::StackVisitor::GetCurrentQuickFrameInfo() const
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder::Ignore(std::initializer_list<char const*>)
art::Runtime::~Runtime()
art::FaultManager::HandleFaultByOtherHandlers(int, siginfo*, void*)
non-virtual thunk to art::gc::collector::ConcurrentCopying::~ConcurrentCopying()
void art::verifier::MethodVerifier::VerifyISFieldAccess<(art::verifier::MethodVerifier::FieldAccessType)1>(art::Instruction const*, art::verifier::RegType const&, bool, bool)
art::x86::X86Context::SetPC(unsigned int)
art::Dbg::GetReflectedType(unsigned long long, art::JDWP::ExpandBuf*)
art::FindFrameVisitor::~FindFrameVisitor()
art::gc::space::MemoryToolMallocSpace<art::gc::space::RosAllocSpace, 8u, false, true>::FreeList(art::Thread*, unsigned int, art::mirror::Object**)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::CreateTypedBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >()
art::detail::CmdlineParseArgument<unsigned int>::~CmdlineParseArgument()
art::gc::ReferenceProcessor::EnableSlowPath()
art::Runtime::VisitNonThreadRoots(art::RootVisitor*)
art::Memory<1024u>::Name()::str
art::gc::space::ImageSpace::GetOatFile() const
art::DexFile::GetIndexForClassDef(art::DexFile::ClassDef const&) const
art::X86InstructionSetFeatures::FromAssembly(bool)
art::RuntimeCallbacks::SigQuit()
art::VariantMapKey<art::ParseStringList<(char)58> >::ValueClone(void*) const
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Set<art::ProfileSaverOptions>(art::RuntimeArgumentMapKey<art::ProfileSaverOptions> const&, art::Identity<art::ProfileSaverOptions>::type const&)
art::mirror::Class::FindClassMethod(art::ObjPtr<art::mirror::DexCache>, unsigned int, art::PointerSize)
art::gc::collector::ConcurrentCopying::ActivateReadBarrierEntrypointsCheckpoint::~ActivateReadBarrierEntrypointsCheckpoint()
art::Thread::FullSuspendCheck()
artThrowClassCastException
art::CheckJNI::ExceptionClear(_JNIEnv*)
void art::ClassTable::VisitRoots<art::UnbufferedRootVisitor>(art::UnbufferedRootVisitor&)
art::JNI::CallFloatMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)
art::RuntimeArgumentMap::AgentLib
art::IsParameterTypeConvertible(art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::Class>)
art::ZipArchive::OpenFromFd(int, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::mirror::MethodHandle::StaticClass()
std::__1::deque<art::instrumentation::InstrumentationStackFrame, std::__1::allocator<art::instrumentation::InstrumentationStackFrame> >::insert(std::__1::__deque_iterator<art::instrumentation::InstrumentationStackFrame, art::instrumentation::InstrumentationStackFrame const*, art::instrumentation::InstrumentationStackFrame const&, art::instrumentation::InstrumentationStackFrame const* const*, int, 204>, art::instrumentation::InstrumentationStackFrame const&)
art::mirror::Method::array_class_
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::IntoKey(art::RuntimeArgumentMapKey<art::LogVerbosity> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::LogVerbosity& ()>
art::gc::collector::MarkCompact::~MarkCompact()
art::gc::collector::MarkSweep::~MarkSweep()
void art::ClassTable::VisitRoots<art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor>(art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor const&)
art::BitVector::BitVector(unsigned int, bool, art::Allocator*)
art::gc::Heap::PreGcVerificationPaused(art::gc::collector::GarbageCollector*)
art::IsMarkedVisitor::~IsMarkedVisitor()
art::TokenRange::RemoveCharacter(char) const
art::VariantMapKey<art::ExperimentalFlags>::ValueClone(void*) const
art::TypeLookupTable::TypeLookupTable(unsigned char const*, unsigned char const*, unsigned int)
art::gc::allocator::RosAlloc::FreeFromRun(art::Thread*, void*, art::gc::allocator::RosAlloc::Run*)
art::gc::space::RosAllocSpace::RevokeThreadLocalBuffers(art::Thread*)
art::Thread::IsInterrupted()
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)
art::Locks::oat_file_manager_lock_
art::JDWP::Request::ReadFrameId()
art::VariantMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::Clone() const
art::Thread::AssertNoPendingExceptionForNewException(char const*) const
art::mirror::PrimitiveArray<int>::SetArrayClass(art::ObjPtr<art::mirror::Class>)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoKey(art::RuntimeArgumentMapKey<art::Unit> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>::~__func()
unix_file::FdFile::ReadOnlyMode() const
art::gc::space::ContinuousMemMapAllocSpace::AsContinuousMemMapAllocSpace()
art::Dbg::GetReferenceCounterForEvent(unsigned int)
art::VariantMapKey<art::ExperimentalFlags>::ValueDelete(void*) const
__frame_state_for
art::DexFile::GetMultiDexLocation(unsigned int, char const*)
MterpLogSuspendFallback
art::CheckJNI::CallNonvirtualDoubleMethod(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, ...)
art::annotations::GetParametersMetadataForMethod(art::ArtMethod*, art::MutableHandle<art::mirror::ObjectArray<art::mirror::String> >*, art::MutableHandle<art::mirror::PrimitiveArray<int> >*)
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::gc::collector::MarkCompact::UpdateReferenceVisitor const>(art::gc::collector::MarkCompact::UpdateReferenceVisitor const&, art::PointerSize)
art::CmdlineParseResult<double>::OutOfRange(double const&, double const&, double const&)
art::WellKnownClasses::dalvik_annotation_optimization_FastNative
art::Barrier::Init(art::Thread*, int)
art::OatFile::BssEnd() const
art::JDWP::JdwpNetStateBase::WriteBufferedPacket(std::__1::vector<iovec, std::__1::allocator<iovec> > const&)
art::gc::collector::SemiSpace::SetToSpace(art::gc::space::ContinuousMemMapAllocSpace*)
void std::__1::vector<art::Breakpoint, std::__1::allocator<art::Breakpoint> >::__push_back_slow_path<art::Breakpoint>(art::Breakpoint&&)
vtable for art::gc::space::MemoryToolMallocSpace<art::gc::space::DlMallocSpace, 8u, true, false>
bool art::mirror::Executable::CreateFromArtMethod<(art::PointerSize)8, false>(art::ArtMethod*)
artLookupResolvedMethod
art::CheckJNI::MonitorEnter(_JNIEnv*, _jobject*)
art::Dbg::DdmHandleHpifChunk(art::Dbg::HpifWhen)
art::JNI::NewByteArray(_JNIEnv*, int)
art::hprof::EndianOutput::HandleU4List(unsigned int const*, unsigned int)
unix_file::FdFile::SetLength(long long)
non-virtual thunk to art::gc::space::DlMallocSpace::RevokeAllThreadLocalBuffers()
std::__1::__split_buffer<art::ArtField**, std::__1::allocator<art::ArtField**> >::push_front(art::ArtField**&&)
art::verifier::LongHiType const* art::verifier::RegTypeCache::CreatePrimitiveTypeInstance<art::verifier::LongHiType>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::mirror::PrimitiveArray<signed char>::Get(int)
art::detail::CmdlineParseArgument<double>::~CmdlineParseArgument()
art::interpreter::UnstartedRuntime::UnstartedSystemArraycopyInt(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::Thread::PushVerifier(art::verifier::MethodVerifier*)
art::mirror::DexCache::AtomicLoadRelaxed16B(std::__1::atomic<art::mirror::DexCache::ConversionPair<unsigned long long> >*)
art::jit::Jit::DumpInfo(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::RuntimeCallbacks::AddClassLoadCallback(art::ClassLoadCallback*)
art::RuntimeArgumentMap::ClassPath
bool art::interpreter::DoIGetQuick<(art::Primitive::Type)4>(art::ShadowFrame&, art::Instruction const*, unsigned short)
art::mirror::Object* art::gc::space::RegionSpace::AllocLarge<false>(unsigned int, unsigned int*, unsigned int*, unsigned int*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::IntoKey(art::RuntimeArgumentMapKey<art::ProfileSaverOptions> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ProfileSaverOptions& ()>::__clone(std::__1::__function::__base<art::ProfileSaverOptions&>*) const
art::CheckJNI::NewDirectByteBuffer(_JNIEnv*, void*, long long)
art::gc::accounting::MemoryRangeBitmap<1024u>::Clear(unsigned int)
art::Runtime::EnterTransactionMode(art::Transaction*)
art::Trace::GetClockOverheadNanoSeconds()
std::__1::__function::__func<android::base::LogdLogger, std::__1::allocator<android::base::LogdLogger>, void (android::base::LogId, android::base::LogSeverity, char const*, char const*, unsigned int, char const*)>::__clone(std::__1::__function::__base<void (android::base::LogId, android::base::LogSeverity, char const*, char const*, unsigned int, char const*)>*) const
art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::__1::less<unsigned short>, art::ArenaAllocatorAdapter<std::__1::pair<unsigned short const, art::ProfileCompilationInfo::DexPcData> > >::SafeMap(art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::__1::less<unsigned short>, art::ArenaAllocatorAdapter<std::__1::pair<unsigned short const, art::ProfileCompilationInfo::DexPcData> > > const&)
art::ReadFileToString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::verifier::LongLoType::~LongLoType()
void art::mirror::DexCache::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::collector::MarkCompact::UpdateReferenceVisitor>(art::ObjPtr<art::mirror::Class>, art::gc::collector::MarkCompact::UpdateReferenceVisitor const&)
art::IndirectReferenceTable::AbortIfNoCheckJNI(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::JNI::CallStaticByteMethodV(_JNIEnv*, _jclass*, _jmethodID*, char*)
art::Arena::~Arena()
art::BitVector::GetAllocator() const
art::JNI::CallStaticLongMethodV(_JNIEnv*, _jclass*, _jmethodID*, char*)
art::Barrier::Increment(art::Thread*, int, unsigned int)
void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::accounting::CheckReferenceVisitor, art::VoidFunctor>(art::gc::accounting::CheckReferenceVisitor const&, art::VoidFunctor const&)
_JNIEnv::CallStaticVoidMethod(_jclass*, _jmethodID*, ...)
art::ReplaceFileExtension(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::X86_64InstructionSetFeatures::AddFeaturesFromSplitString(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
artGetCharStaticFromCode
art::gc::collector::MarkSweep::ResizeMarkStack(unsigned int)
vtable for art::JDWP::JdwpSocketState
art::gc::space::BumpPointerSpace::AsBumpPointerSpace()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}, std::__1::allocator<{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}>, void (std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)>::~__func()
deflateInit2_
std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::underflow()
art::gc::space::ContinuousSpace::IsContinuousSpace() const
art::JNIEnvExt::PushFrame(int)
art::verifier::RegisterLine::GetInvocationThis(art::verifier::MethodVerifier*, art::Instruction const*, bool)
vtable for std::__1::__shared_ptr_emplace<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >
art::Transaction::ObjectLog::LogCharValue(art::MemberOffset, unsigned short, bool)
art::JNI::CallNonvirtualObjectMethodV(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, char*)
art::Trace::UseThreadCpuClock()
art::verifier::MethodVerifier::VerifyInvokeVirtualQuickArgs(art::Instruction const*, bool)
art::LockedFile::Open(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::JDWP::Request::ReadSigned32(char const*)
art::verifier::LongHiType::CreateInstance(art::mirror::Class*, art::StringPiece const&, unsigned short)
void art::mirror::DexCache::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor>(art::ObjPtr<art::mirror::Class>, art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor const&)
std::__1::__tree<std::__1::__value_type<art::mirror::Array*, art::Transaction::ArrayLog>, std::__1::__map_value_compare<art::mirror::Array*, std::__1::__value_type<art::mirror::Array*, art::Transaction::ArrayLog>, std::__1::less<art::mirror::Array*>, true>, std::__1::allocator<std::__1::__value_type<art::mirror::Array*, art::Transaction::ArrayLog> > >::destroy(std::__1::__tree_node<std::__1::__value_type<art::mirror::Array*, art::Transaction::ArrayLog>, void*>*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoIgnore()::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>::~__func()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)
art::CmdlineType<art::Memory<1u> >::Parse(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>::operator()()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, double& ()>::destroy_deallocate()
art::verifier::UnresolvedSuperClass::Dump() const
art::ArtField::PrettyField(art::ArtField*, bool)
art::ElfFileImpl<ElfTypes64>::GetDynamicProgramHeader() const
art::JNI::CallNonvirtualByteMethodV(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, char*)
vtable for std::__1::__shared_ptr_emplace<unsigned int, std::__1::allocator<unsigned int> >
art::ClassLoaderContext::~ClassLoaderContext()
art::InternTable::AddImagesStringsToTable(std::__1::vector<art::gc::space::ImageSpace*, std::__1::allocator<art::gc::space::ImageSpace*> > const&)
void std::__1::__invoke_void_return_wrapper<void>::__call<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::IntoKey(art::RuntimeArgumentMapKey<double> const&)::{lambda(double&)#1}&, double&>(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::IntoKey(art::RuntimeArgumentMapKey<double> const&)::{lambda(double&)#1}&, double&)
art::verifier::RegisterLine::PopMonitor(art::verifier::MethodVerifier*, unsigned int)
vtable for art::VariantMapKey<bool (*)()>
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>::__clone(std::__1::__function::__base<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&>*) const
art::QuickExceptionHandler::DoLongJump(bool)
art::MonitorExitHelper(art::Thread*, art::mirror::Object*)
art::JNI::GetStaticMethodID(_JNIEnv*, _jclass*, char const*, char const*)
art::UpdateEntryPointsClassVisitor::~UpdateEntryPointsClassVisitor()
non-virtual thunk to art::gc::space::ZygoteSpace::RevokeAllThreadLocalBuffers()
void art::mirror::Class::VisitNativeRoots<(art::ReadBarrierOption)0, art::gc::VerifyReferenceVisitor const>(art::gc::VerifyReferenceVisitor const&, art::PointerSize)
art::jit::JitCodeCache::FreeCode(void const*)
art::OatHeader::SetQuickGenericJniTrampolineOffset(unsigned int)
art::Thread::AssertHasDeoptimizationContext()
art::LinearAlloc::LinearAlloc(art::ArenaPool*)
vtable for art::detail::CmdlineParseArgument<art::LogVerbosity>
art::CheckJNI::SetStaticByteField(_JNIEnv*, _jclass*, _jfieldID*, signed char)
art::gc::Heap::FindCollectorByGcType(art::gc::collector::GcType)
art::interpreter::UnstartedRuntime::UnstartedSystemArraycopyByte(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::RuntimeArgumentMapKey<void (*)(int)>::~RuntimeArgumentMapKey()
void art::mirror::VisitDexCachePairs<art::mirror::MethodType, (art::ReadBarrierOption)0, art::gc::Verification::BFSFindReachable>(std::__1::atomic<art::mirror::DexCachePair<art::mirror::MethodType> >*, unsigned int, art::gc::Verification::BFSFindReachable const&)
art::gc::space::LargeObjectMapSpace::Walk(void (*)(void*, void*, unsigned int, void*), void*)
MemoryWriter::Append(unsigned char*, unsigned int)
art::gc::TaskProcessor::~TaskProcessor()
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double> art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::CreateTypedBuilder<double>()
art::gc::space::RegionSpace::FromSpaceSize()
void art::JNI::GetPrimitiveArrayRegion<_jbooleanArray*, unsigned char, art::mirror::PrimitiveArray<unsigned char> >(_JNIEnv*, _jbooleanArray*, int, int, unsigned char*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1024u>& ()>::destroy()
inflate_table
art::Runtime::SetResolutionMethod(art::ArtMethod*)
art::VariantMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::~VariantMapKey()
art::gc::allocator::RosAlloc::AllocFromRunThreadUnsafe(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
void art::JNI::SetPrimitiveArrayRegion<_jfloatArray*, float, art::mirror::PrimitiveArray<float> >(_JNIEnv*, _jfloatArray*, int, int, float const*)
art::ClassLinker::VisitClassesWithoutClassesLock(art::ClassVisitor*)
art::CheckJNI::SetDoubleField(_JNIEnv*, _jobject*, _jfieldID*, double)
art::GetResolvedMethod(art::ArtMethod*, art::MethodInfo const&, art::InlineInfo const&, art::InlineInfoEncoding const&, unsigned char)
void art::JNI::ReleasePrimitiveArray<_jshortArray*, short, art::mirror::PrimitiveArray<short> >(_JNIEnv*, _jshortArray*, short*, int)
art::detail::CmdlineParseArgument<art::XGcOption>::GetTypeName() const
art::gc::accounting::AtomicStack<art::mirror::Object>::Sort()
art::ArgArray::BuildArgArrayFromObjectArray(art::ObjPtr<art::mirror::Object>, art::ObjPtr<art::mirror::ObjectArray<art::mirror::Object> >, art::ArtMethod*, art::Thread*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::IntoKey(art::RuntimeArgumentMapKey<art::gc::space::LargeObjectSpaceType> const&)::{lambda(art::gc::space::LargeObjectSpaceType&)#1}, std::__1::allocator<{lambda(art::gc::space::LargeObjectSpaceType&)#1}>, void (art::gc::space::LargeObjectSpaceType&)>::destroy_deallocate()
art::TypeLookupTable::Create(art::DexFile const&, unsigned char*)
art::JNIEnvExt::PopFrame()
art::ElfFileImpl<ElfTypes64>::GetDynamicSectionStart() const
art::StringPiece::copy(char*, unsigned int, unsigned int) const
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds> art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::CreateTypedBuilder<art::MillisecondsToNanoseconds>()
art::Thread::GetCurrentMethod(unsigned int*, bool, bool) const
art::CountModifiedUtf8Chars(char const*, unsigned int)
art::Locks::host_dlopen_handles_lock_
art::DexFile::DexFile(unsigned char const*, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, art::OatDexFile const*)
art::verifier::MethodVerifier::VisitRoots(art::RootVisitor*, art::RootInfo const&)
art::DexFileVerifier::CheckIntraClassDataItem()
art::DexFile::IsMultiDexLocation(char const*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::XGcOption> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::XGcOption& ()>::~__func()
art::gc::collector::StickyMarkSweep::~StickyMarkSweep()
art::mirror::Throwable::GetStackState()
void art::mirror::Object::VisitFieldsReferences<false, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::accounting::ModUnionUpdateObjectReferencesVisitor>(unsigned int, art::gc::accounting::ModUnionUpdateObjectReferencesVisitor const&)
art::JNI::ReleaseStringChars(_JNIEnv*, _jstring*, unsigned short const*)
art::JNI::GetStringUTFLength(_JNIEnv*, _jstring*)
art::Dbg::DdmSendThreadNotification(art::Thread*, unsigned int)
art::gc::ScanVisitor::operator()(art::mirror::Object const*) const
art::Transaction::LogInternedString(art::Transaction::InternStringLog&&)
void std::__1::__sift_up<std::__1::less<art::DexFileAndClassPair>&, std::__1::__wrap_iter<art::DexFileAndClassPair*> >(std::__1::__wrap_iter<art::DexFileAndClassPair*>, std::__1::__wrap_iter<art::DexFileAndClassPair*>, std::__1::less<art::DexFileAndClassPair>&, std::__1::iterator_traits<std::__1::__wrap_iter<art::DexFileAndClassPair*> >::difference_type)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)::{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}, std::__1::allocator<{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}>, void (std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)>
art::gc::space::BumpPointerSpace::UpdateMainBlock()
bool art::interpreter::DoIPutQuick<(art::Primitive::Type)1, true>(art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::gc::collector::ConcurrentCopying::ConcurrentCopying(art::gc::Heap*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
art::gc::collector::PartialMarkSweep::GetGcType() const
vtable for art::VariantMapKey<int (*)(__sFILE*, char const*, char*)>
art::gc::collector::GarbageCollector::GetTotalPausedTimeNs()
art::InstructionSetFeatures::FromCpuInfo()
art::TimingLogger::TimingLogger(char const*, bool, bool)
art::gc::accounting::SpaceBitmap<8u>::ComputeBitmapSize(unsigned long long)
void art::mirror::Object::VisitFieldsReferences<false, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::accounting::RememberedSetReferenceVisitor>(unsigned int, art::gc::accounting::RememberedSetReferenceVisitor const&)
art::gc::collector::StickyMarkSweep::StickyMarkSweep(art::gc::Heap*, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::CheckJNI::ReleaseFloatArrayElements(_JNIEnv*, _jfloatArray*, float*, int)
art::mirror::Class::EnsureExtDataPresent(art::Thread*)
android::base::Readlink(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::verifier::RegTypeCache::Init()
art::verifier::VerifierDeps::FindOneClassPathBoundaryForInterface(art::mirror::Class*, art::mirror::Class*) const
unix_file::FdFile::moveTo(unix_file::FdFile::GuardState, unix_file::FdFile::GuardState, char const*)
art::register_java_lang_reflect_Array(_JNIEnv*)
android::base::GetExecutableDirectory()
bool art::interpreter::DoFieldGet<(art::FindFieldType)6, (art::Primitive::Type)6, true>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
void std::__1::__sort<art::LinkFieldsComparator&, std::__1::__deque_iterator<art::ArtField*, art::ArtField**, art::ArtField*&, art::ArtField***, int, 1024> >(std::__1::__deque_iterator<art::ArtField*, art::ArtField**, art::ArtField*&, art::ArtField***, int, 1024>, std::__1::__deque_iterator<art::ArtField*, art::ArtField**, art::ArtField*&, art::ArtField***, int, 1024>, art::LinkFieldsComparator&)
non-virtual thunk to art::gc::space::DlMallocSpace::GetObjectsAllocated()
MterpLogNoSuchMethodException
deflateSetDictionary
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::BufferedRootVisitor<256u> >(art::BufferedRootVisitor<256u>&, art::PointerSize)
art::gc::space::RegionSpace::AsRegionSpace()
inflateGetHeader
art::JDWP::JdwpState::PostVMDeath()
art::gc::accounting::SpaceBitmap<4096u>::Test(art::mirror::Object const*) const
art::CheckJNI::FindClass(_JNIEnv*, char const*)
art::gc::space::Space::AsAllocSpace()
art::ProfileCompilationInfo::DumpInfo(std::__1::vector<art::DexFile const*, std::__1::allocator<art::DexFile const*> > const*, bool) const
vtable for art::detail::CmdlineParseArgument<art::ExperimentalFlags>
artAllocStringFromBytesFromCodeRegionTLAB
art::RuntimeArgumentMap::SlowDebug
artAllocObjectFromCodeResolvedRegionInstrumented
art::ParsedOptions::Parse(std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void const*>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void const*> > > const&, bool, art::RuntimeArgumentMap*)
art::verifier::RegTypeCache::FromCat2ConstHi(int, bool)
art::dex::tracking::DexFileTrackingRegistrar::SetDexFileRegistration(bool)
art::gc::collector::ConcurrentCopying::VerifyGrayImmuneObjectsVisitor::CheckReference(art::ObjPtr<art::mirror::Object>, art::ObjPtr<art::mirror::Object>, art::MemberOffset) const
bool art::interpreter::DoIPutQuick<(art::Primitive::Type)3, false>(art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::VariantMapKey<art::CompilerCallbacks*>::Clone() const
art::instrumentation::Instrumentation::UpdateMethodsCodeImpl(art::ArtMethod*, void const*)
_ZN3art6detail11ToStringAnyIjEENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEERKT_PNS2_9enable_ifIXsr25SupportsInsertionOperatorIS9_EE5valueEvE4typeE
art::ArmInstructionSetFeatures::GetInstructionSet() const
art::gc::collector::ConcurrentCopying::MarkHeapReference(art::mirror::HeapReference<art::mirror::Object>*, bool)
void std::__1::vector<art::IRTSegmentState, std::__1::allocator<art::IRTSegmentState> >::__push_back_slow_path<art::IRTSegmentState const&>(art::IRTSegmentState const&)
ExecuteMterpImpl
art::gc::space::LargeObjectMapSpace::Alloc(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::StringTable::Add(char const*, bool)
std::__1::__tree_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, int> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__emplace_hint_unique_key_args<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, int>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::verifier::RegTypeCache::FromClass(char const*, art::mirror::Class*, bool)
art::mirror::PrimitiveArray<long long>::ResetArrayClass()
art::gc::space::BumpPointerSpace::AllocBlock(unsigned int)
art::gc::AllocRecord::GetClassDescriptor(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
art::verifier::RegTypeCache::primitive_count_
art::gc::space::LargeObjectSpace::RevokeAllThreadLocalBuffers()
art::mirror::Constructor::static_class_
art::verifier::PcToRegisterLineTable::~PcToRegisterLineTable()
art::CompilerFilter::IsQuickeningCompilationEnabled(art::CompilerFilter::Filter)
art::gc::accounting::SpaceBitmap<8u>::HasAddress(void const*) const
_ZN3art6detail11ToStringAnyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEES8_NS2_6vectorIT_NS6_ISA_EEEEPNS2_9enable_ifIXsr25SupportsInsertionOperatorISA_EE5valueEvE4typeE
art::MipsInstructionSetFeatures::FromCpuInfo()
art::Trace::Pause()
vtable for art::gc::space::ImageSpaceLoader::FixupArtFieldVisitor
void std::__1::vector<art::gc::collector::GcType, std::__1::allocator<art::gc::collector::GcType> >::__push_back_slow_path<art::gc::collector::GcType>(art::gc::collector::GcType&&)
art::VdexFile::FullyUnquickenDexFile(art::DexFile const&, art::DexFile const&) const
art::ZipArchive::Find(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
bool& art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination::GetOrCreateFromMap<bool>(art::RuntimeArgumentMapKey<bool> const&)
art::Trace::MethodEntered(art::Thread*, art::Handle<art::mirror::Object>, art::ArtMethod*, unsigned int)
vtable for art::verifier::ByteType
art::gc::space::MemoryToolMallocSpace<art::gc::space::DlMallocSpace, 8u, true, false>::AllocationSize(art::mirror::Object*, unsigned int*)
art::verifier::PreciseConstType::GetAssignmentTypeImpl() const
vtable for art::CountClassesVisitor
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::IntoKey(art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::JDWP::JdwpOptions& ()>::destroy_deallocate()
art::Locks::AddToExpectedMutexesOnWeakRefAccess(art::BaseMutex*, bool)
art::Trace::RegisterThread(art::Thread*)
art::JNIEnvExt::SelfOffset(unsigned int)
MterpInvokeVirtual
art::JNIEnvExt::SetFunctionsToRuntimeShutdownFunctions()
art::verifier::BooleanType::Dump() const
_Unwind_GetLanguageSpecificData
art::gc::allocator::RosAlloc::Initialize()
void art::mirror::VisitDexCachePairs<art::mirror::Class, (art::ReadBarrierOption)0, art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor>(std::__1::atomic<art::mirror::DexCachePair<art::mirror::Class> >*, unsigned int, art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor const&)
art::BitVector::BitVector(bool, art::Allocator*, unsigned int, unsigned int*)
unix_file::FdFile::PreadFully(void*, unsigned int, unsigned int)
art::Trace::EncodeTraceMethodAndAction(art::ArtMethod*, art::TraceAction)
art::DexCacheResolvedClasses::AddClass(art::dex::TypeIndex) const
art::JNI::GetStaticFloatField(_JNIEnv*, _jclass*, _jfieldID*)
art::verifier::MethodVerifier::VerifyClass(art::Thread*, art::DexFile const*, art::Handle<art::mirror::DexCache>, art::Handle<art::mirror::ClassLoader>, art::DexFile::ClassDef const&, art::CompilerCallbacks*, bool, art::verifier::HardFailLogMode, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::gc::space::RosAllocSpace::CreateInstance(art::MemMap*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, void*, unsigned char*, unsigned char*, unsigned char*, unsigned int, bool)
std::__1::vector<art::ProfileMethodInfo::ProfileInlineCache, std::__1::allocator<art::ProfileMethodInfo::ProfileInlineCache> >::__swap_out_circular_buffer(std::__1::__split_buffer<art::ProfileMethodInfo::ProfileInlineCache, std::__1::allocator<art::ProfileMethodInfo::ProfileInlineCache>&>&)
art::StringPiece::rfind(char, unsigned int) const
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::gc::accounting::CheckReferenceVisitor const>(art::gc::accounting::CheckReferenceVisitor const&, art::PointerSize)
art::DexFileVerifier::CheckInterStringIdItem()
void art::gc::accounting::CardTable::ModifyCardsAtomic<art::gc::AgeCardVisitor, art::gc::accounting::ModUnionAddToCardSetVisitor>(unsigned char*, unsigned char*, art::gc::AgeCardVisitor const&, art::gc::accounting::ModUnionAddToCardSetVisitor const&)
vtable for art::detail::CmdlineParseArgument<art::TraceClockSource>
art::gc::collector::MarkCompact::Compact()
art::gc::collector::MarkSweep::VerifyRootVisitor::~VerifyRootVisitor()
art::ReaderWriterMutex::ReaderWriterMutex(char const*, art::LockLevel)
art::jit::JitCodeCache::DisallowInlineCacheAccess()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::IntoKey(art::RuntimeArgumentMapKey<art::LogVerbosity> const&)::{lambda(art::LogVerbosity&)#1}, std::__1::allocator<{lambda(art::LogVerbosity&)#1}>, void (art::LogVerbosity&)>::operator()(art::LogVerbosity&)
art::VariantMapKey<art::Unit>::~VariantMapKey()
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor const>(art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor const&, art::PointerSize)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::VRegKind const&)
art::GetResolvedClassesVisitor::operator()(art::ObjPtr<art::mirror::Class>)
art::gc::collector::ConcurrentCopying::ActivateReadBarrierEntrypointsCallback::~ActivateReadBarrierEntrypointsCallback()
art::gc::space::RosAllocSpace::LogFragmentationAllocFailure(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, unsigned int)
art::WellKnownClasses::java_util_ArrayList_array
art::ShadowFrame::GetThisObject(unsigned short) const
art::gc::collector::MarkSweep::Sweep(bool)
art::ShadowFrame::GetThisObject() const
art::mirror::Object* art::gc::Heap::AllocLargeObject<false, art::mirror::SetStringCountAndValueVisitorFromString>(art::Thread*, art::ObjPtr<art::mirror::Class>*, unsigned int, art::mirror::SetStringCountAndValueVisitorFromString const&)
art::ReaderWriterMutex::IsReaderWriterMutex() const
art::gc::accounting::SpaceBitmap<8u>::CreateFromMemMap(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::MemMap*, unsigned char*, unsigned int)
std::__1::__tree<std::__1::__value_type<unsigned short, art::ProfileCompilationInfo::DexPcData>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, art::ProfileCompilationInfo::DexPcData>, std::__1::less<unsigned short>, true>, art::ArenaAllocatorAdapter<std::__1::__value_type<unsigned short, art::ProfileCompilationInfo::DexPcData> > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned short, art::ProfileCompilationInfo::DexPcData>, void*>*)
art::WellKnownClasses::java_lang_Thread_priority
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::JDWP::JdwpOptions&)#1}, std::__1::allocator<{lambda(art::JDWP::JdwpOptions&)#1}>, void (art::JDWP::JdwpOptions&)>::__clone() const
void art::mirror::Executable::SetArtMethod<true>(art::ArtMethod*)
art::RuntimeArgumentMap::LongPauseLogThreshold
art::verifier::RegType::IsUninitializedReference() const
artSet8InstanceFromCode
vtable for art::jit::Jit
art::gc::collector::MarkSweep::MarkStackTask<false>::Run(art::Thread*)
art::JValue art::interpreter::ExecuteSwitchImpl<true, false>(art::Thread*, art::DexFile::CodeItem const*, art::ShadowFrame&, art::JValue, bool)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::BackgroundGcOption> const&)
art::MipsInstructionSetFeatures::GetFeatureString() const
art::ArenaStack::UpdateBytesAllocated()
vtable for std::__1::__shared_ptr_emplace<art::verifier::VerifyMode, std::__1::allocator<art::verifier::VerifyMode> >
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::JDWP::JdwpOptions& ()>
art::ClassLinker::IsBootClassLoader(art::ScopedObjectAccessAlreadyRunnable&, art::ObjPtr<art::mirror::ClassLoader>)
art::ElfFileImpl<ElfTypes32>::GetSymbolNum(Elf32_Shdr&) const
art::mirror::PrimitiveArray<unsigned char>::VisitRoots(art::RootVisitor*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::IntoKey(art::RuntimeArgumentMapKey<double> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, double& ()>::__clone(std::__1::__function::__base<double&>*) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::IntoKey(art::RuntimeArgumentMapKey<art::LogVerbosity> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::LogVerbosity& ()>::destroy_deallocate()
art::detail::CmdlineParseArgument<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::MaybeMatches(art::TokenRange const&)
art::ClassLinker::ResolveType(art::dex::TypeIndex, art::ArtMethod*)
art::gc::Heap::GrowForUtilization(art::gc::collector::GarbageCollector*, unsigned long long)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >& ()>::__clone() const
art::LockWord::FromHashCode(unsigned int, unsigned int)
art::verifier::MethodVerifier::CheckSignaturePolymorphicMethod(art::ArtMethod*)
art::JNI::CallNonvirtualDoubleMethodA(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, jvalue*)
vtable for art::VisitClassLoaderClassesVisitor::DefiningClassLoaderFilterVisitor
art::gc::ReferenceProcessor::StopPreservingReferences(art::Thread*)
art::gc::space::DlMallocSpace::GetFootprint()
art::gc::space::RegionSpace::RegionSpace(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::MemMap*)
art::DexFile::IsReadOnly() const
std::__1::__shared_ptr_pointer<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*, std::__1::default_delete<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__on_zero_shared_weak()
art::WellKnownClasses::java_lang_ThreadGroup
art::ObjectRegistry::DisposeObject(unsigned long long, unsigned int)
art::gc::accounting::RememberedSet::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::vector(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)
artAllocStringFromCharsFromCodeBumpPointer
artSet16InstanceFromCompiledCode
art::ProgramInvocationName()
art::WellKnownClasses::java_lang_reflect_Executable_artMethod
art::ElfFileImpl<ElfTypes32>::FindDynamicSymbolAddress(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
art::gc::collector::MarkSweep::MarkNonThreadRoots()
std::__1::__shared_ptr_emplace<art::gc::space::LargeObjectSpaceType, std::__1::allocator<art::gc::space::LargeObjectSpaceType> >::__on_zero_shared_weak()
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Dbg::EventFlag const&)
art::mirror::Object* art::gc::Heap::AllocObjectWithAllocator<true, true, art::mirror::SetStringCountAndBytesVisitor>(art::Thread*, art::ObjPtr<art::mirror::Class>, unsigned int, art::gc::AllocatorType, art::mirror::SetStringCountAndBytesVisitor const&)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}, std::__1::allocator<{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}>, void (std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)>
artAllocObjectFromCodeWithChecksRegionTLAB
art::ConditionVariable::Wait(art::Thread*)
bool art::interpreter::DoFieldGet<(art::FindFieldType)6, (art::Primitive::Type)1, true>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned int, std::__1::allocator<char> const&)
vtable for art::GetThisVisitor
vtable for art::gc::IdentityMarkHeapReferenceVisitor
art::ElfFileImpl<ElfTypes64>::Fixup(unsigned long long)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoKey(art::RuntimeArgumentMapKey<art::Unit> const&)::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>::__clone() const
art::OsInfo::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::hprof::Hprof::AddRuntimeInternalObjectsField(art::mirror::Class*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::IntoKey(art::RuntimeArgumentMapKey<unsigned int> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, unsigned int& ()>::~__func()
_tr_init
art::detail::CmdlineParseArgument<art::ProfileSaverOptions>::~CmdlineParseArgument()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >& ()>::destroy()
art::OatHeader::GetStoreValueByKey(char const*) const
art::ClassLoaderContext::Parse(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
art::gc::RootMatchesObjectVisitor::VisitRoot(art::mirror::Object*, art::RootInfo const&)
art::gc::collector::MarkCompact::UpdateObjectReferences(art::mirror::Object*)
std::__1::__tree<std::__1::__value_type<art::mirror::Class*, unsigned int>, std::__1::__map_value_compare<art::mirror::Class*, std::__1::__value_type<art::mirror::Class*, unsigned int>, std::__1::less<art::mirror::Class*>, true>, std::__1::allocator<std::__1::__value_type<art::mirror::Class*, unsigned int> > >::destroy(std::__1::__tree_node<std::__1::__value_type<art::mirror::Class*, unsigned int>, void*>*)
art::verifier::UnresolvedUninitializedThisRefType::IsUnresolvedAndUninitializedThisReference() const
art::ClassLinker::IsJniDlsymLookupStub(void const*) const
art::Dbg::DdmConnected()
art::TokenRange::MatchSubstrings(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const::{lambda()#1}::operator()() const
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Set<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&, art::Identity<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::type const&)
artAllocObjectFromCodeResolvedDlMallocInstrumented
art::ti::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::ti::Agent::LoadError const&)
art::TokenRange::MatchSubstrings(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
art::OatFileAssistant::OatFileInfo::ClassLoaderContextIsOkay(art::ClassLoaderContext*)
art::mips64::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::mips64::FpuRegister const&)
art::OatFileAssistant::OatFileInfo::Status()
art::ArenaAllocator::AllocWithMemoryTool(unsigned int, art::ArenaAllocKind)
art::InternTable::Table::SweepWeaks(art::IsMarkedVisitor*)
vtable for art::detail::CmdlineParseArgument<unsigned int>
art::ArtField::GetAccessFlagsDCheck()
art::detail::CmdlineParseArgument<unsigned int>::GetNumTokens() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::ExperimentalFlags&)#1}, std::__1::allocator<{lambda(art::ExperimentalFlags&)#1}>, void (art::ExperimentalFlags&)>::~__func()
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::IntoKey(art::RuntimeArgumentMapKey<art::ProfileSaverOptions> const&)
art::OatMethodOffsets::~OatMethodOffsets()
vtable for art::DexFile
art::JNI::CallStaticBooleanMethod(_JNIEnv*, _jclass*, _jmethodID*, ...)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1u>& ()>::__clone() const
art::VariantMapKey<art::CompilerCallbacks*>::ValueDelete(void*) const
art::gc::space::LargeObjectSpace::Sweep(bool)
art::InvokeMethod(art::ScopedObjectAccessAlreadyRunnable const&, _jobject*, _jobject*, _jobject*, unsigned int)
art::jit::Jit::DumpTypeInfoForLoadedTypes(art::ClassLinker*)
_ZN3art6detail11ToStringAnyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEES8_RKT_PNS2_9enable_ifIXsr25SupportsInsertionOperatorIS9_EE5valueEvE4typeE
art::detail::CmdlineParseArgument<art::Unit>::MaybeMatches(art::TokenRange const&)
virtual thunk to std::__1::basic_istream<char, std::__1::char_traits<char> >::~basic_istream()
artSetCharStaticFromCompiledCode
art::verifier::CharType::IsChar() const
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)5, false, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>::~__func()
std::__1::__split_buffer<art::Task**, std::__1::allocator<art::Task**>&>::push_front(art::Task** const&)
std::__1::__tree<std::__1::__value_type<unsigned int, unsigned int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned int>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned int> > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned int>, void*>*)
art::JavaVMExt::DecodeWeakGlobalLocked(art::Thread*, void*)
art::mirror::Object* art::gc::Heap::AllocObjectWithAllocator<true, true, art::mirror::CopyClassVisitor>(art::Thread*, art::ObjPtr<art::mirror::Class>, unsigned int, art::gc::AllocatorType, art::mirror::CopyClassVisitor const&)
_Unwind_GetTextRelBase
art::OatHeader::IsNativeDebuggable() const
art::gc::space::Space::~Space()
art::JDWP::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::JDWP::JdwpSuspendStatus const&)
std::__1::pair<std::__1::__tree_iterator<art::ProfileCompilationInfo::ClassReference, std::__1::__tree_node<art::ProfileCompilationInfo::ClassReference, void*>*, int>, bool> std::__1::__tree<art::ProfileCompilationInfo::ClassReference, std::__1::less<art::ProfileCompilationInfo::ClassReference>, art::ArenaAllocatorAdapter<art::ProfileCompilationInfo::ClassReference> >::__emplace_unique_key_args<art::ProfileCompilationInfo::ClassReference, art::ProfileCompilationInfo::ClassReference const&>(art::ProfileCompilationInfo::ClassReference const&, art::ProfileCompilationInfo::ClassReference const&)
art::detail::CmdlineParserArgumentInfo<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::CmdlineParserArgumentInfo(art::detail::CmdlineParserArgumentInfo<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >&&)
bool art::interpreter::DoIGetQuick<(art::Primitive::Type)1>(art::ShadowFrame&, art::Instruction const*, unsigned short)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoIgnore()::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>
art::CumulativeLogger::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::StackVisitor::ComputeNumFrames(art::Thread*, art::StackVisitor::StackWalkKind)
art::gc::accounting::CardTable::kCardClean
void art::ClassTable::VisitRoots<art::gc::accounting::RememberedSetReferenceVisitor>(art::gc::accounting::RememberedSetReferenceVisitor const&)
art::verifier::MethodVerifier::CheckArrayData(unsigned int)
art::CheckJNI::CallNonvirtualByteMethodA(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, jvalue*)
art::JDWP::JdwpState::ResetState()
artGetShortStaticFromCode
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::IntoKey(art::RuntimeArgumentMapKey<double> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, double& ()>::operator()()
art::Mips64InstructionSetFeatures::AddFeaturesFromSplitString(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
art::gc::space::DlMallocSpace::AllocationSize(art::mirror::Object*, unsigned int*)
artGetBooleanInstanceFromCode
art::ClassLinker::LoadMethod(art::DexFile const&, art::ClassDataItemIterator const&, art::Handle<art::mirror::Class>, art::ArtMethod*)
std::__1::__split_buffer<std::__1::pair<art::mirror::Object*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >*, std::__1::allocator<std::__1::pair<art::mirror::Object*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >*> >::push_back(std::__1::pair<art::mirror::Object*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >*&&)
art::gc::Heap::IncrementDisableThreadFlip(art::Thread*)
art::OatHeader::GetImagePatchDelta() const
art::ImageHeader::GetPointerSize() const
art::mirror::PrimitiveArray<signed char>::ResetArrayClass()
art::ClassTable::UpdateClass(char const*, art::mirror::Class*, unsigned int)
art::gc::accounting::SpaceBitmap<8u>::GetName() const
art::JNI::CallObjectMethodA(_JNIEnv*, _jobject*, _jmethodID*, jvalue*)
art::CmdlineType<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::Parse(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::BackgroundGcOption> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::BackgroundGcOption& ()>::__clone() const
art::ImageHeader::IsValid() const
art::gc::collector::ConcurrentCopying::AssertToSpaceInvariant(art::GcRootSource*, art::mirror::Object*)
art::RootVisitor::~RootVisitor()
bool art::interpreter::DoFieldGet<(art::FindFieldType)4, (art::Primitive::Type)0, false>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
void art::gc::accounting::SpaceBitmap<8u>::VisitMarkedRange<art::gc::accounting::ModUnionReferenceVisitor&>(unsigned int, unsigned int, art::gc::accounting::ModUnionReferenceVisitor&) const
artAllocStringFromCharsFromCodeDlMallocInstrumented
art::ConditionVariable::~ConditionVariable()
art::JavaVMExt::JniAbortF(char const*, char const*, ...)
art::verifier::BooleanType::instance_
art::CheckJNI::CallNonvirtualLongMethodA(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, jvalue*)
art::IsValidMemberName(char const*)
art::Runtime::Start()
art::gc::space::BumpPointerSpace::NonGrowthLimitCapacity() const
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::CompleteArgument()
art::gc::collector::SemiSpace::SweepSystemWeaks()
adler32
art::ElfFileImpl<ElfTypes64>::GetHeader() const
art::DexRegisterLocationCatalog::kNoLocationEntryIndex
art::Thread::SetIsGcMarkingAndUpdateEntrypoints(bool)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::XGcOption> const&)::{lambda(art::XGcOption&)#1}, std::__1::allocator<{lambda(art::XGcOption&)#1}>, void (art::XGcOption&)>::~__func()
art::verifier::UnresolvedMergedType::CheckInvariants() const
art::gc::collector::ConcurrentCopying::DisableMarkingCallback::~DisableMarkingCallback()
art::verifier::ConstantType::IsZero() const
art::JDWP::Request::Request(unsigned char const*, unsigned int)
art::verifier::UndefinedType::CreateInstance(art::mirror::Class*, art::StringPiece const&, unsigned short)
art::gc::collector::SemiSpace::VisitRoots(art::mirror::Object***, unsigned int, art::RootInfo const&)
art::Runtime::SetCalleeSaveMethod(art::ArtMethod*, art::CalleeSaveType)
art::verifier::UnresolvedUninitializedRefType::Dump() const
artAllocStringFromStringFromCodeRegionInstrumented
art::gc::accounting::Bitmap::AllocateMemMap(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int)
std::__1::__hash_table<art::OatQuickMethodHeader*, std::__1::hash<art::OatQuickMethodHeader*>, std::__1::equal_to<art::OatQuickMethodHeader*>, std::__1::allocator<art::OatQuickMethodHeader*> >::__rehash(unsigned int)
art::CheckJNI::NewObjectA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
art::JavaVMExt::JavaVMExt(art::Runtime*, art::RuntimeArgumentMap const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::Transaction::UndoObjectModifications()
art::JNI::ExceptionDescribe(_JNIEnv*)
art::MonitorList::DisallowNewMonitors()
art::ArtMethod::FromReflectedMethod(art::ScopedObjectAccessAlreadyRunnable const&, _jobject*)
art::JNI::NewObjectA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
art::gc::ReferenceProcessor::EnqueueClearedReferences(art::Thread*)
art::Thread::InitAfterFork()
art::FaultManager::AddHandler(art::FaultHandler*, bool)
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)5, true, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::CheckJNI::SetShortArrayRegion(_JNIEnv*, _jshortArray*, int, int, short const*)
art::detail::CmdlineParseArgument<art::Unit>::~CmdlineParseArgument()
art::mirror::Class::ResetClass()
art::mirror::Field* art::mirror::Field::CreateFromArtField<(art::PointerSize)4, true>(art::Thread*, art::ArtField*, bool)
art::VdexFile::OpenAllDexFiles(std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::ThrowStringIndexOutOfBoundsException(int, int)
art::IndirectReferenceTable::IndirectReferenceTable(unsigned int, art::IndirectRefKind, art::IndirectReferenceTable::ResizableCapacity, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::BackgroundGcOption> const&)::{lambda(art::BackgroundGcOption&)#1}, std::__1::allocator<{lambda(art::BackgroundGcOption&)#1}>, void (art::BackgroundGcOption&)>
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1024u>& ()>::~__func()
art::Dbg::GetClassName(unsigned long long)
art::CheckJNI::ReleaseStringCritical(_JNIEnv*, _jstring*, unsigned short const*)
art::gc::Heap::AddSpace(art::gc::space::Space*)
std::__1::pair<std::__1::__tree_iterator<art::gc::space::AllocationInfo*, std::__1::__tree_node<art::gc::space::AllocationInfo*, void*>*, int>, bool> std::__1::__tree<art::gc::space::AllocationInfo*, art::gc::space::FreeListSpace::SortByPrevFree, std::__1::allocator<art::gc::space::AllocationInfo*> >::__emplace_unique_key_args<art::gc::space::AllocationInfo*, art::gc::space::AllocationInfo* const&>(art::gc::space::AllocationInfo* const&, art::gc::space::AllocationInfo* const&)
art::verifier::MethodVerifier::CheckSwitchTargets(unsigned int)
art::gc::collector::ConcurrentCopying::Sweep(bool)
art::ClassLinker::LinkInterfaceMethodsHelper::UpdateIfTable(art::Handle<art::mirror::IfTable>)
art::gc::collector::ConcurrentCopying::ImmuneSpaceScanObjVisitor::Callback(art::mirror::Object*, void*)
art::gc::collector::GarbageCollector::ResetCumulativeStatistics()
std::__1::unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)>, void*>, std::__1::__hash_node_destructor<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)>, void*> > > > std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)> > >::__construct_node<std::__1::pair<char const*, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)> >(std::__1::pair<char const*, void (*)(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)>&&)
art::Thread::VisitRoots(art::RootVisitor*, art::VisitRootFlags)
art::verifier::ShortType::~ShortType()
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)::{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}, std::__1::allocator<{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}>, void (std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)>::destroy()
art::gc::Heap::UpdateGcCountRateHistograms()
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >& ()>
art::gc::accounting::CardTable::~CardTable()
art::ConditionVariable::ConditionVariable(char const*, art::Mutex&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::IntoKey(art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds> const&)::{lambda(art::MillisecondsToNanoseconds&)#1}, std::__1::allocator<{lambda(art::MillisecondsToNanoseconds&)#1}>, void (art::MillisecondsToNanoseconds&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::MillisecondsToNanoseconds&)#1}> >*) const
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::IntoKey(art::RuntimeArgumentMapKey<unsigned int> const&)::{lambda(unsigned int&)#1}, std::__1::allocator<{lambda(unsigned int&)#1}>, void (unsigned int&)>
std::__1::basic_istream<char, std::__1::char_traits<char> >::~basic_istream()
art::JDWP::JdwpNetStateBase::IsConnected()
art::Thread::Thread(bool)
art::CheckJNI::GetStaticFieldID(_JNIEnv*, _jclass*, char const*, char const*)
art::CompilerFilter::GetNonProfileDependentFilterFrom(art::CompilerFilter::Filter)
art::register_java_lang_reflect_Parameter(_JNIEnv*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)::{lambda(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&)#1}::operator()(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >&) const
void art::ArtField::SetInt<false>(art::ObjPtr<art::mirror::Object>, int)
art::gc::Heap::RegisterNativeFree(_JNIEnv*, unsigned int)
art::gc::space::LargeObjectSpace::LogFragmentationAllocFailure(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::IntoKey(art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::JDWP::JdwpOptions& ()>::destroy()
art::WellKnownClasses::Init(_JNIEnv*)
art::JDWP::Request::ReadUnsigned32(char const*)
art::Dbg::GetJdwpState()
art::gc::Heap::GetBytesAllocatedEver() const
art::StackMap::Dump(art::VariableIndentationOutputStream*, art::CodeInfo const&, art::CodeInfoEncoding const&, art::MethodInfo const&, unsigned int, unsigned short, art::InstructionSet, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
void std::__1::vector<std::__1::unique_ptr<art::OatFile, std::__1::default_delete<art::OatFile> >, std::__1::allocator<std::__1::unique_ptr<art::OatFile, std::__1::default_delete<art::OatFile> > > >::__push_back_slow_path<std::__1::unique_ptr<art::OatFile, std::__1::default_delete<art::OatFile> > >(std::__1::unique_ptr<art::OatFile, std::__1::default_delete<art::OatFile> >&&)
art::detail::CmdlineParseArgument<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::~CmdlineParseArgument()
art::gc::ScopedGCCriticalSection::ScopedGCCriticalSection(art::Thread*, art::gc::GcCause, art::gc::CollectorType)
std::__1::__shared_ptr_emplace<art::TraceClockSource, std::__1::allocator<art::TraceClockSource> >::__on_zero_shared_weak()
art::gc::Heap::AllocWithNewTLAB(art::Thread*, unsigned int, bool, unsigned int*, unsigned int*, unsigned int*)
std::__1::__tree<art::Histogram<unsigned long long>*, art::CumulativeLogger::HistogramComparator, std::__1::allocator<art::Histogram<unsigned long long>*> >::destroy(std::__1::__tree_node<art::Histogram<unsigned long long>*, void*>*)
art::JDWP::JdwpState::SuspendByPolicy(art::JDWP::JdwpSuspendPolicy, unsigned long long)
art::detail::CmdlineParseArgument<art::Memory<1024u> >::GetNumTokens() const
art::ClassLinker::LinkInterfaceMethodsHelper::~LinkInterfaceMethodsHelper()
art::gc::AllocRecordObjectMap::~AllocRecordObjectMap()
art::MonitorList::DeflateMonitors()
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)3, true, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
android::base::DefaultAborter(char const*)
art::Locks::classlinker_classes_lock_
art::Dbg::GetThreadName(unsigned long long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::gc::Heap::LogGC(art::gc::GcCause, art::gc::collector::GarbageCollector*)
art::ThreadList::SuspendThreadByThreadId(unsigned int, art::SuspendReason, bool*)
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)3, true, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::verifier::UndefinedType::instance_
artAllocObjectFromCodeWithChecksBumpPointer
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1024u> > const&)::{lambda(art::Memory<1024u>&)#1}, std::__1::allocator<{lambda(art::Memory<1024u>&)#1}>, void (art::Memory<1024u>&)>::~__func()
art::InvalidReceiverError(art::ObjPtr<art::mirror::Object>, art::ObjPtr<art::mirror::Class>)
art::VariantMapKey<art::ExperimentalFlags>::~VariantMapKey()
art::gc::Heap::ObjectIsInBootImageSpace(art::ObjPtr<art::mirror::Object>) const
art::instrumentation::Instrumentation::BranchImpl(art::Thread*, art::ArtMethod*, unsigned int, int) const
art::ThrowNewException(_JNIEnv*, _jclass*, char const*, _jobject*)
art::register_java_lang_reflect_Constructor(_JNIEnv*)
std::__1::__split_buffer<art::Task**, std::__1::allocator<art::Task**>&>::push_back(art::Task**&&)
art::Dbg::MatchThread(unsigned long long, art::Thread*)
art::gc::collector::ImmuneSpaces::Reset()
art::InternTable::LookupWeakLocked(art::ObjPtr<art::mirror::String>)
art::gc::space::DlMallocSpace::Clear()
art::OatDexFile::~OatDexFile()
art::BuildQuickShadowFrameVisitor::~BuildQuickShadowFrameVisitor()
art::BarrierClosure::~BarrierClosure()
vtable for art::BarrierClosure
art::BuildNativeCallFrameStateMachine<art::BuildGenericJniFrameVisitor::FillJniCall>::~BuildNativeCallFrameStateMachine()
std::__1::__hash_const_iterator<std::__1::__hash_node<art::StringTable::Entry, void*>*> std::__1::__hash_table<art::StringTable::Entry, art::StringTable::EntryHash, std::__1::equal_to<art::StringTable::Entry>, std::__1::allocator<art::StringTable::Entry> >::find<art::StringTable::Entry>(art::StringTable::Entry const&) const
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsFieldVisitor const>(art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsFieldVisitor const&, art::PointerSize)
art::gc::Heap::GetPercentFree()
art::detail::CmdlineParserArgumentInfo<bool>::~CmdlineParserArgumentInfo()
art::interpreter::UnstartedRuntime::UnstartedStringDoReplace(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::interpreter::UnstartedRuntime::UnstartedJNIFloatFloatToRawIntBits(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
art::JDWP::JdwpState::IsActive()
art::WellKnownClasses::java_lang_Double_valueOf
art::DexFileVerifier::CheckLoadStringByTypeIdx(art::dex::TypeIndex, char const*)
art::ElfFileImpl<ElfTypes32>::FindDynamicSymbol(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
art::ArtMethod* art::ClassLinker::ResolveMethod<(art::ClassLinker::ResolveMode)0>(art::DexFile const&, unsigned int, art::Handle<art::mirror::DexCache>, art::Handle<art::mirror::ClassLoader>, art::ArtMethod*, art::InvokeType)
art::VisitClassLoaderClassesVisitor::DefiningClassLoaderFilterVisitor::operator()(art::ObjPtr<art::mirror::Class>)
void std::__1::vector<art::FieldGap, std::__1::allocator<art::FieldGap> >::__push_back_slow_path<art::FieldGap>(art::FieldGap&&)
art::detail::CmdlineParserArgumentInfo<art::gc::space::LargeObjectSpaceType>::CompleteArgument()
void std::__1::vector<art::OatDexFile const*, std::__1::allocator<art::OatDexFile const*> >::__push_back_slow_path<art::OatDexFile const*>(art::OatDexFile const*&&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::IntoKey(art::RuntimeArgumentMapKey<art::ParseStringList<(char)58> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ParseStringList<(char)58>& ()>::__clone(std::__1::__function::__base<art::ParseStringList<(char)58>&>*) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >& ()>::destroy_deallocate()
art::ClassLoaderContext::FlattenOpenedDexFiles() const
art::interpreter::UnstartedRuntime::UnstartedClassForNameLong(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::detail::CmdlineParseArgument<art::verifier::VerifyMode>::GetNumTokens() const
_ZN3art6detail11ToStringAnyINS_6PluginEEENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_6vectorIT_NS7_ISB_EEEEPNS3_9enable_ifIXsr25SupportsInsertionOperatorISB_EE5valueEvE4typeE
art::IsZipMagic(unsigned int)
art::CodeSimulatorContainer::~CodeSimulatorContainer()
art::DexFile::Init(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
android::base::EndsWith(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*)
art::QuasiAtomic::SwapMutexCas64(long long, long long, long long volatile*)
unix_file::FdFile::ClearContent()
art::JNI::SetStaticIntField(_JNIEnv*, _jclass*, _jfieldID*, int)
art::SetQuickAllocEntryPoints_dlmalloc(art::QuickEntryPoints*, bool)
art::ArenaAllocator::AllocFromNewArena(unsigned int)
art::gc::allocator::RosAlloc::Run::InspectAllSlots(void (*)(void*, void*, unsigned int, void*), void*)
art::verifier::RegType::IsImpreciseConstant() const
art::ClassTable::WriteToMemory(unsigned char*) const
non-virtual thunk to art::gc::space::ZygoteSpace::LogFragmentationAllocFailure(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, unsigned int)
art::JNI::GetDirectBufferCapacity(_JNIEnv*, _jobject*)
art::gc::collector::SemiSpace::ProcessMarkStack()
vtable for art::gc::TaskProcessor
art::detail::CmdlineParseArgument<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::GetNumTokens() const
std::__1::basic_ostream<char, std::__1::char_traits<char> >::write(char const*, int)
art::ProfileCompilationInfo::SafeBuffer::CountUnreadBytes()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::IntoKey(art::RuntimeArgumentMapKey<art::ExperimentalFlags> const&)::{lambda(art::ExperimentalFlags&)#1}, std::__1::allocator<{lambda(art::ExperimentalFlags&)#1}>, void (art::ExperimentalFlags&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::ExperimentalFlags&)#1}> >*) const
art::CheckJNI::GetStaticObjectField(_JNIEnv*, _jclass*, _jfieldID*)
art::Dbg::DdmSendChunk(unsigned int, std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > const&)
art::ArtField* art::FindFieldFromCode<(art::FindFieldType)0, false>(unsigned int, art::ArtMethod*, art::Thread*, unsigned int)
art::CheckJNI::NewObjectV(_JNIEnv*, _jclass*, _jmethodID*, char*)
art::WellKnownClasses::java_lang_Error
art::CheckJNI::ReleasePrimitiveArrayCritical(_JNIEnv*, _jarray*, void*, int)
art::VariantMapKey<bool>::ValueClone(void*) const
std::__1::__tree<art::gc::allocator::RosAlloc::Run*, std::__1::less<art::gc::allocator::RosAlloc::Run*>, std::__1::allocator<art::gc::allocator::RosAlloc::Run*> >::destroy(std::__1::__tree_node<art::gc::allocator::RosAlloc::Run*, void*>*)
art::verifier::RegType::IsNonZeroReferenceTypes() const
artUnlockObjectFromCode
art::mirror::PrimitiveArray<unsigned char>::SetArrayClass(art::ObjPtr<art::mirror::Class>)
art::JNI::GetStaticObjectField(_JNIEnv*, _jclass*, _jfieldID*)
art::gc::space::MallocSpace::~MallocSpace()
art::ObjectLock<art::mirror::ClassExt>::NotifyAll()
art::MadviseLargestPageAlignedRegion(unsigned char const*, unsigned char const*, int)
art::QuickExceptionHandler::DeoptimizeStack()
non-virtual thunk to art::gc::space::BumpPointerSpace::AllocThreadUnsafe(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)
std::__1::basic_filebuf<char, std::__1::char_traits<char> >::underflow()
art::Runtime::GetHashTableMinLoadFactor() const
art::gc::Heap::ChangeCollector(art::gc::CollectorType)
vtable for art::JavaFrameRootInfo
vtable for art::detail::CmdlineParseArgument<art::JDWP::JdwpOptions>
art::verifier::RegType::IsUnresolvedReference() const
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::IntoKey(art::RuntimeArgumentMapKey<art::TraceClockSource> const&)
vtable for art::ReferenceMapVisitor<art::RootCallbackVisitor, false>
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::CompleteArgument()
artSet64InstanceFromCode
art::interpreter::UnstartedRuntime::UnstartedObjectHashCode(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::instrumentation::Instrumentation::ComputeFrameId(art::Thread*, unsigned int, unsigned int)
art::ProfilingInfo::AddInvokeInfo(unsigned int, art::mirror::Class*)
art::Indenter::sync()
art::verifier::BooleanType::IsBoolean() const
art::ProfileCompilationInfo::SafeBuffer::GetCurrentPtr()
art::ClassLinker::InsertClass(char const*, art::ObjPtr<art::mirror::Class>, unsigned int)
art::ArtField::GetStringName(art::Thread*, bool)
artSet64StaticFromCompiledCode
art::interpreter::UnstartedRuntime::UnstartedJNIUnsafeCompareAndSwapInt(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
art::ReaderWriterMutex::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
bool art::interpreter::DoIPutQuick<(art::Primitive::Type)0, false>(art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::CheckJNI::CallNonvirtualObjectMethodA(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, jvalue*)
art::BuildInternalStackTraceVisitor<true>::Init(int)
vtable for art::ThreadPool
art::gc::accounting::CheckReferenceVisitor::operator()(art::mirror::Object*, art::MemberOffset, bool) const
art::VariantMapKey<void (*)()>::~VariantMapKey()
art::CheckJNI::NewGlobalRef(_JNIEnv*, _jobject*)
mspace_memalign
art::OatHeader::IsConcurrentCopying() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoKey(art::RuntimeArgumentMapKey<art::Unit> const&)::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>::~__func()
art::ThreadList::RunEmptyCheckpoint()
vtable for art::FetchStackTraceVisitor
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::IntoKey(art::RuntimeArgumentMapKey<art::ProfileSaverOptions> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ProfileSaverOptions& ()>::destroy_deallocate()
art::StringPiece::substr(unsigned int, unsigned int) const
art::FillNativeCall::~FillNativeCall()
DlmallocBytesAllocatedCallback
std::__1::vector<art::ProfileCompilationInfo::DexReference, std::__1::allocator<art::ProfileCompilationInfo::DexReference> >::__append(unsigned int)
art::Runtime::SetStatsEnabled(bool)
art::CheckJNI::CallNonvirtualShortMethod(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, ...)
art::interpreter::UnstartedRuntime::UnstartedJNIObjectNotifyAll(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::IntoKey(art::RuntimeArgumentMapKey<art::LogVerbosity> const&)::{lambda(art::LogVerbosity&)#1}, std::__1::allocator<{lambda(art::LogVerbosity&)#1}>, void (art::LogVerbosity&)>::destroy()
art::CheckJNI::GetByteArrayElements(_JNIEnv*, _jbyteArray*, unsigned char*)
art::gc::Verification::FirstPathFromRootSet(art::ObjPtr<art::mirror::Object>) const
void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__emplace_back_slow_path<char const*>(char const*&&)
art::interpreter::UnstartedRuntime::UnstartedJNIAtomicLongVMSupportsCS8(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::IntoKey(art::RuntimeArgumentMapKey<art::LogVerbosity> const&)::{lambda(art::LogVerbosity&)#1}, std::__1::allocator<{lambda(art::LogVerbosity&)#1}>, void (art::LogVerbosity&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::LogVerbosity&)#1}> >*) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::IntoKey(art::RuntimeArgumentMapKey<art::TraceClockSource> const&)::{lambda(art::TraceClockSource&)#1}, std::__1::allocator<{lambda(art::TraceClockSource&)#1}>, void (art::TraceClockSource&)>::~__func()
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::gc::space::LargeObjectSpaceType& ()>
art::JNI::CallIntMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)
art::ClassLinker::AllocArtMethodArray(art::Thread*, art::LinearAlloc*, unsigned int)
art::JDWP::JdwpState::NotifyDdmsActive()
art::RuntimeArgumentMap::MethodTraceFileSize
art::mirror::Object* art::gc::space::RegionSpace::AllocLarge<true>(unsigned int, unsigned int*, unsigned int*, unsigned int*)
non-virtual thunk to art::gc::space::MemoryToolMallocSpace<art::gc::space::RosAllocSpace, 8u, false, true>::~MemoryToolMallocSpace()
art::detail::CmdlineParserArgumentInfo<unsigned int>::~CmdlineParserArgumentInfo()
deflateTune
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::ImageSection const&)
art::Monitor::PrettyContentionInfo(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, art::ArtMethod*, unsigned int, unsigned int)
art::LockedFile::DupOf(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::MallocArena::~MallocArena()
_ZNSt3__16vectorIPN3art6ThreadENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_
void art::ClassTable::VisitRoots<art::gc::collector::MarkCompact::MarkObjectVisitor>(art::gc::collector::MarkCompact::MarkObjectVisitor const&)
art::ThrowIOException(char const*, ...)
art::gc::Heap::FindSpaceFromObject(art::ObjPtr<art::mirror::Object>, bool) const
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::IntoKey(art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::MillisecondsToNanoseconds& ()>
art::Trace::CompareAndUpdateStackTrace(art::Thread*, std::__1::vector<art::ArtMethod*, std::__1::allocator<art::ArtMethod*> >*)
art::jit::Jit::~Jit()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::IntoKey(art::RuntimeArgumentMapKey<art::ProfileSaverOptions> const&)::{lambda(art::ProfileSaverOptions&)#1}, std::__1::allocator<{lambda(art::ProfileSaverOptions&)#1}>, void (art::ProfileSaverOptions&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::ProfileSaverOptions&)#1}> >*) const
void art::mirror::VisitDexCachePairs<art::mirror::Class, (art::ReadBarrierOption)0, art::gc::Verification::BFSFindReachable>(std::__1::atomic<art::mirror::DexCachePair<art::mirror::Class> >*, unsigned int, art::gc::Verification::BFSFindReachable const&)
art::InternTable::RemoveWeakFromTransaction(art::ObjPtr<art::mirror::String>)
DlmallocMadviseCallback
art::jit::Jit::jit_unload_
vtable for art::gc::space::RegionSpace
_Unwind_Backtrace
art::DeoptimizationRequest::SetMethod(art::ArtMethod*)
art::mirror::PrimitiveArray<unsigned char>::ResetArrayClass()
artSetByteStaticFromCode
art::MallocAllocator::Alloc(unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >& ()>::~__func()
non-virtual thunk to art::gc::space::FreeListSpace::Free(art::Thread*, art::mirror::Object*)
art::Barrier::Barrier(int)
art::MethodNameAndSignatureComparator::HasSameNameAndSignature(art::ArtMethod*)
art::ThrowIllegalAccessErrorClass(art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::Class>)
art::JNI::CallNonvirtualLongMethod(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, ...)
art::VisitClassLoaderClassesVisitor::DefiningClassLoaderFilterVisitor::~DefiningClassLoaderFilterVisitor()
art::ArtMethod::Invoke(art::Thread*, unsigned int*, unsigned int, art::JValue*, char const*)
art::mirror::PrimitiveArray<unsigned char>::array_class_
art::hprof::FileEndianOutput::~FileEndianOutput()
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Primitive::Type const&)
art::Dbg::RequiresDeoptimization()
art::gc::space::RegionSpace::RevokeThreadLocalBuffersLocked(art::Thread*)
art::detail::CmdlineParseArgument<art::TraceClockSource>::ParseArgumentSingle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::InitEntryPoints(art::JniEntryPoints*, art::QuickEntryPoints*)
art::ClassLinker::LinkInterfaceMethodsHelper::UpdateIMT(art::ArtMethod**)
art::ProfileCompilationInfo::GetProfileDexFileKey(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::ProfileSaver::DumpInfo(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::VariantMapKey<art::XGcOption>::ValueClone(void*) const
vtable for art::VariantMapKey<art::CompilerCallbacks*>
art::gc::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::gc::AllocatorType const&)
art::JDWP::JdwpState::FindMatchingEvents(art::JDWP::JdwpEventKind, art::JDWP::ModBasket const&, std::__1::vector<art::JDWP::JdwpEvent*, std::__1::allocator<art::JDWP::JdwpEvent*> >*)
art::gc::space::ImageSpace::~ImageSpace()
art::gc::space::LargeObjectMapSpace::~LargeObjectMapSpace()
art::OatFile::OatClass::GetOatMethod(unsigned int) const
art::mirror::PrimitiveArray<unsigned short>::Alloc(art::Thread*, unsigned int)
art::BuildStackTraceVisitor::~BuildStackTraceVisitor()
art::ScopedArenaAllocator::Reset()
art::Dbg::IsMethodObsolete(unsigned long long)
art::gc::space::DiscontinuousSpace::~DiscontinuousSpace()
art::detail::CmdlineParseArgument<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::SaveArgument(std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > const&)
art::ElfFileImpl<ElfTypes64>::GetString(unsigned int, unsigned int) const
non-virtual thunk to art::gc::space::LargeObjectMapSpace::AllocationSize(art::mirror::Object*, unsigned int*)
art::gc::accounting::ModUnionTableCardCache::SetCards()
art::detail::CmdlineParserArgumentInfo<art::JDWP::JdwpOptions>::CompleteArgument()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::TraceClockSource&)#1}, std::__1::allocator<{lambda(art::TraceClockSource&)#1}>, void (art::TraceClockSource&)>::destroy_deallocate()
art::ti::AGENT_ON_LOAD_FUNCTION_NAME
art::ClassLinker::~ClassLinker()
art::FaultManager::GetMethodAndReturnPcAndSp(siginfo*, void*, art::ArtMethod**, unsigned int*, unsigned int*)
artDeoptimizeFromCompiledCode
art::gc::collector::ConcurrentCopying::ThreadFlipVisitor::Run(art::Thread*)
non-virtual thunk to art::gc::space::RosAllocSpace::RevokeThreadLocalBuffers(art::Thread*)
art::gc::TaskProcessor::Stop(art::Thread*)
art::ElfFileImpl<ElfTypes32>::Open(unix_file::FdFile*, int, int, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
vtable for art::MallocAllocator
art::ProfilingInfo::ProfilingInfo(art::ArtMethod*, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&)
void art::JNI::SetPrimitiveArrayRegion<_jintArray*, int, art::mirror::PrimitiveArray<int> >(_JNIEnv*, _jintArray*, int, int, int const*)
void std::__1::vector<char*, std::__1::allocator<char*> >::__push_back_slow_path<char* const&>(char* const&)
art::gc::collector::ConcurrentCopying::ReenableWeakRefAccess(art::Thread*)
art::ProfileSaver::DumpInstanceInfo(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::TimingLogger::~TimingLogger()
art::Indenter::~Indenter()
artAllocObjectFromCodeWithChecksTLAB
art::mirror::DexCache::SetLocation(art::ObjPtr<art::mirror::String>)
art::DexFile::FindTryItem(art::DexFile::CodeItem const&, unsigned int)
art::gc::Verification::DumpObjectInfo(void const*, char const*) const
art::verifier::UnresolvedReferenceType::Dump() const
art::JNIEnvExt::Create(art::Thread*, art::JavaVMExt*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::DexFile::kClassesDex
art::verifier::PreciseReferenceType::HasClassVirtual() const
art::mirror::String::FastIndexOf(int, int)
art::InternTable::Table::VisitRoots(art::RootVisitor*)
std::__1::function<void (art::ProfileSaverOptions&)>::swap(std::__1::function<void (art::ProfileSaverOptions&)>&)
art::ThrowWrongMethodTypeException(art::mirror::MethodType*, art::mirror::MethodType*)
art::VariantMapKey<int (*)(__sFILE*, char const*, char*)>::ValueClone(void*) const
std::__1::__tree<art::verifier::VerifierDeps::TypeAssignability, std::__1::less<art::verifier::VerifierDeps::TypeAssignability>, std::__1::allocator<art::verifier::VerifierDeps::TypeAssignability> >::destroy(std::__1::__tree_node<art::verifier::VerifierDeps::TypeAssignability, void*>*)
art::gc::accounting::SpaceBitmap<4096u>::ClearVisitor::ClearVisitor(art::gc::accounting::SpaceBitmap<4096u>*)
vtable for art::BuildGenericJniFrameVisitor::FillJniCall
art::annotations::IsClassAnnotationPresent(art::Handle<art::mirror::Class>, art::Handle<art::mirror::Class>)
art::JDWP::JdwpState::ExitAfterReplying(int)
art::FaultManager::IsInGeneratedCode(siginfo*, void*, bool)
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<void (*)(int)>(art::RuntimeArgumentMapKey<void (*)(int)> const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::JDWP::JdwpOptions&)#1}, std::__1::allocator<{lambda(art::JDWP::JdwpOptions&)#1}>, void (art::JDWP::JdwpOptions&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::JDWP::JdwpOptions&)#1}> >*) const
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::gc::collector::ConcurrentCopying::RefFieldsVisitor const>(art::gc::collector::ConcurrentCopying::RefFieldsVisitor const&, art::PointerSize)
art::interpreter::UnstartedRuntime::UnstartedJNIArrayCreateMultiArray(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
art::ClassTable::ReadFromMemory(unsigned char*)
std::__1::__tree_node_base<void*>*& std::__1::__tree<art::ProfileCompilationInfo::ClassReference, std::__1::less<art::ProfileCompilationInfo::ClassReference>, art::ArenaAllocatorAdapter<art::ProfileCompilationInfo::ClassReference> >::__find_equal<art::ProfileCompilationInfo::ClassReference>(std::__1::__tree_const_iterator<art::ProfileCompilationInfo::ClassReference, std::__1::__tree_node<art::ProfileCompilationInfo::ClassReference, void*>*, int>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, art::ProfileCompilationInfo::ClassReference const&)
artSet16InstanceFromCode
art::InternTable::InsertStrong(art::ObjPtr<art::mirror::String>)
art::Dbg::UndoDebuggerSuspensions()
art::verifier::DoubleHiType::Dump() const
art::Locks::trace_lock_
art::Monitor::~Monitor()
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Set<art::JDWP::JdwpOptions>(art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions> const&, art::Identity<art::JDWP::JdwpOptions>::type const&)
art::verifier::Cat1Type::~Cat1Type()
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::gc::Verification::BFSFindReachable const>(art::gc::Verification::BFSFindReachable const&, art::PointerSize)
art::ClassLoaderContext::VerifyClassLoaderContextMatch(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
art::gc::space::ZygoteSpace::GetObjectsAllocated()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >& ()>::destroy()
art::CHACheckpoint::Run(art::Thread*)
bool art::DexFileVerifier::CheckIntraClassDataItemFields<false>(art::ClassDataItemIterator*, bool*, art::dex::TypeIndex*, art::DexFile::ClassDef const**)
art::Thread::FindDebuggerShadowFrame(unsigned int)
art::gc::space::RosAllocSpace::AllocThreadUnsafe(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::JDWP::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::JDWP::JdwpStepDepth const&)
art::Thread::Notify()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::BackgroundGcOption&)#1}, std::__1::allocator<{lambda(art::BackgroundGcOption&)#1}>, void (art::BackgroundGcOption&)>::destroy()
art::gc::accounting::Bitmap::Create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int)
art::gc::Heap::ConcurrentGCTask::~ConcurrentGCTask()
art::JNI::SetCharArrayRegion(_JNIEnv*, _jcharArray*, int, int, unsigned short const*)
art::CodeInfo::GetDexRegisterMapOf(art::StackMap, art::CodeInfoEncoding const&, unsigned int) const
vtable for art::X86InstructionSetFeatures
vtable for art::x86::X86Context
art::OatHeader::SetInterpreterToInterpreterBridgeOffset(unsigned int)
art::CheckJNI::GetObjectArrayElement(_JNIEnv*, _jobjectArray*, int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::gc::space::LargeObjectSpaceType&)#1}, std::__1::allocator<{lambda(art::gc::space::LargeObjectSpaceType&)#1}>, void (art::gc::space::LargeObjectSpaceType&)>::destroy_deallocate()
art::Transaction::RecordWriteFieldBoolean(art::mirror::Object*, art::MemberOffset, unsigned char, bool)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::IntoKey(art::RuntimeArgumentMapKey<art::ProfileSaverOptions> const&)::{lambda(art::ProfileSaverOptions&)#1}, std::__1::allocator<{lambda(art::ProfileSaverOptions&)#1}>, void (art::ProfileSaverOptions&)>::~__func()
art::gc::space::RegionSpace::GetLiveBitmap() const
art::CheckJNI::SetField(char const*, _JNIEnv*, _jobject*, _jfieldID*, bool, art::Primitive::Type, art::JniValueType)
art::FaultManager::Shutdown()
void art::mirror::DexCache::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::gc::collector::SemiSpace::MarkObjectVisitor>(art::ObjPtr<art::mirror::Class>, art::gc::collector::SemiSpace::MarkObjectVisitor const&)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, std::__1::multimap<void*, art::MemMap*, std::__1::less<void*>, std::__1::allocator<std::__1::pair<void* const, art::MemMap*> > > const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ParseStringList<(char)58>& ()>::__clone() const
art::gc::collector::ConcurrentCopying::Copy(art::mirror::Object*, art::mirror::Object*, art::MemberOffset)
art::Locks::runtime_shutdown_lock_
art::gc::space::DlMallocSpace::RevokeAllThreadLocalBuffers()
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::SuspendReason const&)
bool art::ClassTable::Visit<art::ClassVisitor>(art::ClassVisitor&)
art::AotClassLinker::~AotClassLinker()
art::detail::CmdlineParseArgument<art::BackgroundGcOption>::~CmdlineParseArgument()
art::OatFileAssistant::OatFileInfo::Reset(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
void art::ArtField::SetLong<false>(art::ObjPtr<art::mirror::Object>, long long)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::XGcOption&)#1}, std::__1::allocator<{lambda(art::XGcOption&)#1}>, void (art::XGcOption&)>::destroy()
art::mirror::CallSite::SetClass(art::mirror::Class*)
art::annotations::GetAnnotationsForField(art::ArtField*)
art::DexFileVerifier::CheckClassDataItemField(unsigned int, unsigned int, unsigned int, art::dex::TypeIndex, bool)
art::verifier::DoubleLoType::~DoubleLoType()
art::verifier::RegType::IsObjectArrayTypes() const
artSet32StaticFromCode
art::mirror::String::ComputeHashCode()
art::detail::CmdlineParserArgumentInfo<art::gc::space::LargeObjectSpaceType>::~CmdlineParserArgumentInfo()
unix_file::FdFile::Close()
art::verifier::ShortType const* art::verifier::RegTypeCache::CreatePrimitiveTypeInstance<art::verifier::ShortType>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
artGetByteInstanceFromCompiledCode
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::DexLayoutSection const&)
void std::__1::vector<art::HashSet<art::GcRoot<art::mirror::String>, art::InternTable::GcRootEmptyFn, art::InternTable::StringHashEquals, art::InternTable::StringHashEquals, std::__1::allocator<art::GcRoot<art::mirror::String> > >, std::__1::allocator<art::HashSet<art::GcRoot<art::mirror::String>, art::InternTable::GcRootEmptyFn, art::InternTable::StringHashEquals, art::InternTable::StringHashEquals, std::__1::allocator<art::GcRoot<art::mirror::String> > > > >::__push_back_slow_path<art::HashSet<art::GcRoot<art::mirror::String>, art::InternTable::GcRootEmptyFn, art::InternTable::StringHashEquals, art::InternTable::StringHashEquals, std::__1::allocator<art::GcRoot<art::mirror::String> > > >(art::HashSet<art::GcRoot<art::mirror::String>, art::InternTable::GcRootEmptyFn, art::InternTable::StringHashEquals, art::InternTable::StringHashEquals, std::__1::allocator<art::GcRoot<art::mirror::String> > >&&)
art::Thread::is_sensitive_thread_hook_
art::Thread::Shutdown()
art::Transaction::VisitArrayLogs(art::RootVisitor*)
art::ZipEntry::~ZipEntry()
art::CheckJNI::GetStringRegion(_JNIEnv*, _jstring*, int, int, unsigned short*)
art::gc::collector::GarbageCollector::~GarbageCollector()
art::ProfilingInfo::Create(art::Thread*, art::ArtMethod*, bool)
art::ClassLoaderContext::EncodeContextForDex2oat(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ProfileSaverOptions& ()>
std::__1::__tree<std::__1::__value_type<art::gc::space::Space*, art::gc::accounting::RememberedSet*>, std::__1::__map_value_compare<art::gc::space::Space*, std::__1::__value_type<art::gc::space::Space*, art::gc::accounting::RememberedSet*>, std::__1::less<art::gc::space::Space*>, true>, std::__1::allocator<std::__1::__value_type<art::gc::space::Space*, art::gc::accounting::RememberedSet*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<art::gc::space::Space*, art::gc::accounting::RememberedSet*>, void*>*)
art::OatFileManager::DumpForSigQuit(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::mirror::Constructor::SetClass(art::mirror::Class*)
art::ClassLinker::CreatePrimitiveClass(art::Thread*, art::Primitive::Type)
art::gc::Heap::VerifyHeap()
art::ProfilingInfo::GetInlineCache(unsigned int)
art::ClassLinker::NumZygoteClasses() const
art::gc::space::ImageSpace::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
non-virtual thunk to art::gc::collector::MarkSweep::~MarkSweep()
art::gc::accounting::SpaceBitmap<4096u>::~SpaceBitmap()
art::JDWP::JdwpState::SendRequestAndPossiblySuspend(art::JDWP::ExpandBuf*, art::JDWP::JdwpSuspendPolicy, unsigned long long)
art::JNI::GetShortArrayRegion(_JNIEnv*, _jshortArray*, int, int, short*)
art::mirror::Object::PrettyTypeOf()
art::CheckJNI::CheckCallArgs(art::ScopedObjectAccess&, art::ScopedCheck&, _JNIEnv*, _jobject*, _jclass*, _jmethodID*, art::InvokeType, art::VarArgs const*)
art::gc::accounting::ModUnionTableReferenceCache::SetCards()
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::gc::accounting::ModUnionUpdateObjectReferencesVisitor const>(art::gc::accounting::ModUnionUpdateObjectReferencesVisitor const&, art::PointerSize)
art::InternTable::Table::AddNewTable()
art::jit::JitCodeCache::CodeCacheSize()
art::JavaVMExt::UnloadNativeLibraries()
art::gc::space::MemoryToolMallocSpace<art::gc::space::RosAllocSpace, 8u, false, true>::~MemoryToolMallocSpace()
art::StringPiece::rfind(art::StringPiece const&, unsigned int) const
art::Runtime::IsCompilingBootImage() const
art::Runtime::GetPatchoatExecutable() const
art::JDWP::JdwpNetStateBase::SetAwaitingHandshake(bool)
art::CmdlineType<art::ProfileSaverOptions>::ParseAndAppend(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::ProfileSaverOptions&)
art::gc::accounting::ModUnionTableCardCache::ContainsCardFor(unsigned int)
art::ProfileCompilationInfo::InflateBuffer(unsigned char const*, unsigned int, unsigned int, unsigned char*)
art::ScopedSuspendAll::~ScopedSuspendAll()
art::detail::CmdlineParseArgument<bool>::ParseArgumentSingle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::verifier::MethodVerifier::VerifyAPut(art::Instruction const*, art::verifier::RegType const&, bool)
art::gc::space::RegionSpace::Alloc(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::gc::space::AllocSpace::SweepCallbackContext::SweepCallbackContext(bool, art::gc::space::Space*)
art::Runtime::VisitConstantRoots(art::RootVisitor*)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(char const*, unsigned int)
art::GetClassInToObjectArray::~GetClassInToObjectArray()
art::jit::JitCodeCache::RemoveMethod(art::ArtMethod*, bool)
art::DexFile::GetMultiDexSuffix(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::mirror::PrimitiveArray<short>::Alloc(art::Thread*, unsigned int)
art::mirror::Class::FindDeclaredDirectMethodByName(art::StringPiece const&, art::PointerSize)
art::ArtMethod* art::FindMethodFast<(art::InvokeType)3, true>(unsigned int, art::ObjPtr<art::mirror::Object>, art::ArtMethod*)
art::instrumentation::Instrumentation::UndeoptimizeEverything(char const*)
art::mirror::StackTraceElement::java_lang_StackTraceElement_
void art::verifier::MethodVerifier::VerifyQuickFieldAccess<(art::verifier::MethodVerifier::FieldAccessType)0>(art::Instruction const*, art::verifier::RegType const&, bool)
art::mirror::String::Equals(char const*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}, std::__1::allocator<{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}>, void (std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}> >*) const
art::MicroTime()
art::JNI::GetIntArrayElements(_JNIEnv*, _jintArray*, unsigned char*)
art::WellKnownClasses::java_lang_Object
art::gc::accounting::MemoryRangeBitmap<16u>::BitIndexFromAddr(unsigned int) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoIgnore()::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>::destroy()
art::arm64::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::arm64::XRegister const&)
art::ObjectLock<art::mirror::Object>::~ObjectLock()
std::__1::function<art::Memory<1u>& ()>::swap(std::__1::function<art::Memory<1u>& ()>&)
vtable for art::VariantMapKey<art::ExperimentalFlags>
vtable for art::verifier::PreciseConstHiType
art::gc::space::DlMallocSpace::CreateAllocator(void*, unsigned int, unsigned int, unsigned int, bool)
art::detail::CmdlineParseArgument<art::Memory<1u> >::ParseArgument(art::TokenRange const&, unsigned int*)
art::Transaction::InternStringLog::Undo(art::InternTable*) const
art::mips64::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::mips64::GpuRegister const&)
art::ArtMethod::FindOverriddenMethod(art::PointerSize)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::IntoKey(art::RuntimeArgumentMapKey<art::LogVerbosity> const&)::{lambda(art::LogVerbosity&)#1}, std::__1::allocator<{lambda(art::LogVerbosity&)#1}>, void (art::LogVerbosity&)>::__clone() const
art::ObjectLock<art::mirror::Class>::ObjectLock(art::Thread*, art::Handle<art::mirror::Class>)
art::Thread::AssertNoPendingException() const
std::__1::__tree_iterator<art::ProfileCompilationInfo::ClassReference, std::__1::__tree_node<art::ProfileCompilationInfo::ClassReference, void*>*, int> std::__1::__tree<art::ProfileCompilationInfo::ClassReference, std::__1::less<art::ProfileCompilationInfo::ClassReference>, art::ArenaAllocatorAdapter<art::ProfileCompilationInfo::ClassReference> >::__emplace_hint_unique_key_args<art::ProfileCompilationInfo::ClassReference, art::ProfileCompilationInfo::ClassReference const&>(std::__1::__tree_const_iterator<art::ProfileCompilationInfo::ClassReference, std::__1::__tree_node<art::ProfileCompilationInfo::ClassReference, void*>*, int>, art::ProfileCompilationInfo::ClassReference const&, art::ProfileCompilationInfo::ClassReference const&)
art::NullPointerHandler::Action(int, siginfo*, void*)
art::detail::CmdlineParserArgumentInfo<art::verifier::VerifyMode>::~CmdlineParserArgumentInfo()
art::OatFileAssistant::DexChecksumUpToDate(art::VdexFile const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)
art::ParsedOptions::Exit(int)
void art::ClassTable::VisitRoots<art::gc::collector::ConcurrentCopying::RefFieldsVisitor>(art::gc::collector::ConcurrentCopying::RefFieldsVisitor const&)
non-virtual thunk to art::gc::space::ZygoteSpace::Alloc(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1u>& ()>::destroy_deallocate()
art::ArtMethod::GetQuickenedInfo(art::PointerSize)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, double& ()>::__clone() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::ProfileSaverOptions&)#1}, std::__1::allocator<{lambda(art::ProfileSaverOptions&)#1}>, void (art::ProfileSaverOptions&)>::~__func()
art::gc::space::RegionSpace::UnevacFromSpaceSize()
art::CountClassesVisitor::Visit(art::ObjPtr<art::mirror::ClassLoader>)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::verifier::VerifyMode&)#1}, std::__1::allocator<{lambda(art::verifier::VerifyMode&)#1}>, void (art::verifier::VerifyMode&)>
bool art::interpreter::DoFieldGet<(art::FindFieldType)2, (art::Primitive::Type)3, false>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::detail::CmdlineParseArgument<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::GetTypeName() const
art::JNI::CallStaticDoubleMethodV(_JNIEnv*, _jclass*, _jmethodID*, char*)
art::ArenaBitVectorAllocator<art::ArenaAllocator>::Free(void*)
art::JNI::CallNonvirtualVoidMethodV(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, char*)
art::MemMap::AlignBy(unsigned int)
art::mirror::Class::PrettyClassAndClassLoader(art::ObjPtr<art::mirror::Class>)
art::FaultHandler::~FaultHandler()
artGetObjStaticFromCode
void art::mirror::DexCache::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::VerifyReferenceVisitor>(art::ObjPtr<art::mirror::Class>, art::gc::VerifyReferenceVisitor const&)
art::jit::JitCodeCache::SetFootprintLimit(unsigned int)
art::JNI::CallBooleanMethodA(_JNIEnv*, _jobject*, _jmethodID*, jvalue*)
art::ElfFileImpl<ElfTypes64>::ApplyOatPatchesTo(char const*, unsigned long long)
art::ArenaPool::~ArenaPool()
art::gc::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::gc::GcCause const&)
art::Primitive::ComponentSizeShift(art::Primitive::Type)
art::ElfFile::ElfFile(art::ElfFileImpl<ElfTypes64>*)
void art::ClassTable::VisitRoots<art::gc::Verification::BFSFindReachable>(art::gc::Verification::BFSFindReachable const&)
art::ReferenceTable::~ReferenceTable()
art::verifier::DoubleLoType::Dump() const
art::VdexFile::Header::Header(unsigned int, unsigned int, unsigned int, unsigned int)
art::IsReturnTypeConvertible(art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::Class>)
vtable for art::verifier::DoubleHiType
art::ObjectLock<art::mirror::ClassExt>::WaitIgnoringInterrupts()
vtable for art::detail::CmdlineParseArgument<art::XGcOption>
art::TimingLogger::FindTimingIndex(char const*, unsigned int) const
art::gc::Heap::VisitAllocationRecords(art::RootVisitor*) const
art::Dbg::GetMethodName(unsigned long long)
art::JNI::ReleasePrimitiveArrayCritical(_JNIEnv*, _jarray*, void*, int)
art::ti::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::ti::Agent const*)
art::Instruction::VRegH() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)::{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}, std::__1::allocator<{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}>, void (std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&)#1}> >*) const
art::gc::space::DlMallocSpace::CreateMspace(void*, unsigned int, unsigned int)
art::gc::Verification::CollectRootVisitor::VisitRoot(art::mirror::Object*, art::RootInfo const&)
__umoddi3
art::ProfileCompilationInfo::AddMethodHotness(art::MethodReference const&, art::ProfileCompilationInfo::MethodHotness const&)
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<art::DexFile const*, std::__1::vector<unsigned short, art::ScopedArenaAllocatorAdapter<unsigned short> > >, std::__1::__tree_node<std::__1::__value_type<art::DexFile const*, std::__1::vector<unsigned short, art::ScopedArenaAllocatorAdapter<unsigned short> > >, void*>*, int>, bool> std::__1::__tree<std::__1::__value_type<art::DexFile const*, std::__1::vector<unsigned short, art::ScopedArenaAllocatorAdapter<unsigned short> > >, std::__1::__map_value_compare<art::DexFile const*, std::__1::__value_type<art::DexFile const*, std::__1::vector<unsigned short, art::ScopedArenaAllocatorAdapter<unsigned short> > >, std::__1::less<art::DexFile const*>, true>, art::ScopedArenaAllocatorAdapter<std::__1::__value_type<art::DexFile const*, std::__1::vector<unsigned short, art::ScopedArenaAllocatorAdapter<unsigned short> > > > >::__emplace_unique_key_args<art::DexFile const*, art::DexFile const*&, std::__1::vector<unsigned short, art::ScopedArenaAllocatorAdapter<unsigned short> > >(art::DexFile const* const&, art::DexFile const*&, std::__1::vector<unsigned short, art::ScopedArenaAllocatorAdapter<unsigned short> >&&)
std::__1::function<void (art::Memory<1u>&)>::swap(std::__1::function<void (art::Memory<1u>&)>&)
art::Transaction::IsAborted()
art::JNI::CallNonvirtualShortMethodA(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, jvalue*)
non-virtual thunk to art::gc::space::BumpPointerSpace::Free(art::Thread*, art::mirror::Object*)
art::mirror::Class::FindDeclaredStaticField(art::ObjPtr<art::mirror::DexCache>, unsigned int)
art::gc::space::MemoryToolMallocSpace<art::gc::space::RosAllocSpace, 8u, false, true>::Alloc(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
non-virtual thunk to std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()
art::ElfFileImpl<ElfTypes32>::Strip(unix_file::FdFile*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::Thread::InitCpu()
art::CheckJNI::GetFieldID(_JNIEnv*, _jclass*, char const*, char const*)
art::VariantMapKey<art::Memory<1024u> >::ValueClone(void*) const
MterpGet64Static
art::CHACheckpoint::~CHACheckpoint()
art::BuildGenericJniFrameVisitor::~BuildGenericJniFrameVisitor()
art::ClassHierarchyAnalysis::UpdateAfterLoadingOf(art::Handle<art::mirror::Class>)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, unsigned int& ()>::operator()()
art::CompilerFilter::IsAsGoodAs(art::CompilerFilter::Filter, art::CompilerFilter::Filter)
art::LinkVirtualHashTable::FindAndRemove(art::MethodNameAndSignatureComparator*)
art::detail::CmdlineParseArgument<art::MillisecondsToNanoseconds>::ParseArgumentSingle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
bool art::interpreter::DoCall<false, true>(art::ArtMethod*, art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)
art::verifier::CharType::Dump() const
art::gc::Heap::DumpSpaces(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::gc::space::FreeListSpace::GetBeginEndAtomic() const
art::Histogram<unsigned long long>::CreateHistogram(art::Histogram<unsigned long long>::CumulativeData*) const
vtable for art::gc::space::DiscontinuousSpace
vtable for art::verifier::PreciseReferenceType
art::gc::accounting::MemoryRangeBitmap<1024u>::Test(unsigned int) const
art::CheckJNI::GetPrimitiveArrayRegion(char const*, art::Primitive::Type, _JNIEnv*, _jarray*, int, int, void*)
void std::__1::vector<art::DexFileAndClassPair, std::__1::allocator<art::DexFileAndClassPair> >::__emplace_back_slow_path<art::DexFile const*&, art::TypeIndexInfo*, bool>(art::DexFile const*&, art::TypeIndexInfo*&&, bool&&)
art::ClassLinker::GetResolvedClasses(bool)
art::verifier::RegTypeCache::RegTypeCache(bool, art::ScopedArenaAllocator&)
art::register_org_apache_harmony_dalvik_ddmc_DdmServer(_JNIEnv*)
art::Runtime::RecordWriteFieldChar(art::mirror::Object*, art::MemberOffset, unsigned short, bool) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>::__clone() const
art::verifier::MethodVerifier::DescribeVRegs(unsigned int)
art::verifier::RegTypeCache::MatchDescriptor(unsigned int, art::StringPiece const&, bool)
art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> >::BaseIterator<art::ClassTable::TableSlot, art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> > > art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> >::Find<std::__1::pair<char const*, unsigned int> >(std::__1::pair<char const*, unsigned int> const&)
vtable for art::DebugInstrumentationListener
art::JValue art::interpreter::ExecuteSwitchImpl<false, true>(art::Thread*, art::DexFile::CodeItem const*, art::ShadowFrame&, art::JValue, bool)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::XGcOption& ()>::operator()()
art::VariantMapKey<art::gc::space::LargeObjectSpaceType>::Clone() const
art::interpreter::EnterInterpreterFromInvoke(art::Thread*, art::ArtMethod*, art::ObjPtr<art::mirror::Object>, unsigned int*, art::JValue*, bool)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<double>::IntoKey(art::RuntimeArgumentMapKey<double> const&)::{lambda(double&)#1}, std::__1::allocator<{lambda(double&)#1}>, void (double&)>::~__func()
art::QuickExceptionHandler::PrepareForLongJumpToInvokeStubOrInterpreterBridge()
void art::mirror::Class::VisitNativeRoots<(art::ReadBarrierOption)1, art::gc::collector::ConcurrentCopying::VerifyGrayImmuneObjectsVisitor const>(art::gc::collector::ConcurrentCopying::VerifyGrayImmuneObjectsVisitor const&, art::PointerSize)
void art::JNI::SetPrimitiveArrayRegion<_jbooleanArray*, unsigned char, art::mirror::PrimitiveArray<unsigned char> >(_JNIEnv*, _jbooleanArray*, int, int, unsigned char const*)
art::Trace::RegisterMethod(art::ArtMethod*)
art::VdexFile::Open(int, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::mirror::MethodHandleImpl::SetClass(art::mirror::Class*)
art::gc::accounting::HeapBitmap::ReplaceBitmap(art::gc::accounting::SpaceBitmap<8u>*, art::gc::accounting::SpaceBitmap<8u>*)
vtable for art::gc::collector::ConcurrentCopying::ThreadFlipVisitor
art::ClassLoaderContext::CheckDexFilesOpened(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
art::dex::tracking::DexFileTrackingRegistrar::SetCodeItemRegistration(char const*, bool)
art::gc::collector::StickyMarkSweep::StickyMarkSweep(art::gc::Heap*, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
vtable for art::FixupArtMethodArrayVisitor
art::ThreadList::SuspendSelfForDebugger()
art::gc::VerifyReferenceVisitor::VisitRoot(art::mirror::Object*, art::RootInfo const&)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::BackgroundGcOption&)#1}, std::__1::allocator<{lambda(art::BackgroundGcOption&)#1}>, void (art::BackgroundGcOption&)>
art::JNIEnvExt::LocalRefCookieOffset(unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >& ()>::operator()()
art::gc::Heap::TraceHeapSize(unsigned int)
non-virtual thunk to art::gc::collector::StickyMarkSweep::~StickyMarkSweep()
art::verifier::MethodVerifier::FindAccessedFieldAtDexPc(unsigned int)
art::Dbg::FindLoadedClassBySignature(char const*, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >*)
DlmallocObjectsAllocatedCallback
art::gc::collector::MarkSweep::CheckpointMarkThreadRoots::VisitRoots(art::mirror::Object***, unsigned int, art::RootInfo const&)
art::detail::CmdlineParserArgumentInfo<art::Unit>::~CmdlineParserArgumentInfo()
art::ClassLinker::FindDexCacheDataLocked(art::DexFile const&)
art::RuntimeArgumentMapKey<art::XGcOption>::~RuntimeArgumentMapKey()
std::__1::__hash_table<std::__1::__hash_value_type<art::ArtMethod*, unsigned int>, std::__1::__unordered_map_hasher<art::ArtMethod*, std::__1::__hash_value_type<art::ArtMethod*, unsigned int>, std::__1::hash<art::ArtMethod*>, true>, std::__1::__unordered_map_equal<art::ArtMethod*, std::__1::__hash_value_type<art::ArtMethod*, unsigned int>, std::__1::equal_to<art::ArtMethod*>, true>, std::__1::allocator<std::__1::__hash_value_type<art::ArtMethod*, unsigned int> > >::rehash(unsigned int)
art::ClassDataItemIterator::ReadClassDataHeader()
art::Locks::reference_queue_soft_references_lock_
art::JNI::SetStaticCharField(_JNIEnv*, _jclass*, _jfieldID*, unsigned short)
art::ArtMethod* art::ClassLinker::GetResolvedMethod<(art::InvokeType)2, (art::ClassLinker::ResolveMode)1>(unsigned int, art::ArtMethod*)
art::ArtMethod::PrettyMethod(art::ArtMethod*, bool)
art::ElfFileImpl<ElfTypes32>::ElfFileImpl(unix_file::FdFile*, bool, bool, unsigned char*)
art::verifier::VerifierDeps::MaybeRecordMethodResolution(art::DexFile const&, unsigned int, art::ArtMethod*)
art::verifier::PreciseConstLoType::IsPreciseConstantLo() const
art::CheckJNI::GetField(char const*, _JNIEnv*, _jobject*, _jfieldID*, bool, art::Primitive::Type)
art::mirror::PrimitiveArray<long long>::Set(int, long long)
art::gc::space::DiscontinuousSpace::IsDiscontinuousSpace() const
art::Thread::SetState(art::ThreadState)
art::OatDexFile::OatDexFile(art::OatFile const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned char const*, unsigned char const*, art::LengthPrefixedArray<art::MethodBssMappingEntry> const*, unsigned int const*, unsigned char*, art::DexLayoutSections const*)
art::gc::Heap::CheckGcStressMode(art::Thread*, art::ObjPtr<art::mirror::Object>*)
art::interpreter::UnstartedRuntime::UnstartedJNIStringIntern(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::XGcOption> const&)::{lambda(art::XGcOption&)#1}, std::__1::allocator<{lambda(art::XGcOption&)#1}>, void (art::XGcOption&)>::destroy()
art::ThrowNoSuchFieldException(art::ObjPtr<art::mirror::Class>, art::StringPiece const&)
art::InternTable::Insert(art::ObjPtr<art::mirror::String>, bool, bool)
art::InitPlatformSignalHandlersCommon(void (*)(int, siginfo*, void*), sigaction*, bool)
art::Trace::ExceptionCaught(art::Thread*, art::Handle<art::mirror::Throwable>)
art::Arm64InstructionSetFeatures::FromCppDefines()
art::gc::Heap::ClearGrowthLimit()
art::verifier::UnresolvedUninitializedThisRefType::CheckInvariants() const
art::Instruction::DumpHex(unsigned int) const
unsigned int art::gc::accounting::CardTable::Scan<false, art::gc::collector::ConcurrentCopying::GrayImmuneObjectVisitor<true> >(art::gc::accounting::SpaceBitmap<8u>*, unsigned char*, unsigned char*, art::gc::collector::ConcurrentCopying::GrayImmuneObjectVisitor<true> const&, unsigned char)
art::ThreadPool::SetMaxActiveWorkers(unsigned int)
art::VariantMapKey<bool (*)()>::~VariantMapKey()
Writer::~Writer()
bool art::interpreter::DoFieldPut<(art::FindFieldType)1, (art::Primitive::Type)0, false, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >& ()>::__clone(std::__1::__function::__base<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&>*) const
art::gc::space::ImageSpace::ReadImageHeader(char const*, art::InstructionSet, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::DexFile::OpenCommon(unsigned char const*, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, art::OatDexFile const*, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, art::DexFile::VerifyResult*)
art::interpreter::UnstartedRuntime::UnstartedMathCos(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::ClassLinker::InitFromBootImage(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::gc::collector::MarkCompact::ShouldSweepSpace(art::gc::space::ContinuousSpace*) const
art::ProfileCompilationInfo::SafeBuffer::FillFromFd(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::Trace::Resume()
bool art::PerformConversions<art::ShadowFrameGetter<false>, art::ShadowFrameSetter>(art::Thread*, art::Handle<art::mirror::MethodType>, art::Handle<art::mirror::MethodType>, art::ShadowFrameGetter<false>*, art::ShadowFrameSetter*, int)
art::gc::Heap::MarkAllocStackAsLive(art::gc::accounting::AtomicStack<art::mirror::Object>*)
art::detail::CmdlineParseArgument<art::ProfileSaverOptions>::MaybeMatches(art::TokenRange const&)
art::CheckJNI::NewPrimitiveArray(char const*, _JNIEnv*, int, art::Primitive::Type)
art::optimizer::ArtDecompileDEX(art::DexFile::CodeItem const&, art::ArrayRef<unsigned char const> const&, bool)
art::hprof::Hprof::DumpToFile(unsigned int, unsigned int)
art::detail::CmdlineParserArgumentInfo<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::~CmdlineParserArgumentInfo()
MterpSetByteStatic
art::CheckJNI::GetByteField(_JNIEnv*, _jobject*, _jfieldID*)
art::WellKnownClasses::java_lang_ThreadGroup_name
art::gc::Heap::DumpGcCountRateHistogram(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::Monitor::TryLock(art::Thread*)
art::verifier::Cat1Type::Cat1Type(art::mirror::Class*, art::StringPiece const&, unsigned short)
art::WellKnownClasses::java_lang_reflect_Proxy
std::__1::__shared_ptr_pointer<art::RuntimeArgumentMap*, std::__1::default_delete<art::RuntimeArgumentMap>, std::__1::allocator<art::RuntimeArgumentMap> >::__on_zero_shared()
art::CountModifiedUtf8Chars(char const*)
std::__1::__split_buffer<art::ArtField**, std::__1::allocator<art::ArtField**>&>::push_back(art::ArtField**&&)
art::Runtime::AllowNewSystemWeaks()
art::Dbg::GetSourceDebugExtension(unsigned long long, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
void art::Thread::InitPeer<false>(art::ScopedObjectAccessAlreadyRunnable&, art::ObjPtr<art::mirror::Object>, unsigned char, _jobject*, _jobject*, int)
art::ReferenceTable::ReferenceTable(char const*, unsigned int, unsigned int)
vtable for art::gc::accounting::ModUnionTableCardCache
art::gc::ReferenceQueue::GetLength() const
art::verifier::CharType const* art::verifier::RegTypeCache::CreatePrimitiveTypeInstance<art::verifier::CharType>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::verifier::ConstantType::IsConstantByte() const
__register_frame
art::detail::CmdlineParseArgument<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::ParseArgument(art::TokenRange const&, unsigned int*)
non-virtual thunk to art::gc::collector::PartialMarkSweep::~PartialMarkSweep()
art::gc::Heap::RemoveAllocationListener()
artAllocStringFromStringFromCodeRosAllocInstrumented
art::verifier::PreciseConstHiType::GetAssignmentTypeImpl() const
art::ArtMethod::IsAnnotatedWithCriticalNative()
art::ThreadList::ResumeAll()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoIgnore()::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>::operator()()
art::mirror::Class::PrettyDescriptor(art::ObjPtr<art::mirror::Class>)
art::DexFileVerifier::CheckIntraSectionIterate(unsigned int, unsigned int, art::DexFile::MapItemType)
art::gc::Heap::PrePauseRosAllocVerification(art::gc::collector::GarbageCollector*)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::replace(unsigned int, unsigned int, char const*, unsigned int)
art::gc::accounting::SpaceBitmap<8u>::Test(art::mirror::Object const*) const
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::InternTable::InsertWeakFromTransaction(art::ObjPtr<art::mirror::String>)
art::UnboxPrimitiveForResult(art::ObjPtr<art::mirror::Object>, art::ObjPtr<art::mirror::Class>, art::JValue*)
art::verifier::RegisterLineArenaDelete::operator()(art::verifier::RegisterLine*) const
art::verifier::PreciseReferenceType::PreciseReferenceType(art::mirror::Class*, art::StringPiece const&, unsigned short)
inflateInit2_
non-virtual thunk to art::gc::ZygoteCompactingCollector::~ZygoteCompactingCollector()
art::mirror::Class::GetInnerClassFlags(art::Handle<art::mirror::Class>, int)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions> art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::CreateTypedBuilder<art::JDWP::JdwpOptions>()
art::gc::Heap::RosAllocVerification(art::TimingLogger*, char const*)
art::jit::JitCodeCache::SweepRootTables(art::IsMarkedVisitor*)
vtable for art::RuntimeArgumentMapKey<art::InstructionSet>
art::OatFileBase::ComputeFields(unsigned char*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::CompleteArgument()
art::DexFile::CreateTypeList(art::StringPiece const&, art::dex::TypeIndex*, std::__1::vector<art::dex::TypeIndex, std::__1::allocator<art::dex::TypeIndex> >*) const
art::verifier::ConstantType::IsConstantChar() const
art::DexFileVerifier::CheckIntraDataSection(unsigned int, unsigned int, art::DexFile::MapItemType)
art::verifier::RegType::IsDoubleHi() const
art::OatHeader::kOatMagic
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)2, false, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::jit::JitCodeCache::DoCollection(art::Thread*, bool)
unix_file::FdFile::Fd() const
art::instrumentation::Instrumentation::InvokeVirtualOrInterfaceImpl(art::Thread*, art::ObjPtr<art::mirror::Object>, art::ArtMethod*, unsigned int, art::ArtMethod*) const
art::QuickExceptionHandler::SetCatchEnvironmentForOptimizedHandler(art::StackVisitor*)
art::Trace::FieldWritten(art::Thread*, art::Handle<art::mirror::Object>, art::ArtMethod*, unsigned int, art::ArtField*, art::JValue const&)
art::VariantMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::ValueDelete(void*) const
art::gc::space::ImageSpace::FindImageFilename(char const*, art::InstructionSet, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, bool*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, bool*, bool*, bool*)
art::mirror::Class::SetClassSize(unsigned int)
void std::__1::vector<iovec, std::__1::allocator<iovec> >::__push_back_slow_path<iovec const&>(iovec const&)
bool art::interpreter::DoFieldGet<(art::FindFieldType)6, (art::Primitive::Type)5, false>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::arm64::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::arm64::SRegister const&)
art::Thread::InternalStackTraceToStackTraceElementArray(art::ScopedObjectAccessAlreadyRunnable const&, _jobject*, _jobjectArray*, int*)
art::CheckJNI::SetObjectArrayElement(_JNIEnv*, _jobjectArray*, int, _jobject*)
art::mirror::PrimitiveArray<signed char>::GetWithoutChecks(int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1u>& ()>::__clone(std::__1::__function::__base<art::Memory<1u>&>*) const
art::DlOpenOatFile::FindDynamicSymbolAddress(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
art::VariantMapKey<art::BackgroundGcOption>::ValueDelete(void*) const
artAllocObjectFromCodeInitializedRegion
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}> >*) const
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::ImageHeader::ImageSections const&)
art::CheckJNI::CallIntMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)
art::ClassLinker::IsDexFileRegistered(art::Thread*, art::DexFile const&)
art::CheckJNI::CallBooleanMethodA(_JNIEnv*, _jobject*, _jmethodID*, jvalue*)
art::ClassLinker::FindDexCache(art::Thread*, art::DexFile const&)
art::ProfileSaver::ProfileSaver(art::ProfileSaverOptions const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::jit::JitCodeCache*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)
art::gc::accounting::CardTable::AddrIsInCardTable(void const*) const
art::RuntimeArgumentMap::JITOsrThreshold
android::base::GetExecutablePath()
art::DexFile::ReadUnsignedLong(unsigned char const*, int, bool)
void art::mirror::DexCache::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsFieldVisitor>(art::ObjPtr<art::mirror::Class>, art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsFieldVisitor const&)
art::register_java_lang_Void(_JNIEnv*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(unsigned int&)#1}, std::__1::allocator<{lambda(unsigned int&)#1}>, void (unsigned int&)>::destroy()
art::verifier::MethodVerifier::ComputeWidthsAndCountOps()
art::verifier::RegisterLine::CheckUnaryOpFromWide(art::verifier::MethodVerifier*, art::Instruction const*, art::verifier::RegType const&, art::verifier::RegType const&, art::verifier::RegType const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::IntoKey(art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions> const&)::{lambda(art::JDWP::JdwpOptions&)#1}, std::__1::allocator<{lambda(art::JDWP::JdwpOptions&)#1}>, void (art::JDWP::JdwpOptions&)>::__clone() const
art::verifier::RegisterLine::CopyRegister2(art::verifier::MethodVerifier*, unsigned int, unsigned int)
art::Histogram<unsigned long long>::PrintConfidenceIntervals(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, double, art::Histogram<unsigned long long>::CumulativeData const&) const
art::gc::collector::SemiSpace::MarkObject(art::mirror::Object*)
art::OatFileAssistant::GenerateOatFileNoChecks(art::OatFileAssistant::OatFileInfo&, art::CompilerFilter::Filter, art::ClassLoaderContext const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::VariantMapKey<art::verifier::VerifyMode>::~VariantMapKey()
art::ElfFileImpl<ElfTypes64>::GetSymbol(unsigned int, unsigned int) const
art::jit::JitCodeCache::FreeCode(unsigned char*)
art::verifier::MethodVerifier::FailureData::Merge(art::verifier::MethodVerifier::FailureData const&)
art::mirror::DexCache::InitializeDexCache(art::Thread*, art::ObjPtr<art::mirror::DexCache>, art::ObjPtr<art::mirror::String>, art::DexFile const*, art::LinearAlloc*, art::PointerSize)
art::detail::CmdlineParseArgument<art::gc::space::LargeObjectSpaceType>::~CmdlineParseArgument()
std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(void const*)
art::verifier::RegTypeCache::~RegTypeCache()
art::detail::CmdlineParseArgument<art::BackgroundGcOption>::ParseArgument(art::TokenRange const&, unsigned int*)
art::X86InstructionSetFeatures::AddFeaturesFromSplitString(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
art::ProfileCompilationInfo::ReadInlineCache(art::ProfileCompilationInfo::SafeBuffer&, unsigned char, art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::__1::less<unsigned short>, art::ArenaAllocatorAdapter<std::__1::pair<unsigned short const, art::ProfileCompilationInfo::DexPcData> > >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::BackgroundGcOption&)#1}, std::__1::allocator<{lambda(art::BackgroundGcOption&)#1}>, void (art::BackgroundGcOption&)>::~__func()
void art::gc::accounting::SpaceBitmap<8u>::VisitMarkedRange<art::gc::ScanVisitor const&>(unsigned int, unsigned int, art::gc::ScanVisitor const&) const
void art::gc::accounting::SpaceBitmap<4096u>::VisitMarkedRange<art::hprof::Hprof::ProcessBody()::{lambda(art::mirror::Object*)#1}&>(unsigned int, unsigned int, art::hprof::Hprof::ProcessBody()::{lambda(art::mirror::Object*)#1}&) const
art::GetAndroidDir(char const*, char const*)
art::Thread::ThrowNewExceptionV(char const*, char const*, char*)
art::Thread::InitTid()
unix_file::FdFile::FdFile()
art::CheckJNI::NewDoubleArray(_JNIEnv*, int)
art::gc::space::MemoryToolLargeObjectMapSpace::~MemoryToolLargeObjectMapSpace()
art::CodeInfo::GetStackMask(unsigned int, art::CodeInfoEncoding const&) const
art::Locks::jni_libraries_lock_
art::CheckJNI::CallLongMethodV(_JNIEnv*, _jobject*, _jmethodID*, char*)
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, void*>*)
art::detail::CmdlineParseArgument<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::SaveArgument(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::GetTid()
non-virtual thunk to art::gc::space::DlMallocSpace::Alloc(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::Trace::ReadClocks(art::Thread*, unsigned int*, unsigned int*)
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<bool>(art::RuntimeArgumentMapKey<bool> const&)
art::GetSignalName(int)
bool art::mirror::Executable::CreateFromArtMethod<(art::PointerSize)4, false>(art::ArtMethod*)
std::__1::__split_buffer<std::__1::pair<art::mirror::Object*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >*, std::__1::allocator<std::__1::pair<art::mirror::Object*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >*>&>::push_back(std::__1::pair<art::mirror::Object*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >*&&)
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::gc::collector::MarkCompact::MarkObjectVisitor const>(art::gc::collector::MarkCompact::MarkObjectVisitor const&, art::PointerSize)
art::JNI::CallLongMethodV(_JNIEnv*, _jobject*, _jmethodID*, char*)
MterpInvokeVirtualRange
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::IntoKey(art::RuntimeArgumentMapKey<unsigned int> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, unsigned int& ()>::__clone() const
std::__1::__split_buffer<art::instrumentation::InstrumentationStackFrame*, std::__1::allocator<art::instrumentation::InstrumentationStackFrame*>&>::push_back(art::instrumentation::InstrumentationStackFrame*&&)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::RootType const&)
bool art::interpreter::DoFilledNewArray<false, false, true>(art::Instruction const*, art::ShadowFrame const&, art::Thread*, art::JValue*)
art::CheckJNI::PopLocalFrame(_JNIEnv*, _jobject*)
std::__1::__shared_ptr_emplace<art::MillisecondsToNanoseconds, std::__1::allocator<art::MillisecondsToNanoseconds> >::~__shared_ptr_emplace()
art::verifier::UninitializedType::~UninitializedType()
artAGetObjectFromMterp
non-virtual thunk to art::gc::collector::MarkSweep::~MarkSweep()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::verifier::VerifyMode& ()>::operator()()
art::CheckJII::AttachCurrentThread(_JavaVM*, _JNIEnv**, void*)
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::gc::collector::MarkVisitor const>(art::gc::collector::MarkVisitor const&, art::PointerSize)
vtable for art::gc::space::ContinuousMemMapAllocSpace
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >& ()>::destroy_deallocate()
art::JNIEnvExt::JNIEnvExt(art::Thread*, art::JavaVMExt*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::NthCallerWithDexPcVisitor::VisitFrame()
void art::mirror::Object::VisitFieldsReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::collector::MarkVisitor>(unsigned int, art::gc::collector::MarkVisitor const&)
art::JNI::GetCharArrayRegion(_JNIEnv*, _jcharArray*, int, int, unsigned short*)
art::ClassTable::ClassDescriptorHashEquals::operator()(art::ClassTable::TableSlot const&) const
art::MonitorList::~MonitorList()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >& ()>::__clone() const
art::Mutex::Mutex(char const*, art::LockLevel, bool)
art::VdexFile::Open(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::SetQuickAllocEntryPoints_bump_pointer(art::QuickEntryPoints*, bool)
MterpSuspendCheck
std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::destroy(std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*)
art::JNI::CallStaticShortMethodA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
art::VariantMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::ValueDelete(void*) const
art::mirror::PrimitiveArray<long long>::SetArrayClass(art::ObjPtr<art::mirror::Class>)
guard variable for art::mirror::PrimitiveArray<signed char>::array_class_
art::Monitor::GetHashCode()
std::__1::__vector_base<art::DeoptimizationRequest, std::__1::allocator<art::DeoptimizationRequest> >::~__vector_base()
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ParseStringList<(char)58>& ()>
art::Transaction::VisitResolveStringLogs(art::RootVisitor*)
art::OatFileManager::OpenDexFilesFromOat(char const*, _jobject*, _jobjectArray*, art::OatFile const**, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)
art::GetDalvikCache(char const*)
art::HashSet<std::__1::pair<unsigned int, unsigned short>, art::DexFileVerifier::OffsetTypeMapEmptyFn, art::HashMapWrapper<art::DexFileVerifier::OffsetTypeMapHashCompareFn>, art::HashMapWrapper<art::DexFileVerifier::OffsetTypeMapHashCompareFn>, std::__1::allocator<std::__1::pair<unsigned int, unsigned short> > >::Resize(unsigned int)
art::gc::accounting::SpaceBitmap<8u>::HeapSize() const
art::gc::collector::MarkCompact::GetCollectorType() const
art::ProfileSaverOptions art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::GetOrDefault<art::ProfileSaverOptions>(art::RuntimeArgumentMapKey<art::ProfileSaverOptions> const&) const
art::gc::Heap::CollectGarbageInternal(art::gc::collector::GcType, art::gc::GcCause, bool)
art::gc::space::RosAllocSpace::CreateRosAlloc(void*, unsigned int, unsigned int, unsigned int, bool, bool)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)
art::Runtime::ThrowTransactionAbortError(art::Thread*)
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf64_Sym*>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf64_Sym*>, void*>*, int>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf64_Sym*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf64_Sym*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, Elf64_Sym*> > >::__emplace_unique_impl<std::__1::pair<char const*, Elf64_Sym*> >(std::__1::pair<char const*, Elf64_Sym*>&&)
art::MemoryRegion::StoreBits(unsigned int, unsigned int, unsigned int)
art::ReferenceMapVisitor<art::RootCallbackVisitor, true>::VisitShadowFrame(art::ShadowFrame*)
art::ClassLinker::FindClassInBaseDexClassLoader(art::ScopedObjectAccessAlreadyRunnable&, art::Thread*, char const*, unsigned int, art::Handle<art::mirror::ClassLoader>, art::ObjPtr<art::mirror::Class>*)
std::__1::__tree<art::ArtMethod*, std::__1::less<art::ArtMethod*>, std::__1::allocator<art::ArtMethod*> >::destroy(std::__1::__tree_node<art::ArtMethod*, void*>*)
art::ReaderWriterMutex::ExclusiveLock(art::Thread*)
art::ProfileCompilationInfo::GetNumberOfResolvedClasses() const
art::gc::space::LargeObjectSpaceType& art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination::GetOrCreateFromMap<art::gc::space::LargeObjectSpaceType>(art::RuntimeArgumentMapKey<art::gc::space::LargeObjectSpaceType> const&)
art::DexFileVerifier::CheckMap()
art::ElfFile::ElfFile(art::ElfFileImpl<ElfTypes32>*)
std::__1::__shared_ptr_emplace<art::gc::space::LargeObjectSpaceType, std::__1::allocator<art::gc::space::LargeObjectSpaceType> >::~__shared_ptr_emplace()
art::interpreter::ThrowNullPointerExceptionFromInterpreter()
art::JDWP::JdwpNetStateBase::WakePipe()
art::CmdlineType<art::ExperimentalFlags>::ParseAndAppend(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::ExperimentalFlags&)
bool art::PerformConversions<art::ShadowFrameGetter<true>, art::ShadowFrameSetter>(art::Thread*, art::Handle<art::mirror::MethodType>, art::Handle<art::mirror::MethodType>, art::ShadowFrameGetter<true>*, art::ShadowFrameSetter*, int)
void std::__1::vector<iovec, std::__1::allocator<iovec> >::__push_back_slow_path<iovec>(iovec&&)
art::jit::JitCodeCache::GarbageCollectCache(art::Thread*)
artAllocStringFromStringFromCodeRegionTLAB
art::CheckJNI::CallCharMethodV(_JNIEnv*, _jobject*, _jmethodID*, char*)
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor const>(art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor const&, art::PointerSize)
art::gc::allocator::RosAlloc::RevokeThreadLocalRuns(art::Thread*)
art::gc::collector::MarkCompact::FinishPhase()
art::LockedFile::Open(char const*, int, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::ElfFileImpl<ElfTypes32>::GetRelNum(Elf32_Shdr&) const
art::VariantMapKey<art::Memory<1024u> >::Clone() const
std::__1::function<bool& ()>::swap(std::__1::function<bool& ()>&)
art::InstructionSetFeatures::FromBitmap(art::InstructionSet, unsigned int)
art::WellKnownClasses::java_lang_ThreadGroup_mainThreadGroup
art::Runtime::~Runtime()
art::OatDexFile::OatDexFile(std::__1::unique_ptr<art::TypeLookupTable, std::__1::default_delete<art::TypeLookupTable> >&&)
non-virtual thunk to art::gc::collector::ConcurrentCopying::~ConcurrentCopying()
art::JNI::CallCharMethodV(_JNIEnv*, _jobject*, _jmethodID*, char*)
art::mirror::String::PrettyStringDescriptor()
art::mirror::PrimitiveArray<int>::VisitRoots(art::RootVisitor*)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1024u>& ()>
art::Transaction::ObjectLog::LogReferenceValue(art::MemberOffset, art::mirror::Object*, bool)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::XGcOption> const&)
art::CheckJNI::SetCharArrayRegion(_JNIEnv*, _jcharArray*, int, int, unsigned short const*)
art::gc::collector::SemiSpace::MarkReachableObjects()
art::annotations::GetAnnotationsForMethod(art::ArtMethod*)
art::FaultManager::RemoveHandler(art::FaultHandler*)
art::gc::allocator::RosAlloc::AssertAllThreadLocalRunsAreRevoked()
art::ThrowIncompatibleClassChangeErrorClassForInterfaceDispatch(art::ArtMethod*, art::ObjPtr<art::mirror::Object>, art::ArtMethod*)
art::Dbg::GetThreadGroupName(unsigned long long, art::JDWP::ExpandBuf*)
art::InternTable::LookupStrongLocked(art::ObjPtr<art::mirror::String>)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::XGcOption> const&)::{lambda(art::XGcOption&)#1}, std::__1::allocator<{lambda(art::XGcOption&)#1}>, void (art::XGcOption&)>::__clone() const
art::verifier::UndefinedType::GetAssignmentTypeImpl() const
art::ThrowIllegalArgumentException(char const*)
art::Dbg::SetStaticFieldValue(unsigned long long, unsigned long long, int)
art::ProfileCompilationInfo::~ProfileCompilationInfo()
std::__1::function<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >& ()>::swap(std::__1::function<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >& ()>&)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1024u> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1024u>& ()>
artSetByteInstanceFromCompiledCode
art::mirror::Class::FindStaticField(art::Thread*, art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::DexCache>, unsigned int)
art::detail::CmdlineParseArgument<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::ParseArgumentSingle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::mirror::Class::FindDeclaredStaticField(art::StringPiece const&, art::StringPiece const&)
art::gc::collector::MarkCompact::InitializePhase()
art::interpreter::ArtInterpreterToInterpreterBridge(art::Thread*, art::DexFile::CodeItem const*, art::ShadowFrame*, art::JValue*)
bool art::interpreter::DoFilledNewArray<true, true, false>(art::Instruction const*, art::ShadowFrame const&, art::Thread*, art::JValue*)
artInitializeTypeAndVerifyAccessFromCode
art::ClassListCreator::operator()(art::ObjPtr<art::mirror::Class>)
art::DexFile::IsVersionValid(unsigned char const*)
art::gc::space::LargeObjectMapSpace::Contains(art::mirror::Object const*) const
vtable for std::__1::basic_ostream<char, std::__1::char_traits<char> >
art::gc::space::BumpPointerSpace::CreateFromMemMap(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::MemMap*)
art::mirror::Constructor* art::mirror::Constructor::CreateFromArtMethod<(art::PointerSize)8, false>(art::Thread*, art::ArtMethod*)
art::JNI::GetObjectField(_JNIEnv*, _jobject*, _jfieldID*)
art::CheckJNI::NewShortArray(_JNIEnv*, int)
void std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > >::__push_back_slow_path<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > >(std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >&&)
art::gc::collector::MarkSweep::VerifySystemWeaks()
art::jit::JitCodeCache::JitCodeCache(art::MemMap*, art::MemMap*, unsigned int, unsigned int, unsigned int, bool)
ZipEntry::GetModificationTime() const
art::mirror::CallSite::ResetClass()
art::detail::CmdlineParseArgument<art::Memory<1024u> >::ParseArgument(art::TokenRange const&, unsigned int*)
art::BitVector::Intersect(art::BitVector const*)
art::CheckJNI::DeleteRef(char const*, _JNIEnv*, _jobject*, art::IndirectRefKind)
art::CheckJNI::ReleaseLongArrayElements(_JNIEnv*, _jlongArray*, long long*, int)
art::Dbg::DdmSetThreadNotification(bool)
art::DexFileVerifier::CheckIntraAnnotationsDirectoryItem()
vtable for art::detail::CmdlineParseArgument<art::ProfileSaverOptions>
art::ThreadList::~ThreadList()
vtable for art::Arena
art::JDWP::JdwpSocketState::Accept()
art::WellKnownClasses::java_lang_reflect_Parameter_init
artGetBooleanInstanceFromCompiledCode
art::mirror::Object::FindFieldByOffset(art::MemberOffset)
art::gc::space::BumpPointerSpace::Capacity() const
artAllocStringFromBytesFromCodeBumpPointerInstrumented
art::ClassSet::AddClass(art::ObjPtr<art::mirror::Class>)
art::CatchBlockStackVisitor::HandleTryItems(art::ArtMethod*)
art::gc::accounting::ModUnionTable::~ModUnionTable()
art::gc::space::RegionSpace::FreeLarge(art::mirror::Object*, unsigned int)
art::jit::JitCodeCache::CodeCacheSizeLocked()
art::CodeInfo::GetInvokeInfo(art::CodeInfoEncoding const&, unsigned int) const
art::CheckJNI::ReleaseStringUTFChars(_JNIEnv*, _jstring*, char const*)
art::mirror::Object* art::gc::Heap::AllocLargeObject<false, art::mirror::SetLengthVisitor>(art::Thread*, art::ObjPtr<art::mirror::Class>*, unsigned int, art::mirror::SetLengthVisitor const&)
art::BitVector::GetHighestBitSet() const
art::ConvertJValueCommon(art::Handle<art::mirror::MethodType>, art::Handle<art::mirror::MethodType>, art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::Class>, art::JValue*)
art::verifier::RegTypeCache::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::Runtime::FixupConflictTables()
art::mirror::Class::IsThrowableClass()
art::ThreadList::ResumeAllForDebugger()
art::jit::JitCodeCache::ReserveData(art::Thread*, unsigned int, unsigned int, unsigned int, art::ArtMethod*, unsigned char**, unsigned char**, unsigned char**)
art::jit::Jit::DumpForSigQuit(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::ClassLinker::VerifyClassUsingOatFile(art::DexFile const&, art::ObjPtr<art::mirror::Class>, art::mirror::Class::Status&)
art::DexFileVerifier::CheckEncodedArray()
art::CheckJNI::CallStaticFloatMethodV(_JNIEnv*, _jclass*, _jmethodID*, char*)
art::FindInClassPath(char const*, unsigned int, std::__1::vector<art::DexFile const*, std::__1::allocator<art::DexFile const*> > const&)
art::WellKnownClasses::java_lang_Byte_valueOf
art::RuntimeArgumentMap::HookExit
art::CatchLocationFinder::~CatchLocationFinder()
art::gc::space::ImageSpaceLoader::RelocateInPlace(art::ImageHeader&, unsigned char*, art::gc::accounting::SpaceBitmap<8u>*, art::OatFile const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::mirror::PrimitiveArray<int>::AllocateAndFill(art::Thread*, int const*, unsigned int)
std::__1::__shared_ptr_emplace<art::Memory<1024u>, std::__1::allocator<art::Memory<1024u> > >::__on_zero_shared()
art::Thread::HandleScopeContains(_jobject*) const
art::ProfileSaver::AddTrackedLocations(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)
art::BuildQuickArgumentVisitor::~BuildQuickArgumentVisitor()
vtable for art::RememberForGcArgumentVisitor
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<void (*)()>(art::RuntimeArgumentMapKey<void (*)()> const&)
z_errmsg
art::X86InstructionSetFeatures::FromCpuInfo(bool)
std::__1::__tree<std::__1::__value_type<unsigned char, unsigned char>, std::__1::__map_value_compare<unsigned char, std::__1::__value_type<unsigned char, unsigned char>, std::__1::less<unsigned char>, true>, std::__1::allocator<std::__1::__value_type<unsigned char, unsigned char> > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned char, unsigned char>, void*>*)
art::hprof::EndianOutputBuffered::HandleU1List(unsigned char const*, unsigned int)
art::instrumentation::Instrumentation::RemoveListener(art::instrumentation::InstrumentationListener*, unsigned int)
art::Dbg::PostLocationEvent(art::ArtMethod*, int, art::mirror::Object*, int, art::JValue const*)
bool art::DexFileVerifier::CheckIntraClassDataItemMethods<false>(art::ClassDataItemIterator*, std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int> >*, bool*, art::dex::TypeIndex*, art::DexFile::ClassDef const**)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> > art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::CreateTypedBuilder<art::ParseStringList<(char)58> >()
art::gc::space::RegionSpace::Create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::MemMap*)
art::VariantMapKey<int (*)(__sFILE*, char const*, char*)>::Clone() const
art::JDWP::JdwpState::UnregisterLocationEventsOnClass(art::ObjPtr<art::mirror::Class>)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::IntoKey(art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::MillisecondsToNanoseconds& ()>::operator()()
art::Transaction::RecordWriteFieldChar(art::mirror::Object*, art::MemberOffset, unsigned short, bool)
std::__1::function<double& ()>::swap(std::__1::function<double& ()>&)
art::CheckJNI::CallCharMethodA(_JNIEnv*, _jobject*, _jmethodID*, jvalue*)
art::verifier::VerifierDeps::GetMethodDeclaringClassStringId(art::DexFile const&, unsigned int, art::ArtMethod*)
vtable for art::gc::accounting::ModUnionTableReferenceCache
art::gc::collector::SemiSpace::MarkHeapReference(art::mirror::HeapReference<art::mirror::Object>*, bool)
art::gc::Verification::BFSFindReachable::Visit(art::mirror::Object*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
art::ClassLoaderContext::~ClassLoaderContext()
art::QuasiAtomic::Shutdown()
art::ClassLinker::GetAllocatorForClassLoader(art::ObjPtr<art::mirror::ClassLoader>)
artResolveStringFromCode
art::Dbg::OutputMethodReturnValue(unsigned long long, art::JValue const*, art::JDWP::ExpandBuf*)
art::InternTable::Table::WriteToMemory(unsigned char*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> > art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::CreateTypedBuilder<art::Memory<1024u> >()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >& ()>::__clone() const
vtable for art::hprof::Hprof
void std::__1::vector<art::ProfilingInfo*, std::__1::allocator<art::ProfilingInfo*> >::__push_back_slow_path<art::ProfilingInfo* const&>(art::ProfilingInfo* const&)
art::Thread::Interrupted()
art::Dbg::GetThreadFrameCount(unsigned long long, unsigned int*)
art::MemMap::MapDummy(char const*, unsigned char*, unsigned int)
artAllocStringFromBytesFromCodeRegionTLABInstrumented
art::mirror::MethodHandlesLookup::static_class_
art::CatchBlockStackVisitor::~CatchBlockStackVisitor()
art::DexFile::PrettyMethod(unsigned int, bool) const
art::ClassLinker::FixupTemporaryDeclaringClass(art::ObjPtr<art::mirror::Class>, art::ObjPtr<art::mirror::Class>)
art::JavaStackTraceHandler::~JavaStackTraceHandler()
art::jit::MarkCodeClosure::~MarkCodeClosure()
art::mirror::PrimitiveArray<int>::ResetArrayClass()
art::ElfOatFile::OpenElfFile(unix_file::FdFile*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned char*, unsigned char*, bool, bool, bool, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::Dbg::DdmHandlePacket(art::JDWP::Request*, unsigned char**, int*)
art::Dbg::GetInstanceCounts(std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > const&, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >*)
art::NullPointerHandler::NullPointerHandler(art::FaultManager*)
art::gc::TaskProcessor::~TaskProcessor()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::gc::space::LargeObjectSpaceType& ()>::~__func()
artSetShortStaticFromCompiledCode
art::gc::Heap::SetAllocationRecords(art::gc::AllocRecordObjectMap*)
art::gc::TaskProcessor::RunAllTasks(art::Thread*)
art::interpreter::UnstartedRuntime::UnstartedUnsafeCompareAndSwapObject(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
vtable for art::gc::collector::MarkCompact::UpdateRootVisitor
art::gc::collector::ConcurrentCopying::DisableMarkingCallback::Run(art::Thread*)
art::mirror::PrimitiveArray<double>::Alloc(art::Thread*, unsigned int)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::IntoKey(art::RuntimeArgumentMapKey<art::ParseStringList<(char)58> > const&)::{lambda(art::ParseStringList<(char)58>&)#1}, std::__1::allocator<{lambda(art::ParseStringList<(char)58>&)#1}>, void (art::ParseStringList<(char)58>&)>
art::Runtime::SetSentinel(art::mirror::Object*)
void art::mirror::DexCache::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::gc::collector::ConcurrentCopying::VerifyGrayImmuneObjectsVisitor>(art::ObjPtr<art::mirror::Class>, art::gc::collector::ConcurrentCopying::VerifyGrayImmuneObjectsVisitor const&)
art::OatFile::IsPic() const
art::Transaction::Abort(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
ErrorCodeString(int)
art::gc::space::RegionSpace::RecordAlloc(art::mirror::Object*)
std::__1::function<art::XGcOption& ()>::swap(std::__1::function<art::XGcOption& ()>&)
art::Trace::Shutdown()
art::Runtime::StartDaemonThreads()
art::ElfFileImpl<ElfTypes32>::GetHashChain(unsigned int, bool*) const
art::JNI::CallStaticByteMethodA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
art::Runtime::IsVerificationEnabled() const
art::mirror::PrimitiveArray<short>::ResetArrayClass()
MterpCheckBefore
unix_file::FdFile::FdFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, unsigned short, bool)
art::ElfFileImpl<ElfTypes32>::GetRel(Elf32_Shdr&, unsigned int) const
void art::mirror::Class::GetAccessFlagsDCheck<(art::VerifyObjectFlags)0>()
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::seekpos(std::__1::fpos<mbstate_t>, unsigned int)
void std::__1::vector<art::ObjPtr<art::mirror::Class>, std::__1::allocator<art::ObjPtr<art::mirror::Class> > >::__push_back_slow_path<art::ObjPtr<art::mirror::Class> const&>(art::ObjPtr<art::mirror::Class> const&)
art::verifier::UndefinedType::~UndefinedType()
art::StringTable::IndexOf(char const*) const
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::SharedLibrary*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::SharedLibrary*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::SharedLibrary*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::SharedLibrary*>, void*>*)
art::RuntimeCallbacks::AddRuntimeSigQuitCallback(art::RuntimeSigQuitCallback*)
art::ZipEntry::ExtractToMemMap(char const*, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::JNI::FindClass(_JNIEnv*, char const*)
art::RuntimeArgumentMap::ParallelGCThreads
art::gc::collector::ConcurrentCopying::Process(art::mirror::Object*, art::MemberOffset)
art::VerifyObjectImpl(art::ObjPtr<art::mirror::Object>)
art::gc::Verification::LogHeapCorruption(art::ObjPtr<art::mirror::Object>, art::MemberOffset, art::mirror::Object*, bool) const
art::instrumentation::Instrumentation::FieldWriteEventImpl(art::Thread*, art::ObjPtr<art::mirror::Object>, art::ArtMethod*, unsigned int, art::ArtField*, art::JValue const&) const
art::ClassLinker::SetEntryPointsForObsoleteMethod(art::ArtMethod*) const
art::DebugInstrumentationListener::~DebugInstrumentationListener()
non-virtual thunk to art::gc::collector::SemiSpace::~SemiSpace()
art::ComputeNativeCallFrameSize::~ComputeNativeCallFrameSize()
art::ThrowArrayIndexOutOfBoundsException(int, int)
art::ProfileCompilationInfo::kProfileMagic
art::Locks::allocated_monitor_ids_lock_
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::CompleteArgument()
art::gc::accounting::SpaceBitmap<4096u>::Clear(art::mirror::Object const*)
android::base::StringPrintf(char const*, ...)
art::detail::CmdlineParseArgument<art::LogVerbosity>::~CmdlineParseArgument()
art::verifier::UnresolvedMergedType::~UnresolvedMergedType()
bool art::interpreter::DoFieldGet<(art::FindFieldType)4, (art::Primitive::Type)0, true>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::verifier::MethodVerifier::GetMethodReturnType()
art::Runtime::GetRuntimeCallbacks()
art::jit::Jit::AddSamples(art::Thread*, art::ArtMethod*, unsigned short, bool)
art::mirror::PrimitiveArray<long long>::GetWithoutChecks(int)
art::gc::TaskProcessor::GetRunningThread() const
_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertINS_11__wrap_iterIPKcEEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPhEEE4typeENS5_IPKhEESA_SA_
art::VariantMapKey<art::MillisecondsToNanoseconds>::ValueDelete(void*) const
art::VariantMapKey<art::verifier::VerifyMode>::Clone() const
art::WellKnownClasses::java_util_Collections
art::mirror::Executable::GetDeclaringClass()
art::ArtMethod::GetInvokeType()
art::ClassLinker::ResolveType(art::DexFile const&, art::dex::TypeIndex, art::ObjPtr<art::mirror::Class>)
art::gc::space::RegionSpace::GetSweepCallback()
art::verifier::RegTypeCache::FromCat2ConstLo(int, bool)
art::optimizer::DexDecompiler::Decompile()
_jbooleanArray* art::JNI::NewPrimitiveArray<_jbooleanArray*, art::mirror::PrimitiveArray<unsigned char> >(_JNIEnv*, int)
art::gc::Heap::ThrowOutOfMemoryError(art::Thread*, unsigned int, art::gc::AllocatorType)
unsigned int art::gc::accounting::CardTable::Scan<false, art::gc::ScanVisitor>(art::gc::accounting::SpaceBitmap<8u>*, unsigned char*, unsigned char*, art::gc::ScanVisitor const&, unsigned char)
bool art::verifier::MethodVerifier::VerifyInstructions<true>()
art::OatHeader::GetQuickImtConflictTrampolineOffset() const
art::JDWP::JdwpModKind art::JDWP::Request::ReadEnum1<art::JDWP::JdwpModKind>(char const*)
vtable for art::VariantMapKey<bool>
android::base::Split(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::Locks::jni_weak_globals_lock_
art::CheckJNI::CallByteMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)
art::VariantMapKey<void (*)()>::Clone() const
art::ArmInstructionSetFeatures::FromAssembly()
art::gc::collector::SemiSpace::VisitRoots(art::mirror::CompressedReference<art::mirror::Object>**, unsigned int, art::RootInfo const&)
art::Thread::GetUpdatedVRegFlags(unsigned int)
art::ReaderWriterMutex::ReaderWriterMutex(char const*, art::LockLevel)
art::mirror::PrimitiveArray<unsigned short>::array_class_
art::Trace::EncodeTraceMethod(art::ArtMethod*)
art::JDWP::JdwpState::HandlePacket()
art::gc::space::MemoryToolMallocSpace<art::gc::space::RosAllocSpace, 8u, false, true>::AllocWithGrowth(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
void std::__1::vector<art::ObjPtr<art::mirror::Class>, std::__1::allocator<art::ObjPtr<art::mirror::Class> > >::__push_back_slow_path<art::ObjPtr<art::mirror::Class> >(art::ObjPtr<art::mirror::Class>&&)
art::Thread::AssertPendingException() const
non-virtual thunk to art::gc::collector::SemiSpace::IsMarked(art::mirror::Object*)
art::QuickExceptionHandler::QuickExceptionHandler(art::Thread*, bool)
art::RuntimeArgumentMap::JITInvokeTransitionWeight
art::ObjectRegistry::InternalGet(unsigned long long, art::JDWP::JdwpError*)
art::verifier::PcToRegisterLineTable::~PcToRegisterLineTable()
art::Locks::expected_mutexes_on_weak_ref_access_
art::JNI::CallStaticShortMethodV(_JNIEnv*, _jclass*, _jmethodID*, char*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::IntoKey(art::RuntimeArgumentMapKey<art::TraceClockSource> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::TraceClockSource& ()>::~__func()
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)
std::__1::__shared_ptr_emplace<bool, std::__1::allocator<bool> >::__on_zero_shared_weak()
art::detail::VariantMapKeyRaw::Compare(art::detail::VariantMapKeyRaw const*) const
art::gc::collector::StickyMarkSweep::BindBitmaps()
non-virtual thunk to art::gc::space::FreeListSpace::AllocationSize(art::mirror::Object*, unsigned int*)
art::verifier::VerifierDeps::GetDexFileDeps(art::DexFile const&)
art::Signature::operator==(art::StringPiece const&) const
art::gc::collector::MarkSweep::ProcessReferences(art::Thread*)
vtable for art::verifier::ReferenceType
art::gc::collector::GarbageCollector::ScopedPause::ScopedPause(art::gc::collector::GarbageCollector*, bool)
art::gc::collector::SemiSpace::Sweep(bool)
non-virtual thunk to art::gc::space::MemoryToolMallocSpace<art::gc::space::DlMallocSpace, 8u, true, false>::AllocationSize(art::mirror::Object*, unsigned int*)
art::verifier::UnresolvedMergedType::Dump() const
art::MilliTime()
art::ProfileCompilationInfo::FindDexData(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, bool) const
art::WellKnownClasses::java_lang_Integer_valueOf
art::gc::accounting::SpaceBitmap<8u>::Create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned char*, unsigned int)
artInvokeObsoleteMethod
non-virtual thunk to art::gc::space::BumpPointerSpace::GetObjectsAllocated()
void std::__1::vector<art::Handle<art::mirror::ClassLoader>, std::__1::allocator<art::Handle<art::mirror::ClassLoader> > >::__push_back_slow_path<art::Handle<art::mirror::ClassLoader> >(art::Handle<art::mirror::ClassLoader>&&)
art::ClassLinker::ClassLinker(art::InternTable*)
art::interpreter::UnstartedRuntime::UnstartedSystemArraycopy(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1u> > const&)
art::ArenaStack::GetPeakStats() const
std::__1::__tree<std::__1::__value_type<art::DexFile const*, std::__1::vector<art::dex::TypeIndex, art::ScopedArenaAllocatorAdapter<art::dex::TypeIndex> > >, std::__1::__map_value_compare<art::DexFile const*, std::__1::__value_type<art::DexFile const*, std::__1::vector<art::dex::TypeIndex, art::ScopedArenaAllocatorAdapter<art::dex::TypeIndex> > >, std::__1::less<art::DexFile const*>, true>, art::ScopedArenaAllocatorAdapter<std::__1::__value_type<art::DexFile const*, std::__1::vector<art::dex::TypeIndex, art::ScopedArenaAllocatorAdapter<art::dex::TypeIndex> > > > >::destroy(std::__1::__tree_node<std::__1::__value_type<art::DexFile const*, std::__1::vector<art::dex::TypeIndex, art::ScopedArenaAllocatorAdapter<art::dex::TypeIndex> > >, void*>*)
art::Thread::SetNativePriority(int)
art::verifier::UndefinedType const* art::verifier::RegTypeCache::CreatePrimitiveTypeInstance<art::verifier::UndefinedType>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
vtable for art::verifier::RegType
art::LinkVirtualHashTable::invalid_index_
art::CatchHandlerIterator::CatchHandlerIterator(art::DexFile::CodeItem const&, unsigned int)
art::RuntimeArgumentMapKey<double>::~RuntimeArgumentMapKey()
art::Mips64InstructionSetFeatures::FromCppDefines()
art::OS::OpenFileReadWrite(char const*)
EndIteration(void*)
std::__1::__vector_base<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*>, std::__1::allocator<std::__1::pair<art::ArtMethod*, art::OatQuickMethodHeader*> > >::~__vector_base()
art::ImageHeader::SetImageMethod(art::ImageHeader::ImageMethod, art::ArtMethod*)
art::DexFile::GetIndexForTypeId(art::DexFile::TypeId const&) const
art::gc::Heap::ClearMarkedObjects()
art::ElfOatFile::ElfFileOpen(unix_file::FdFile*, unsigned char*, bool, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>::operator()()
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit> art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::CreateTypedBuilder<art::Unit>()
art::ClassLinker::NumLoadedClasses()
android::base::EqualsIgnoreCase(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::SignalCatcher::WaitForSignal(art::Thread*, art::SignalSet&)
art::gc::IdentityMarkHeapReferenceVisitor::MarkHeapReference(art::mirror::HeapReference<art::mirror::Object>*, bool)
art::gc::space::AllocSpace::SweepCallbackContext::SweepCallbackContext(bool, art::gc::space::Space*)
art::verifier::VerifierDeps::MaybeRecordClassResolution(art::DexFile const&, art::dex::TypeIndex, art::mirror::Class*)
void art::mirror::DexCache::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::VerifyReferenceCardVisitor>(art::ObjPtr<art::mirror::Class>, art::gc::VerifyReferenceCardVisitor const&)
std::__1::__hash_table<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::rehash(unsigned int)
art::Arm64InstructionSetFeatures::AddFeaturesFromSplitString(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
art::JDWP::JdwpEventKind art::JDWP::Request::ReadEnum1<art::JDWP::JdwpEventKind>(char const*)
art::mirror::PrimitiveArray<short>::Memcpy(int, art::ObjPtr<art::mirror::PrimitiveArray<short> >, int, int)
art::DexFile::DexFile(unsigned char const*, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, art::OatDexFile const*)
art::verifier::RegTypeCache::FromCat1NonSmallConstant(int, bool)
art::ThreadList::SuspendThreadByPeer(_jobject*, bool, art::SuspendReason, bool*)
art::Runtime::GetSystemClassLoader() const
art::ArenaStack::~ArenaStack()
art::verifier::MethodVerifier::FailureData art::verifier::MethodVerifier::VerifyMethods<true>(art::Thread*, art::ClassLinker*, art::DexFile const*, art::DexFile::ClassDef const&, art::ClassDataItemIterator*, art::Handle<art::mirror::DexCache>, art::Handle<art::mirror::ClassLoader>, art::CompilerCallbacks*, bool, art::verifier::HardFailLogMode, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
artAllocObjectFromCodeResolvedTLAB
art::RememberForGcArgumentVisitor::~RememberForGcArgumentVisitor()
art::ScopedCheck::CheckThread(_JNIEnv*)
artSetCharStaticFromCode
art::Dbg::GetThreadSelfId()
art::Monitor::GetContendedMonitor(art::Thread*)
art::verifier::UnresolvedSuperClass::IsUnresolvedSuperClass() const
art::mirror::PrimitiveArray<double>::Get(int)
artGet64InstanceFromCode
bool art::interpreter::DoCall<true, false>(art::ArtMethod*, art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short, art::JValue*)
art::gc::space::RosAllocSpace::InspectAllRosAllocWithSuspendAll(void (*)(void*, void*, unsigned int, void*), void*, bool)
art::X86InstructionSetFeatures::AsBitmap() const
art::ElfFileImpl<ElfTypes64>::FixupDynamic(unsigned long long)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::TraceClockSource>::IntoKey(art::RuntimeArgumentMapKey<art::TraceClockSource> const&)::{lambda(art::TraceClockSource&)#1}, std::__1::allocator<{lambda(art::TraceClockSource&)#1}>, void (art::TraceClockSource&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::TraceClockSource&)#1}> >*) const
art::CatchHandlerIterator::CatchHandlerIterator(art::DexFile::CodeItem const&, art::DexFile::TryItem const&)
art::mirror::PrimitiveArray<signed char>::Memcpy(int, art::ObjPtr<art::mirror::PrimitiveArray<signed char> >, int, int)
art::mirror::Object* art::gc::Heap::AllocObject<true, art::VoidFunctor>(art::Thread*, art::ObjPtr<art::mirror::Class>, unsigned int, art::VoidFunctor const&)
art::TypeLookupTable::TypeLookupTable(art::DexFile const&, unsigned char*)
art::gc::accounting::ModUnionTableCardCache::ModUnionTableCardCache(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::gc::Heap*, art::gc::space::ContinuousSpace*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoIgnore()::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>::__clone() const
void std::__1::vector<art::RuntimeSigQuitCallback*, std::__1::allocator<art::RuntimeSigQuitCallback*> >::__push_back_slow_path<art::RuntimeSigQuitCallback* const&>(art::RuntimeSigQuitCallback* const&)
void std::__1::__invoke_void_return_wrapper<void>::__call<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1024u> > const&)::{lambda(art::Memory<1024u>&)#1}&, art::Memory<1024u>&>(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1024u> > const&)::{lambda(art::Memory<1024u>&)#1}&, art::Memory<1024u>&)
void art::mirror::Class::VisitNativeRoots<(art::ReadBarrierOption)0, art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor const>(art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor const&, art::PointerSize)
art::OatDexFile::AssertAotCompiler()
art::gc::ReferenceQueue::ReferenceQueue(art::Mutex*)
art::gc::Verification::IsAddressInHeapSpace(void const*, art::gc::space::Space**) const
void art::mirror::ObjectArray<art::mirror::Object>::AssignableCheckingMemcpy<false>(int, art::ObjPtr<art::mirror::ObjectArray<art::mirror::Object> >, int, int, bool)
art::Primitive::BoxedDescriptor(art::Primitive::Type)
non-virtual thunk to art::gc::collector::MarkSweep::IsMarked(art::mirror::Object*)
art::gc::space::BumpPointerSpace::GetMarkBitmap() const
art::register_java_lang_StringFactory(_JNIEnv*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::XGcOption& ()>::destroy_deallocate()
art::GuardedCopy::CheckHeader(char const*, bool) const::kMagicCmp
art::Dbg::TagFromObject(art::ScopedObjectAccessUnchecked const&, art::mirror::Object*)
art::gc::accounting::SpaceBitmap<4096u>::HeapLimit() const
art::VariantMapKey<void (*)()>::ValueDelete(void*) const
art::ElfFileImpl<ElfTypes64>::ElfFileImpl(unix_file::FdFile*, bool, bool, unsigned char*)
art::MonitorList::AllowNewMonitors()
art::Thread::IsJWeakCleared(_jobject*) const
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<bool (*)()>(art::RuntimeArgumentMapKey<bool (*)()> const&)
vtable for art::ArenaBitVector
art::Transaction::UndoResolveStringModifications()
art::CheckJNI::IsInstanceOf(_JNIEnv*, _jobject*, _jclass*)
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<art::MillisecondsToNanoseconds>(art::RuntimeArgumentMapKey<art::MillisecondsToNanoseconds> const&)
art::WellKnownClasses::dalvik_system_BaseDexClassLoader
art::mirror::Array::ThrowArrayStoreException(art::ObjPtr<art::mirror::Object>)
art::gc::space::RegionSpace::AssertAllThreadLocalBuffersAreRevoked()
art::JNI::CallStaticObjectMethodV(_JNIEnv*, _jclass*, _jmethodID*, char*)
MterpSet32Static
art::MangleForJni(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::ClassLinker::SetEntryPointsToInterpreter(art::ArtMethod*) const
art::ArenaBitVector::ArenaBitVector(art::ArenaAllocator*, unsigned int, bool, art::ArenaAllocKind)
art::JNI::NewLongArray(_JNIEnv*, int)
std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekoff(long long, std::__1::ios_base::seekdir, unsigned int)
art::CheckJNI::GetIntField(_JNIEnv*, _jobject*, _jfieldID*)
art::JNIEnvExt::CheckMonitorRelease(_jobject*)
art::DlOpenOatFile::Load(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned char*, bool, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
void art::gc::accounting::SpaceBitmap<8u>::VisitMarkedRange<art::gc::collector::ConcurrentCopying::ImmuneSpaceScanObjVisitor&>(unsigned int, unsigned int, art::gc::collector::ConcurrentCopying::ImmuneSpaceScanObjVisitor&) const
MterpSet64Static
art::gc::allocator::RosAlloc::UsableSize(void const*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>::destroy()
vtable for art::JDWP::JdwpAdbState
art::hprof::Hprof::~Hprof()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1u> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1u>& ()>::operator()()
art::DexFile::EnableWrite() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoIgnore()::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>::~__func()
art::ArmInstructionSetFeatures::FromCpuInfo()
art::SuspensionHandler::~SuspensionHandler()
art::CheckJNI::CallStaticObjectMethod(_JNIEnv*, _jclass*, _jmethodID*, ...)
art::RuntimeArgumentMap::MemoryInitialSize
art::gc::space::RegionSpace::FreeList(art::Thread*, unsigned int, art::mirror::Object**)
void std::__1::vector<art::JDWP::JdwpEvent*, std::__1::allocator<art::JDWP::JdwpEvent*> >::__push_back_slow_path<art::JDWP::JdwpEvent* const&>(art::JDWP::JdwpEvent* const&)
art::jit::JitCodeCache::NotifyCollectionDone(art::Thread*)
art::CheckJNI::PushLocalFrame(_JNIEnv*, int)
art::hprof::NetStateEndianOutput::~NetStateEndianOutput()
art::Libraries::FindNativeMethod(art::Thread*, art::ArtMethod*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)
artGetByteStaticFromCode
bool art::interpreter::DoFieldPut<(art::FindFieldType)5, (art::Primitive::Type)0, false, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::gc::space::FreeListSpace::Free(art::Thread*, art::mirror::Object*)
art::hprof::EndianOutputBuffered::HandleU1AsU2List(unsigned char const*, unsigned int)
art::CheckJNI::NewByteArray(_JNIEnv*, int)
art::ZipEntry::MapDirectlyFromFile(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)4, false, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::mirror::PrimitiveArray<short>::array_class_
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::ProfileCompilationInfo*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::ProfileCompilationInfo*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, art::ProfileCompilationInfo*> > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::VariantMapKey<art::ProfileSaverOptions>::ValueDelete(void*) const
art::ElfFileImpl<ElfTypes64>::ApplyOatPatches(unsigned char const*, unsigned char const*, unsigned long long, unsigned char*, unsigned char const*)
art::verifier::LongLoType::IsLong() const
mspace_malloc
art::JNI::NewStringUTF(_JNIEnv*, char const*)
art::WellKnownClasses::org_apache_harmony_dalvik_ddmc_DdmServer_dispatch
void art::JNI::ReleasePrimitiveArray<_jlongArray*, long long, art::mirror::PrimitiveArray<long long> >(_JNIEnv*, _jlongArray*, long long*, int)
art::ProfileCompilationInfo::Load(int)
art::mirror::PrimitiveArray<float>::ResetArrayClass()
art::gc::accounting::SpaceBitmap<8u>::HeapLimit() const
art::ArtField* art::ArtField::FindInstanceFieldWithOffset<true>(art::ObjPtr<art::mirror::Class>, unsigned int)
art::VariantMapKey<int (*)(__sFILE*, char const*, char*)>::~VariantMapKey()
non-virtual thunk to art::gc::space::RosAllocSpace::Alloc(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::IntoKey(art::RuntimeArgumentMapKey<art::verifier::VerifyMode> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::verifier::VerifyMode& ()>::destroy_deallocate()
art::gc::space::RegionSpace::Region::Clear(bool)
art::CodeInfo::GetRegisterMask(unsigned int, art::CodeInfoEncoding const&) const
art::CheckJNI::IsSameObject(_JNIEnv*, _jobject*, _jobject*)
art::JDWP::JdwpState::PostClassPrepare(art::mirror::Class*)
art::JNI::ReleaseLongArrayElements(_JNIEnv*, _jlongArray*, long long*, int)
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&, art::Identity<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::type const&)
void art::mirror::DexCache::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::mirror::ReadBarrierOnNativeRootsVisitor>(art::ObjPtr<art::mirror::Class>, art::mirror::ReadBarrierOnNativeRootsVisitor const&)
art::gc::collector::MarkSweep::MarkRoots(art::Thread*)
art::gc::space::BumpPointerSpace::AllocationSize(art::mirror::Object*, unsigned int*)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::VisitRootFlags const&)
art::verifier::UnresolvedSuperClass::IsUnresolvedTypes() const
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
OpenArchiveFromMemory(void*, unsigned int, char const*, void**)
art::gc::Heap::AddModUnionTable(art::gc::accounting::ModUnionTable*)
art::Dbg::IsForcedInterpreterNeededForExceptionImpl(art::Thread*)
art::jit::JitCodeCache::MoveObsoleteMethod(art::ArtMethod*, art::ArtMethod*)
art::CheckJNI::FromReflectedMethod(_JNIEnv*, _jobject*)
art::interpreter::UnstartedRuntime::UnstartedConstructorNewInstance0(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::ArmInstructionSetFeatures::Equals(art::InstructionSetFeatures const*) const
art::CumulativeLogger::kLowMemoryBucketCount
art::ProfileCompilationInfo::ContainsClass(art::DexFile const&, art::dex::TypeIndex) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::XGcOption> const&)::{lambda(art::XGcOption&)#1}, std::__1::allocator<{lambda(art::XGcOption&)#1}>, void (art::XGcOption&)>::operator()(art::XGcOption&)
art::verifier::UninitializedType::IsUninitializedTypes() const
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > const&)::{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}, std::__1::allocator<{lambda(std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)#1}>, void (std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >&)>::destroy_deallocate()
art::WellKnownClasses::org_apache_harmony_dalvik_ddmc_Chunk
art::Runtime::CreateLinearAlloc()
art::gc::Heap::MayUseCollector(art::gc::CollectorType) const
art::instrumentation::Instrumentation::RemoveDeoptimizedMethod(art::ArtMethod*)
art::InternTable::~InternTable()
art::verifier::DoubleLoType::IsDouble() const
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)2, false, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::verifier::CharType::CreateInstance(art::mirror::Class*, art::StringPiece const&, unsigned short)
std::__1::__function::__func<android::base::LogdLogger, std::__1::allocator<android::base::LogdLogger>, void (android::base::LogId, android::base::LogSeverity, char const*, char const*, unsigned int, char const*)>::destroy_deallocate()
art::gc::Heap::IsInBootImageOatFile(void const*) const
art::SingleStepControl::AddDexPc(unsigned int)
art::DebugInstrumentationListener::Branch(art::Thread*, art::ArtMethod*, unsigned int, int)
art::ArenaBitVector::ArenaBitVector(art::ScopedArenaAllocator*, unsigned int, bool, art::ArenaAllocKind)
art::Runtime::RegisterAppInfo(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1u>& ()>::destroy()
void art::mirror::Class::VisitNativeRoots<(art::ReadBarrierOption)0, art::gc::collector::MarkVisitor const>(art::gc::collector::MarkVisitor const&, art::PointerSize)
art::ArtMethod* art::FindMethodFromCode<(art::InvokeType)4, false>(unsigned int, art::ObjPtr<art::mirror::Object>*, art::ArtMethod*, art::Thread*)
art::jit::MarkCodeVisitor::VisitFrame()
std::__1::list<art::Thread*, std::__1::allocator<art::Thread*> >::remove(art::Thread* const&)
art::verifier::RegType::IsImpreciseConstantLo() const
art::gc::collector::ConcurrentCopying::SwapStacks()
bool art::interpreter::DoFieldPut<(art::FindFieldType)5, (art::Primitive::Type)0, true, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::~RuntimeArgumentMapKey()
art::Locks::intern_table_lock_
art::ClassLoaderContext::GetClassLoaderTypeName(art::ClassLoaderContext::ClassLoaderType)
void art::mirror::Object::VisitFieldsReferences<false, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsFieldVisitor>(unsigned int, art::gc::collector::ConcurrentCopying::VerifyNoFromSpaceRefsFieldVisitor const&)
art::ArenaStack::Reset()
art::DexFileVerifier::CheckStaticFieldTypes(art::DexFile::ClassDef const*)
art_sigsegv_fault
art::Memory<1u>& art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination::GetOrCreateFromMap<art::Memory<1u> >(art::RuntimeArgumentMapKey<art::Memory<1u> > const&)
art::Thread::GetPeerFromOtherThread() const
art::RuntimeArgumentMapKey<art::Memory<1024u> >::~RuntimeArgumentMapKey()
art::detail::CmdlineParserArgumentInfo<art::ProfileSaverOptions>::CompleteArgument()
double* art::JNI::GetPrimitiveArray<_jdoubleArray*, double, art::mirror::PrimitiveArray<double> >(_JNIEnv*, _jdoubleArray*, unsigned char*)
art::ThrowBootstrapMethodError(char const*, ...)
std::__1::__split_buffer<std::__1::tuple<void const*, unsigned int, bool>*, std::__1::allocator<std::__1::tuple<void const*, unsigned int, bool>*> >::push_front(std::__1::tuple<void const*, unsigned int, bool>*&&)
art::gc::collector::MarkSweep::IsNullOrMarkedHeapReference(art::mirror::HeapReference<art::mirror::Object>*, bool)
art::verifier::PreciseConstLoType::~PreciseConstLoType()
art::Monitor::Install(art::Thread*)
art::ElfFileImpl<ElfTypes32>::FindSymbolByName(unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
void art::mirror::DexCache::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::collector::MarkCompact::MarkObjectVisitor>(art::ObjPtr<art::mirror::Class>, art::gc::collector::MarkCompact::MarkObjectVisitor const&)
art::mirror::String::AllocFromStrings(art::Thread*, art::Handle<art::mirror::String>, art::Handle<art::mirror::String>)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::IntoKey(art::RuntimeArgumentMapKey<bool> const&)::{lambda(bool&)#1}, std::__1::allocator<{lambda(bool&)#1}>, void (bool&)>
art::Dbg::GetThreadId(art::Thread*)
art::gc::collector::ConcurrentCopying::ProcessMarkStackRef(art::mirror::Object*)
art::ProfilingInfo::ProfilingInfo(art::ArtMethod*, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&)
vtable for std::__1::__function::__func<void (*)(char const*), std::__1::allocator<void (*)(char const*)>, void (char const*)>
art::Locks::thread_suspend_count_lock_
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::IntoKey(art::RuntimeArgumentMapKey<art::JDWP::JdwpOptions> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::JDWP::JdwpOptions& ()>
art::CheckJNI::FatalError(_JNIEnv*, char const*)
art::gc::collector::MarkSweep::CheckpointMarkThreadRoots::~CheckpointMarkThreadRoots()
std::__1::function<art::BackgroundGcOption& ()>::swap(std::__1::function<art::BackgroundGcOption& ()>&)
vtable for art::detail::CmdlineParseArgument<art::gc::space::LargeObjectSpaceType>
art::Runtime::DisallowNewSystemWeaks()
void std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__push_back_slow_path<unsigned int>(unsigned int&&)
art::OatFileAssistant::OatFileInfo::ReleaseFile()
art::Dbg::ConfigureStep(unsigned long long, art::JDWP::JdwpStepSize, art::JDWP::JdwpStepDepth)
art::DexFileVerifier::CheckEncodedValue()
art::mirror::Object::CheckFieldAssignmentImpl(art::MemberOffset, art::ObjPtr<art::mirror::Object>)
art::gc::Heap::IsMovableObject(art::ObjPtr<art::mirror::Object>) const
art::mirror::Class::FindStaticField(art::Thread*, art::ObjPtr<art::mirror::Class>, art::StringPiece const&, art::StringPiece const&)
inflatePrime
art::mirror::Class::VisitRoots(art::RootVisitor*)
vtable for art::GetClassInToObjectArray
art::RuntimeArgumentMapKey<art::gc::space::LargeObjectSpaceType>::~RuntimeArgumentMapKey()
vtable for art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >
non-virtual thunk to art::gc::collector::ConcurrentCopying::ThreadFlipVisitor::VisitRoots(art::mirror::CompressedReference<art::mirror::Object>**, unsigned int, art::RootInfo const&)
art::VariantMapKey<art::InstructionSet>::ValueClone(void*) const
art::RuntimeCallbacks::RemoveMethodCallback(art::MethodCallback*)
art::gc::space::Space::AsRegionSpace()
art::JII::DetachCurrentThread(_JavaVM*)
bool art::interpreter::DoFieldPut<(art::FindFieldType)7, (art::Primitive::Type)2, true, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::IntoKey(art::RuntimeArgumentMapKey<art::LogVerbosity> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::LogVerbosity& ()>::~__func()
art::verifier::VerifierDeps::VerifierDeps(std::__1::vector<art::DexFile const*, std::__1::allocator<art::DexFile const*> > const&, bool)
vtable for art::gc::space::MemoryToolLargeObjectMapSpace
artLmod
art::ThreadPool::ThreadPool(char const*, unsigned int, bool)
art::Thread::Thread(bool)
art::verifier::UninitializedThisReferenceType::CheckInvariants() const
art::CompilerFilter::IsBetter(art::CompilerFilter::Filter, art::CompilerFilter::Filter)
art::mirror::PrimitiveArray<unsigned char>::AllocateAndFill(art::Thread*, unsigned char const*, unsigned int)
art::Barrier::~Barrier()
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)2, true, true>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::ThreadList::RunCheckpointOnRunnableThreads(art::Closure*)
art::ClassLoaderContext::Default()
art::verifier::LongHiType::instance_
art::detail::CmdlineParseArgument<art::verifier::VerifyMode>::~CmdlineParseArgument()
art::arm64::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::arm64::DRegister const&)
art::JNI::CallObjectMethodV(_JNIEnv*, _jobject*, _jmethodID*, char*)
art::SafeMap<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::Overwrite(int const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::interpreter::UnstartedRuntime::UnstartedClassIsAnonymousClass(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
void art::mirror::Class::VisitNativeRoots<(art::ReadBarrierOption)0, art::gc::accounting::ModUnionUpdateObjectReferencesVisitor const>(art::gc::accounting::ModUnionUpdateObjectReferencesVisitor const&, art::PointerSize)
non-virtual thunk to art::gc::collector::SemiSpace::~SemiSpace()
vtable for art::BuildStackTraceVisitor
art::Mips64InstructionSetFeatures::FromVariant(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::Dbg::DdmSendHeapSegments(bool)
art::Dbg::IsForcedInterpreterNeededForUpcallImpl(art::Thread*, art::ArtMethod*)
art::detail::CmdlineParserArgumentInfo<art::Memory<1u> >::CompleteArgument()
art::gc::space::LargeObjectSpace::SwapBitmaps()
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::IntoKey(art::RuntimeArgumentMapKey<art::gc::space::LargeObjectSpaceType> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::gc::space::LargeObjectSpaceType& ()>
art::x86::X86Context::IsAccessibleFPR(unsigned int)
art::mirror::ClassExt::SetClass(art::ObjPtr<art::mirror::Class>)
art::CompilerFilter::IsVerificationEnabled(art::CompilerFilter::Filter)
vtable for art::jit::JitCompileTask
art::ElfOatFile::Load(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned char*, bool, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::verifier::UninitializedThisReferenceType::HasClassVirtual() const
art::gc::accounting::CardTable::CardTable(art::MemMap*, unsigned char*, unsigned int)
art::GuardedCopy::CheckHeader(char const*, bool) const
art::ElfFileImpl<ElfTypes64>::GetRela(Elf64_Shdr&, unsigned int) const
bool art::mirror::ObjectArray<art::mirror::Class>::CheckAssignable<(art::VerifyObjectFlags)0>(art::ObjPtr<art::mirror::Class>)
vtable for std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
art::verifier::FloatType const* art::verifier::RegTypeCache::CreatePrimitiveTypeInstance<art::verifier::FloatType>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::ThrowClassCircularityError(art::ObjPtr<art::mirror::Class>, char const*, ...)
art::ClassTable::TryInsert(art::ObjPtr<art::mirror::Class>)
art::gc::collector::SemiSpace::RunPhases()
art::CheckJNI::GetStringChars(_JNIEnv*, _jstring*, unsigned char*)
art::Instruction::CanFlowThrough() const
art::ElfFileImpl<ElfTypes32>::FindSectionByType(unsigned int) const
art::Dbg::PostClassPrepare(art::mirror::Class*)
art::gc::Heap::PerformHomogeneousSpaceCompact()
art::JNI::CallStaticObjectMethod(_JNIEnv*, _jclass*, _jmethodID*, ...)
art::mirror::PrimitiveArray<float>::Get(int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::ProfileSaverOptions&)#1}, std::__1::allocator<{lambda(art::ProfileSaverOptions&)#1}>, void (art::ProfileSaverOptions&)>::destroy()
art::VariantMapKey<bool>::ValueDelete(void*) const
art::ElfFileImpl<ElfTypes64>::GetRelSectionStart(Elf64_Shdr&) const
art::gc::Heap::CollectGarbage(bool)
art::Trace::LogMethodTraceEvent(art::Thread*, art::ArtMethod*, art::instrumentation::Instrumentation::InstrumentationEvent, unsigned int, unsigned int)
art_f2i
art::gc::space::MallocSpace::SetGrowthLimit(unsigned int)
void std::__1::deque<std::__1::pair<art::mirror::Object*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<art::mirror::Object*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::emplace_back<art::mirror::Object*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(art::mirror::Object*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art_f2l
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ExperimentalFlags& ()>::__clone() const
art::ArmInstructionSetFeatures::FromCppDefines()
art::CheckJNI::SetDoubleArrayRegion(_JNIEnv*, _jdoubleArray*, int, int, double const*)
art::detail::CmdlineParserArgumentInfo<art::ParseStringList<(char)58> >::CompleteArgument()
art::ObjectRegistry::AddRefType(art::ObjPtr<art::mirror::Class>)
art::gc::space::ZygoteSpace::LogFragmentationAllocFailure(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, unsigned int)
std::__1::__tree<std::__1::__value_type<art::mirror::Object*, art::Transaction::ObjectLog>, std::__1::__map_value_compare<art::mirror::Object*, std::__1::__value_type<art::mirror::Object*, art::Transaction::ObjectLog>, std::__1::less<art::mirror::Object*>, true>, std::__1::allocator<std::__1::__value_type<art::mirror::Object*, art::Transaction::ObjectLog> > >::destroy(std::__1::__tree_node<std::__1::__value_type<art::mirror::Object*, art::Transaction::ObjectLog>, void*>*)
void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor, art::gc::collector::MarkSweep::DelayReferenceReferentVisitor>(art::gc::collector::MarkSweep::MarkStackTask<false>::MarkObjectParallelVisitor const&, art::gc::collector::MarkSweep::DelayReferenceReferentVisitor const&)
art::CumulativeLogger::GetIterations() const
art::Dbg::DbgThreadLifecycleCallback::~DbgThreadLifecycleCallback()
void art::mirror::Object::VisitFieldsReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor>(unsigned int, art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor const&)
artGetBooleanStaticFromCompiledCode
art::gc::space::ZygoteSpace::GetSweepCallback()
vtable for art::ArenaBitVectorAllocator<art::ScopedArenaAllocator>
art::ArtMethod* art::FindMethodFromCode<(art::InvokeType)1, true>(unsigned int, art::ObjPtr<art::mirror::Object>*, art::ArtMethod*, art::Thread*)
art::gc::space::ContinuousMemMapAllocSpace::~ContinuousMemMapAllocSpace()
ZipArchive::InitializeCentralDirectory(char const*, long long, unsigned int)
art::Thread::Destroy()
art::JavaVMExt::AddWeakGlobalRef(art::Thread*, art::ObjPtr<art::mirror::Object>)
art::jit::JitCodeCache::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::mirror::ObjectArray<art::mirror::Constructor>::Alloc(art::Thread*, art::ObjPtr<art::mirror::Class>, int, art::gc::AllocatorType)
art::MemStats::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::mirror::MethodHandleImpl::Create(art::Thread*, unsigned int, art::mirror::MethodHandle::Kind, art::Handle<art::mirror::MethodType>)
art::GetResolvedClassesVisitor::~GetResolvedClassesVisitor()
art::Transaction::ObjectLog::VisitRoots(art::RootVisitor*)
art::RuntimeArgumentMapKey<std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > >*>::~RuntimeArgumentMapKey()
art::JDWP::JdwpState::RegisterEvent(art::JDWP::JdwpEvent*)
art::verifier::PreciseReferenceType::IsNonZeroReferenceTypes() const
art::Locks::reference_queue_weak_references_lock_
art::verifier::RegTypeCache::AddString(art::StringPiece const&)
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void (*)(art::Thread*, art::ArtMethod*, art::mirror::Object*, unsigned int*, art::JValue*)> > >::__rehash(unsigned int)
std::__1::__function::__func<android::base::LogdLogger, std::__1::allocator<android::base::LogdLogger>, void (android::base::LogId, android::base::LogSeverity, char const*, char const*, unsigned int, char const*)>::~__func()
art::detail::CmdlineParseArgument<art::LogVerbosity>::GetTypeName() const
art::annotations::IsMethodAnnotationPresent(art::ArtMethod*, art::Handle<art::mirror::Class>, unsigned int, bool)
void art::mirror::Class::VisitReferences<false, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::gc::space::ImageSpaceLoader::FixupObjectVisitor>(art::ObjPtr<art::mirror::Class>, art::gc::space::ImageSpaceLoader::FixupObjectVisitor const&)
art::ObjectRegistry::ObjectRegistry()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::BackgroundGcOption&)#1}, std::__1::allocator<{lambda(art::BackgroundGcOption&)#1}>, void (art::BackgroundGcOption&)>::operator()(art::BackgroundGcOption&)
art::jit::Jit::Stop()
art::instrumentation::Instrumentation::UninstrumentQuickAllocEntryPointsLocked()
std::__1::function<void (art::JDWP::JdwpOptions&)>::swap(std::__1::function<void (art::JDWP::JdwpOptions&)>&)
std::__1::__hash_iterator<std::__1::__hash_node<art::StringTable::Entry, void*>*> std::__1::__hash_table<art::StringTable::Entry, art::StringTable::EntryHash, std::__1::equal_to<art::StringTable::Entry>, std::__1::allocator<art::StringTable::Entry> >::find<art::StringTable::Entry>(art::StringTable::Entry const&)
art::DexFileVerifier::FindFirstAnnotationsDirectoryDefiner(unsigned char const*, bool*)
art::CheckJNI::SetCharField(_JNIEnv*, _jobject*, _jfieldID*, unsigned short)
art::verifier::MethodVerifier::Shutdown()
art::gc::collector::MarkSweep::CardScanTask::Finalize()
art::ClassLinker::CreatePathClassLoader(art::Thread*, std::__1::vector<art::DexFile const*, std::__1::allocator<art::DexFile const*> > const&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::GetOrDefault<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&) const
art::VariantMapKey<art::MillisecondsToNanoseconds>::Clone() const
art::gc::collector::MarkCompact::SweepLargeObjects(bool)
art::gc::Heap::GetRosAllocSpace(art::gc::allocator::RosAlloc*) const
art::mirror::MethodHandlesLookup::Create(art::Thread*, art::Handle<art::mirror::Class>)
art::JDWP::Request::ReadUtf8String()
art::MonitorDeflateVisitor::IsMarked(art::mirror::Object*)
art::ZipEntry::GetUncompressedLength()
art::gc::collector::SemiSpace::~SemiSpace()
art::mirror::EmulatedStackFrame::WriteToShadowFrame(art::Thread*, art::Handle<art::mirror::MethodType>, unsigned int, art::ShadowFrame*)
art::JDWP::JdwpNetStateBase::WriteBufferedPacketLocked(std::__1::vector<iovec, std::__1::allocator<iovec> > const&)
art::IndirectReferenceTable::RecoverHoles(art::IRTSegmentState)
art::CodeInfo::GetStackMapForNativePcOffset(unsigned int, art::CodeInfoEncoding const&) const
std::__1::deque<std::__1::tuple<void const*, unsigned int, bool>, std::__1::allocator<std::__1::tuple<void const*, unsigned int, bool> > >::__add_back_capacity()
art::Monitor::NotifyAll(art::Thread*)
art::gc::collector::SemiSpace::RevokeAllThreadLocalBuffers()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::IntoKey(art::RuntimeArgumentMapKey<art::ExperimentalFlags> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ExperimentalFlags& ()>::operator()()
art::JNIEnvExt::~JNIEnvExt()
art::JDWP::InitSocketTransport(art::JDWP::JdwpState*, art::JDWP::JdwpOptions const*)
art::gc::space::ImageSpace::bitmap_index_
void std::__1::vector<art::gc::space::ContinuousSpace*, std::__1::allocator<art::gc::space::ContinuousSpace*> >::__push_back_slow_path<art::gc::space::ContinuousSpace* const&>(art::gc::space::ContinuousSpace* const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::IntoKey(art::RuntimeArgumentMapKey<art::gc::space::LargeObjectSpaceType> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::gc::space::LargeObjectSpaceType& ()>::destroy_deallocate()
art::gc::space::FreeListSpace::Create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned char*, unsigned int)
art::ClassLinker::LinkClass(art::Thread*, char const*, art::Handle<art::mirror::Class>, art::Handle<art::mirror::ObjectArray<art::mirror::Class> >, art::MutableHandle<art::mirror::Class>*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::IntoKey(art::RuntimeArgumentMapKey<art::verifier::VerifyMode> const&)::{lambda(art::verifier::VerifyMode&)#1}, std::__1::allocator<{lambda(art::verifier::VerifyMode&)#1}>, void (art::verifier::VerifyMode&)>::~__func()
art::gc::ReferenceQueue::ClearWhiteReferences(art::gc::ReferenceQueue*, art::gc::collector::GarbageCollector*)
art::verifier::MethodVerifier::CheckVarArgRangeRegs(unsigned int, unsigned int)
vtable for art::Dbg::DbgThreadLifecycleCallback
art::gc::collector::MarkCompact::UpdateRootVisitor::~UpdateRootVisitor()
art::DexFileVerifier::FindClassIndexAndDef(unsigned int, bool, art::dex::TypeIndex*, art::DexFile::ClassDef const**)
art::detail::CmdlineParseArgument<double>::ParseArgument(art::TokenRange const&, unsigned int*)
art::ScopedCheck::CheckNonHeap(art::JavaVMExt*, bool, char const*, art::JniValueType*)
art::CheckJNI::SetStaticFloatField(_JNIEnv*, _jclass*, _jfieldID*, float)
art::ProfileCompilationInfo::DumpInfo(std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > > const*, bool) const
art::gc::accounting::SpaceBitmap<4096u>::Dump() const
std::__1::__tree_iterator<art::dex::TypeIndex, std::__1::__tree_node<art::dex::TypeIndex, void*>*, int> std::__1::__tree<art::dex::TypeIndex, std::__1::less<art::dex::TypeIndex>, art::ArenaAllocatorAdapter<art::dex::TypeIndex> >::__emplace_hint_unique_key_args<art::dex::TypeIndex, art::dex::TypeIndex const&>(std::__1::__tree_const_iterator<art::dex::TypeIndex, std::__1::__tree_node<art::dex::TypeIndex, void*>*, int>, art::dex::TypeIndex const&, art::dex::TypeIndex const&)
void art::ClassTable::VisitRoots<art::gc::collector::ConcurrentCopying::VerifyGrayImmuneObjectsVisitor>(art::gc::collector::ConcurrentCopying::VerifyGrayImmuneObjectsVisitor const&)
art::PrettyDescriptor(char const*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::IntoKey(art::RuntimeArgumentMapKey<bool> const&)::{lambda(bool&)#1}, std::__1::allocator<{lambda(bool&)#1}>, void (bool&)>::~__func()
art::JNI::SetStaticFloatField(_JNIEnv*, _jclass*, _jfieldID*, float)
art::detail::CmdlineParseArgument<unsigned int>::MaybeMatches(art::TokenRange const&)
android::base::SetLogger(std::__1::function<void (android::base::LogId, android::base::LogSeverity, char const*, char const*, unsigned int, char const*)>&&)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::IntoKey(art::RuntimeArgumentMapKey<art::ExperimentalFlags> const&)::{lambda(art::ExperimentalFlags&)#1}, std::__1::allocator<{lambda(art::ExperimentalFlags&)#1}>, void (art::ExperimentalFlags&)>
art::MipsInstructionSetFeatures::FromHwcap()
non-virtual thunk to art::gc::space::MemoryToolMallocSpace<art::gc::space::RosAllocSpace, 8u, false, true>::~MemoryToolMallocSpace()
std::__1::__shared_ptr_emplace<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::~__shared_ptr_emplace()
art::verifier::UnresolvedUninitializedThisRefType::~UnresolvedUninitializedThisRefType()
unsigned char* art::JNI::GetPrimitiveArray<_jbooleanArray*, unsigned char, art::mirror::PrimitiveArray<unsigned char> >(_JNIEnv*, _jbooleanArray*, unsigned char*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<art::Plugin, std::__1::allocator<art::Plugin> >& ()>::~__func()
art::InstructionSetFeatures::FromAssembly()
art::Dbg::class_load_callback_
vtable for art::Barrier
art::detail::CmdlineParseArgument<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::~CmdlineParseArgument()
art::ClassLinker::FindPrimitiveClass(char)
art::gc::accounting::CardTable::CardTable(art::MemMap*, unsigned char*, unsigned int)
art::DlOpenOatFile::PreSetup(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::verifier::RegType::IsFloat() const
art::ArtMethod* art::ClassLinker::ResolveMethod<(art::ClassLinker::ResolveMode)0>(art::Thread*, unsigned int, art::ArtMethod*, art::InvokeType)
vtable for std::__1::__shared_ptr_emplace<art::MillisecondsToNanoseconds, std::__1::allocator<art::MillisecondsToNanoseconds> >
art::JDWP::JdwpNetStateBase::WritePacket(art::JDWP::ExpandBuf*, unsigned int)
art::gc::space::ContinuousMemMapAllocSpace::BindLiveToMarkBitmap()
art::gc::ReferenceProcessor::DisableSlowPath(art::Thread*)
art::CmdlineType<art::LogVerbosity>::Parse(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::CompleteArgument()
art::Locks::modify_ldt_lock_
art::ArtField* art::FindFieldFromCode<(art::FindFieldType)6, true>(unsigned int, art::ArtMethod*, art::Thread*, unsigned int)
art::gc::Heap::FindContinuousSpaceFromAddress(art::mirror::Object const*) const
art::Trace::Trace(unix_file::FdFile*, char const*, unsigned int, int, art::Trace::TraceOutputMode, art::Trace::TraceMode)
art::detail::CmdlineParserArgumentInfo<art::BackgroundGcOption>::~CmdlineParserArgumentInfo()
art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::~RuntimeArgumentMapKey()
art::gc::Heap::Heap(unsigned int, unsigned int, unsigned int, unsigned int, double, double, unsigned int, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::InstructionSet, art::gc::CollectorType, art::gc::CollectorType, art::gc::space::LargeObjectSpaceType, unsigned int, unsigned int, unsigned int, bool, unsigned int, unsigned int, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, bool, unsigned long long)
art::gc::allocator::RosAlloc::headerSizes
art::detail::CmdlineParseArgument<art::MillisecondsToNanoseconds>::MaybeMatches(art::TokenRange const&)
void std::__1::vector<art::gc::space::ImageSpace*, std::__1::allocator<art::gc::space::ImageSpace*> >::__push_back_slow_path<art::gc::space::ImageSpace* const&>(art::gc::space::ImageSpace* const&)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)
art::gc::ReferenceProcessor::ProcessReferences(bool, art::TimingLogger*, bool, art::gc::collector::GarbageCollector*)
_ZNSt3__16vectorIPN3art2gc10accounting11AtomicStackINS1_6mirror6ObjectEEENS_9allocatorIS8_EEE6assignIPS8_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS8_NS_15iterator_traitsISF_E9referenceEEE5valueEvE4typeESF_SF_
void art::mirror::Class::VisitNativeRoots<(art::ReadBarrierOption)1, art::gc::collector::SemiSpace::MarkObjectVisitor const>(art::gc::collector::SemiSpace::MarkObjectVisitor const&, art::PointerSize)
art::gc::space::Space::AsRosAllocSpace()
std::__1::__hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> >::__rehash(unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1024u> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1024u>& ()>::destroy()
art::TypeLookupTable::TypeLookupTable(art::DexFile const&, unsigned char*)
art::verifier::UnresolvedMergedType::IsArrayTypes() const
std::__1::__split_buffer<art::Task**, std::__1::allocator<art::Task**> >::push_front(art::Task**&&)
art::gc::space::ImageSpace::~ImageSpace()
art::OatFileAssistant::OatFileInfo::IsUseable()
art::interpreter::UnstartedRuntime::UnstartedStringCharAt(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::NoopAllocator::Free(void*)
art::ClassLoaderContext::RemoveLocationsFromClassPaths(art::dchecked_vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)
art::VariantMapKey<bool>::Clone() const
artGetCharStaticFromCompiledCode
art::Trace::IsTracingEnabled()
art::Dbg::UnwatchLocation(art::JDWP::JdwpLocation const*, art::DeoptimizationRequest*)
art::ElfFileImpl<ElfTypes32>::FixupDynamic(unsigned int)
art::detail::CmdlineParseArgument<art::Unit>::GetNumTokens() const
art::IndirectReferenceTable::GetChecked(void*) const
art::ClassLinker::~ClassLinker()
art::VariantMapKey<bool>::~VariantMapKey()
art::JNI::SetObjectArrayElement(_JNIEnv*, _jobjectArray*, int, _jobject*)
art::interpreter::UnstartedRuntime::UnstartedClassForNameCommon(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int, bool, char const*)
art::DexFileVerifier::CheckIntraAnnotationItem()
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::gc::collector::SemiSpace::MarkObjectVisitor const>(art::gc::collector::SemiSpace::MarkObjectVisitor const&, art::PointerSize)
void std::__1::__insertion_sort_3<art::LinkFieldsComparator&, std::__1::__deque_iterator<art::ArtField*, art::ArtField**, art::ArtField*&, art::ArtField***, int, 1024> >(std::__1::__deque_iterator<art::ArtField*, art::ArtField**, art::ArtField*&, art::ArtField***, int, 1024>, std::__1::__deque_iterator<art::ArtField*, art::ArtField**, art::ArtField*&, art::ArtField***, int, 1024>, art::LinkFieldsComparator&)
art::verifier::PreciseConstHiType::IsPreciseConstantHi() const
art::gc::allocator::RosAlloc::AllocLargeObject(art::Thread*, unsigned int, unsigned int*, unsigned int*, unsigned int*)
art::Locks::jni_function_table_lock_
art::LinearAlloc::ContainsUnsafe(void*) const
art::gc::accounting::SpaceBitmap<4096u>::Create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned char*, unsigned int)
vtable for art::DlOpenOatFile
art::gc::ReferenceQueue::DisableReadBarrierForReference(art::ObjPtr<art::mirror::Reference>)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::gc::space::LargeObjectSpaceType>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::gc::space::LargeObjectSpaceType&)#1}, std::__1::allocator<{lambda(art::gc::space::LargeObjectSpaceType&)#1}>, void (art::gc::space::LargeObjectSpaceType&)>
art::mirror::Class::GetDirectInterface(art::Thread*, art::ObjPtr<art::mirror::Class>, unsigned int)
MterpGetShortStatic
art::gc::space::ImageSpaceLoader::FixupArtFieldVisitor::~FixupArtFieldVisitor()
art::MipsInstructionSetFeatures::AddFeaturesFromSplitString(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
void art::mirror::DexCache::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::accounting::CheckReferenceVisitor>(art::ObjPtr<art::mirror::Class>, art::gc::accounting::CheckReferenceVisitor const&)
art::detail::CmdlineParserArgumentInfo<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::CompleteArgument()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1024u> > const&)::{lambda(art::Memory<1024u>&)#1}, std::__1::allocator<{lambda(art::Memory<1024u>&)#1}>, void (art::Memory<1024u>&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::Memory<1024u>&)#1}> >*) const
artLmul
art::mirror::ClassExt::ResetClass()
art::OatFileAssistant::OatFileAssistant(char const*, art::InstructionSet, bool)
art::PrettyDescriptor(art::Primitive::Type)
art::detail::CmdlineParseArgument<unsigned int>::GetTypeName() const
art::JNI::CallNonvirtualObjectMethod(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, ...)
art::Locks::IsSafeToCallAbortRacy()
art::ThrowIllegalAccessErrorFinalField(art::ArtMethod*, art::ArtField*)
art::gc::collector::ConcurrentCopying::GrayAllNewlyDirtyImmuneObjects()
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, art::JITCodeEntry*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, art::JITCodeEntry*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, art::JITCodeEntry*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, art::JITCodeEntry*> > >::__rehash(unsigned int)
art::verifier::RegTypeCache::small_precise_constants_
art::gc::collector::SemiSpace::ProcessReferences(art::Thread*)
art::gc::space::ZygoteSpace::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::gc::space::MallocSpace::MoreCore(int)
art::hprof::EndianOutput::HandleEndRecord()
art::TypeLookupTable::IsStringsEquals(char const*, unsigned int) const
art::JDWP::Request::Read1()
art::ThrowNullPointerException(char const*)
art::Runtime::InitPlatformSignalHandlers()
art::gc::space::FreeListSpace::FreeListSpace(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::MemMap*, unsigned char*, unsigned char*)
art::Runtime::DetachCurrentThread()
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::XGcOption>::CompleteArgument()
artDeoptimize
art::gc::accounting::Bitmap::Bitmap(art::MemMap*, unsigned int)
art::Dbg::DbgClassLoadCallback::ClassLoad(art::Handle<art::mirror::Class>)
art::Transaction::RecordWriteFieldReference(art::mirror::Object*, art::MemberOffset, art::mirror::Object*, bool)
vtable for art::gc::collector::MarkSweep::CheckpointMarkThreadRoots
void art::StackVisitor::WalkStack<(art::StackVisitor::CountTransitions)0>(bool)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::ReleaseOrDefault<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)
art::gc::Heap::AllocateInternalWithGc(art::Thread*, art::gc::AllocatorType, bool, unsigned int, unsigned int*, unsigned int*, unsigned int*, art::ObjPtr<art::mirror::Class>*)
art::Monitor::~Monitor()
art::gc::allocator::RosAlloc::RefillRun(art::Thread*, unsigned int)
art::gc::space::DlMallocSpace::GetFootprintLimit()
art::JNI::ThrowNew(_JNIEnv*, _jclass*, char const*)
art::detail::CmdlineParseArgument<art::XGcOption>::~CmdlineParseArgument()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)::{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}, std::__1::allocator<{lambda(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)#1}>, void (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)>::destroy_deallocate()
art::StackVisitor::GetGPR(unsigned int) const
art::verifier::RegTypeCache::ShutDown()
art::jit::Jit::MethodEntered(art::Thread*, art::ArtMethod*)
art::ClassLinker::VisitRoots(art::RootVisitor*, art::VisitRootFlags)
art::gc::accounting::Bitmap::CreateFromMemMap(art::MemMap*, unsigned int)
void art::mirror::Object::VisitReferences<false, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::gc::space::ImageSpaceLoader::FixupObjectVisitor, art::gc::space::ImageSpaceLoader::FixupObjectVisitor>(art::gc::space::ImageSpaceLoader::FixupObjectVisitor const&, art::gc::space::ImageSpaceLoader::FixupObjectVisitor const&)
art::CheckJNI::CallNonvirtualByteMethod(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, ...)
vtable for art::VariantMapKey<unsigned int>
art::CheckJNI::CallStaticCharMethod(_JNIEnv*, _jclass*, _jmethodID*, ...)
art::ElfFile::GetLoadedSize(unsigned int*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
art::Dbg::GetFieldBasicTag(unsigned long long)
art::gc::space::LargeObjectMapSpace::IsZygoteLargeObject(art::Thread*, art::mirror::Object*) const
std::__1::__tree<std::__1::__value_type<unsigned short, art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::__1::less<unsigned short>, art::ArenaAllocatorAdapter<std::__1::pair<unsigned short const, art::ProfileCompilationInfo::DexPcData> > > >, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::__1::less<unsigned short>, art::ArenaAllocatorAdapter<std::__1::pair<unsigned short const, art::ProfileCompilationInfo::DexPcData> > > >, std::__1::less<unsigned short>, true>, art::ArenaAllocatorAdapter<std::__1::__value_type<unsigned short, art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::__1::less<unsigned short>, art::ArenaAllocatorAdapter<std::__1::pair<unsigned short const, art::ProfileCompilationInfo::DexPcData> > > > > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned short, art::SafeMap<unsigned short, art::ProfileCompilationInfo::DexPcData, std::__1::less<unsigned short>, art::ArenaAllocatorAdapter<std::__1::pair<unsigned short const, art::ProfileCompilationInfo::DexPcData> > > >, void*>*)
void art::ClassTable::VisitRoots<art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor>(art::gc::collector::SemiSpace::VerifyNoFromSpaceReferencesVisitor const&)
art::HashSet<art::GcRoot<art::mirror::String>, art::InternTable::GcRootEmptyFn, art::InternTable::StringHashEquals, art::InternTable::StringHashEquals, std::__1::allocator<art::GcRoot<art::mirror::String> > >::Resize(unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::IntoKey(art::RuntimeArgumentMapKey<art::ParseStringList<(char)58> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ParseStringList<(char)58>& ()>::destroy()
art::jit::JitCodeCache::FreeData(unsigned char*)
art::OatHeader::kTrueValue
art::Dbg::PostFieldAccessEvent(art::ArtMethod*, int, art::mirror::Object*, art::ArtField*)
art::gc::ReferenceQueue::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::Arm64InstructionSetFeatures::~Arm64InstructionSetFeatures()
art::DexFile::DisableWrite() const
art::jit::JitCodeCache::BroadcastForInlineCacheAccess()
art::AotClassLinker::~AotClassLinker()
art::gc::space::FreeListSpace::RemoveFreePrev(art::gc::space::AllocationInfo*)
art::gc::space::ZygoteSpace::GetType() const
art::Trace::the_trace_
art::mirror::MethodType::NumberOfVRegs()
art::instrumentation::Instrumentation::InstrumentQuickAllocEntryPointsLocked()
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> > art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::CreateTypedBuilder<art::Memory<1u> >()
void art::ClassTable::VisitRoots<art::gc::accounting::ModUnionUpdateObjectReferencesVisitor>(art::gc::accounting::ModUnionUpdateObjectReferencesVisitor const&)
art::interpreter::UnstartedRuntime::UnstartedStringFastSubstring(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::gc::space::RosAllocSpace::Free(art::Thread*, art::mirror::Object*)
art::detail::CmdlineParseArgument<art::ParseStringList<(char)58> >::GetTypeName() const
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const>, true>, art::ArenaAllocatorAdapter<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char> > >::__find_equal<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char> >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned char> const&)
art::VariantMapKey<unsigned int>::~VariantMapKey()
art::verifier::LongHiType::Destroy()
art::ArenaStack::ArenaStack(art::ArenaPool*)
art::detail::CmdlineParserArgumentInfo<art::LogVerbosity>::~CmdlineParserArgumentInfo()
std::__1::__tree<std::__1::__value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::destroy(std::__1::__tree_node<std::__1::__value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*)
artAllocObjectFromCodeResolvedTLABInstrumented
art::Monitor::DescribeWait(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::Thread const*)
art::mirror::Method::ResetArrayClass()
art::gc::accounting::SpaceBitmap<4096u>::GetName() const
art::ClassTable::InsertWithoutLocks(art::ObjPtr<art::mirror::Class>)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::DeoptimizationRequest::Kind const&)
void art::VariantMap<art::RuntimeArgumentMap, art::RuntimeArgumentMapKey>::Remove<int (*)(__sFILE*, char const*, char*)>(art::RuntimeArgumentMapKey<int (*)(__sFILE*, char const*, char*)> const&)
art::Signature::operator==(art::Signature const&) const
art::verifier::MethodVerifier::FailureData art::verifier::MethodVerifier::VerifyMethods<false>(art::Thread*, art::ClassLinker*, art::DexFile const*, art::DexFile::ClassDef const&, art::ClassDataItemIterator*, art::Handle<art::mirror::DexCache>, art::Handle<art::mirror::ClassLoader>, art::CompilerCallbacks*, bool, art::verifier::HardFailLogMode, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::gc::space::DlMallocSpace::DlMallocSpace(art::MemMap*, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, void*, unsigned char*, unsigned char*, unsigned char*, unsigned int, bool, unsigned int)
art::gc::space::LargeObjectSpace::LargeObjectSpace(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned char*, unsigned char*)
art::gc::AllocRecordStackVisitor::~AllocRecordStackVisitor()
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::IntoKey(art::RuntimeArgumentMapKey<art::ProfileSaverOptions> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ProfileSaverOptions& ()>
art::verifier::VerifierDeps::DexFileDeps::Equals(art::verifier::VerifierDeps::DexFileDeps const&) const
art::OatFileAssistant::OdexFileStatus()
art::OatFileAssistant::OpenImageSpace(art::OatFile const*)
art::verifier::MethodVerifier::~MethodVerifier()
artInstanceOfFromCode
art::JniMethodEndWithReference(_jobject*, unsigned int, art::Thread*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >& ()>::__clone(std::__1::__function::__base<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >&>*) const
art::gc::accounting::SpaceBitmap<4096u>::~SpaceBitmap()
void art::mirror::Class::VisitNativeRoots<(art::ReadBarrierOption)0, art::gc::accounting::CheckReferenceVisitor const>(art::gc::accounting::CheckReferenceVisitor const&, art::PointerSize)
art::Thread::RequestEmptyCheckpoint()
art::RuntimeArgumentMap::JniTrace
art::gc::space::RosAllocSpace::AsRosAllocSpace()
bool art::interpreter::DoFieldGet<(art::FindFieldType)6, (art::Primitive::Type)5, true>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::ClassHierarchyAnalysis::GetDependents(art::ArtMethod*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::list<art::ti::Agent, std::__1::allocator<art::ti::Agent> >& ()>::~__func()
art::ArtMethod::PrettyMethod(bool)
art::Thread::ThrowNewWrappedException(char const*, char const*)
art::gc::collector::ConcurrentCopying::RevokeThreadLocalMarkStack(art::Thread*)
art::gc::Verification::IsValidHeapObjectAddress(void const*, art::gc::space::Space**) const
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::CompleteArgument()
art::ScopedSuspendAll::~ScopedSuspendAll()
art::ClassHierarchyAnalysis::InitSingleImplementationFlag(art::Handle<art::mirror::Class>, art::ArtMethod*, art::PointerSize)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)
art::instrumentation::Instrumentation::SetEntrypointsInstrumented(bool)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::BackgroundGcOption>::IntoKey(art::RuntimeArgumentMapKey<art::BackgroundGcOption> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::BackgroundGcOption& ()>::~__func()
art::gc::collector::MarkCompact::Sweep(bool)
std::__1::__tree_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, int> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
void art::ClassTable::VisitRoots<art::mirror::CopyReferenceFieldsWithReadBarrierVisitor>(art::mirror::CopyReferenceFieldsWithReadBarrierVisitor const&)
art::CheckJNI::GetCharArrayElements(_JNIEnv*, _jcharArray*, unsigned char*)
art::JNI::SetDoubleArrayRegion(_JNIEnv*, _jdoubleArray*, int, int, double const*)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::CompleteArgument()
art::VariantMapKey<double>::~VariantMapKey()
std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned int)
art::mirror::PrimitiveArray<unsigned char>::GetWithoutChecks(int)
art::gc::Heap::HeapTrimTask::Run(art::Thread*)
vtable for art::RuntimeArgumentMapKey<art::ExperimentalFlags>
art::mirror::MethodType::static_class_
art::Monitor::Unlock(art::Thread*)
art::Trace::Stop()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1u>& ()>::operator()()
void art::mirror::Class::VisitNativeRoots<(art::ReadBarrierOption)1, art::FixupInternVisitor const>(art::FixupInternVisitor const&, art::PointerSize)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::IntoKey(art::RuntimeArgumentMapKey<unsigned int> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, unsigned int& ()>::destroy_deallocate()
_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_
art::gc::accounting::SpaceBitmap<8u>::ClearVisitor::operator()(art::mirror::Object*) const
art::ObjectLock<art::mirror::Object>::~ObjectLock()
art::hprof::EndianOutputBuffered::HandleFlush(unsigned char const*, unsigned int)
art::verifier::IntegerType::~IntegerType()
art::BuildInternalStackTraceVisitor<true>::VisitFrame()
std::__1::__function::__func<void (*)(char const*), std::__1::allocator<void (*)(char const*)>, void (char const*)>::operator()(char const*&&)
bool art::interpreter::DoIPutQuick<(art::Primitive::Type)4, true>(art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::gc::space::RosAllocSpace::AssertThreadLocalBuffersAreRevoked(art::Thread*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoKey(art::RuntimeArgumentMapKey<art::Unit> const&)::{lambda(art::Unit&)#1}, std::__1::allocator<{lambda(art::Unit&)#1}>, void (art::Unit&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(art::Unit&)#1}> >*) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::verifier::VerifyMode>::IntoKey(art::RuntimeArgumentMapKey<art::verifier::VerifyMode> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::verifier::VerifyMode& ()>::operator()()
art::verifier::ConstantType::IsConstantShort() const
art::ProfileCompilationInfo::ReadMethods(art::ProfileCompilationInfo::SafeBuffer&, unsigned char, art::ProfileCompilationInfo::ProfileLineHeader const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::ElfFileImpl<ElfTypes32>::GetHashChainNum() const
void std::__1::vector<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> >, std::__1::allocator<std::__1::unique_ptr<art::DexFile const, std::__1::default_delete<art::DexFile const> > > >::__emplace_back_slow_path<art::DexFile const*&>(art::DexFile const*&)
artAllocObjectFromCodeWithChecksDlMalloc
art_quick_memcmp16
void std::__1::vector<art::ClassLoadCallback*, std::__1::allocator<art::ClassLoadCallback*> >::__push_back_slow_path<art::ClassLoadCallback* const&>(art::ClassLoadCallback* const&)
art::gc::space::RegionSpace::Region::UnfreeLargeTail(art::gc::space::RegionSpace*, unsigned int)
art::Dbg::GetClassInfo(unsigned long long, art::JDWP::JdwpTypeTag*, unsigned int*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::ClassLinker::LoadClassMembers(art::Thread*, art::DexFile const&, unsigned char const*, art::Handle<art::mirror::Class>)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::JDWP::JdwpOptions&)#1}, std::__1::allocator<{lambda(art::JDWP::JdwpOptions&)#1}>, void (art::JDWP::JdwpOptions&)>::operator()(art::JDWP::JdwpOptions&)
art::VariantMapKey<art::LogVerbosity>::~VariantMapKey()
art::DeoptimizeStackVisitor::~DeoptimizeStackVisitor()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::LogVerbosity& ()>::__clone() const
art::JniMethodStart(art::Thread*)
art::ArenaPool::~ArenaPool()
art::gc::collector::ConcurrentCopying::MarkObject(art::mirror::Object*)
art::mirror::Throwable::GetDetailMessage()
art::BuildInternalStackTraceVisitor<false>::~BuildInternalStackTraceVisitor()
std::__1::__tree<unsigned char*, std::__1::less<unsigned char*>, std::__1::allocator<unsigned char*> >::destroy(std::__1::__tree_node<unsigned char*, void*>*)
art::RuntimeCallbacks::NextRuntimePhase(art::RuntimePhaseCallback::RuntimePhase)
art::ThreadPoolWorker::Run()
art::gc::Heap::IsNonDiscontinuousSpaceHeapAddress(void const*) const
bool art::interpreter::DoIPutQuick<(art::Primitive::Type)6, false>(art::ShadowFrame const&, art::Instruction const*, unsigned short)
art::Monitor::operator new(unsigned int)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1u> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1u>& ()>::__clone() const
art::ThreadPoolWorker::Callback(void*)
vtable for art::ReaderWriterMutex
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, bool& ()>::__clone(std::__1::__function::__base<bool&>*) const
art::CheckJNI::CallBooleanMethod(_JNIEnv*, _jobject*, _jmethodID*, ...)
art::register_java_lang_reflect_Method(_JNIEnv*)
art::DexRegisterMap::GetDexRegisterLocation(unsigned short, unsigned short, art::CodeInfo const&, art::CodeInfoEncoding const&) const
non-virtual thunk to std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()
art::ArenaBitVectorAllocator<art::ScopedArenaAllocator>::~ArenaBitVectorAllocator()
art::Trace::SetDefaultClockSource(art::TraceClockSource)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1024u> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1024u>& ()>::__clone() const
art::OatFileAssistant::OatFileInfo::Filename()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::IntoKey(art::RuntimeArgumentMapKey<art::ParseStringList<(char)58> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ParseStringList<(char)58>& ()>::operator()()
art::Monitor::Deflate(art::Thread*, art::mirror::Object*)
art::ArenaStack::ArenaStack(art::ArenaPool*)
art::Transaction::ResolveStringLog::ResolveStringLog(art::ObjPtr<art::mirror::DexCache>, art::dex::StringIndex)
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ProfileSaverOptions>::IntoKey(art::RuntimeArgumentMapKey<art::ProfileSaverOptions> const&)::{lambda(art::ProfileSaverOptions&)#1}, std::__1::allocator<{lambda(art::ProfileSaverOptions&)#1}>, void (art::ProfileSaverOptions&)>
art::CheckJNI::CallNonvirtualBooleanMethod(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, ...)
vtable for art::VariantMapKey<art::Memory<1024u> >
art::gc::accounting::ModUnionTableReferenceCache::ClearTable()
non-virtual thunk to art::gc::space::ZygoteSpace::GetObjectsAllocated()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::IntoKey(art::RuntimeArgumentMapKey<unsigned int> const&)::{lambda(unsigned int&)#1}, std::__1::allocator<{lambda(unsigned int&)#1}>, void (unsigned int&)>::__clone(std::__1::__function::__base<std::__1::allocator<{lambda(unsigned int&)#1}> >*) const
vtable for art::RuntimeArgumentMapKey<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >
art::Transaction::~Transaction()
art::Transaction::UndoArrayModifications()
void art::mirror::Object::VisitFieldsReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::accounting::AddToReferenceArrayVisitor>(unsigned int, art::gc::accounting::AddToReferenceArrayVisitor const&)
art::verifier::RegisterLine::CopyResultRegister1(art::verifier::MethodVerifier*, unsigned int, bool)
MappedZipFile::ReadData(unsigned char*, unsigned int)
art::RootInfo::ToString() const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoIgnore()::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>::destroy_deallocate()
art::VariantMapKey<art::XGcOption>::~VariantMapKey()
art::gc::collector::ConcurrentCopying::~ConcurrentCopying()
art::mirror::Class::PopulateEmbeddedVTable(art::PointerSize)
art::Runtime::VisitConcurrentRoots(art::RootVisitor*, art::VisitRootFlags)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::ExperimentalFlags&)#1}, std::__1::allocator<{lambda(art::ExperimentalFlags&)#1}>, void (art::ExperimentalFlags&)>::destroy()
art::JNI::PopLocalFrame(_JNIEnv*, _jobject*)
art::InlineInfo::Dump(art::VariableIndentationOutputStream*, art::CodeInfo const&, art::MethodInfo const&, unsigned short*) const
art::mirror::Field::ResetArrayClass()
art::CheckJNI::ReleaseDoubleArrayElements(_JNIEnv*, _jdoubleArray*, double*, int)
art::ThreadPoolWorker::ThreadPoolWorker(art::ThreadPool*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int)
art::JNI::EnsureLocalCapacity(_JNIEnv*, int)
void art::mirror::DexCache::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)0, art::gc::accounting::RememberedSetReferenceVisitor>(art::ObjPtr<art::mirror::Class>, art::gc::accounting::RememberedSetReferenceVisitor const&)
vtable for art::hprof::FileEndianOutput
art::detail::CmdlineParseArgument<art::JDWP::JdwpOptions>::~CmdlineParseArgument()
art::RuntimeArgumentMap::CompilerOptions
art::detail::CmdlineParserArgumentInfo<art::ParseStringList<(char)58> >::CmdlineParserArgumentInfo(art::detail::CmdlineParserArgumentInfo<art::ParseStringList<(char)58> >&&)
art::gc::Heap::SupportHomogeneousSpaceCompactAndCollectorTransitions() const
art::JNI::CallNonvirtualFloatMethod(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, ...)
art::verifier::MethodVerifier::DumpFailures(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
art::gc::collector::ConcurrentCopying::ThreadFlipVisitor::VisitRoots(art::mirror::CompressedReference<art::mirror::Object>**, unsigned int, art::RootInfo const&)
art::OatFileAssistant::GetBestOatFile()
art::ClassLoadCallback::~ClassLoadCallback()
art::verifier::ImpreciseConstType::~ImpreciseConstType()
art::annotations::GetInnerClass(art::Handle<art::mirror::Class>, art::mirror::String**)
art::VerifyAccess(art::ObjPtr<art::mirror::Object>, art::ObjPtr<art::mirror::Class>, unsigned int, art::ObjPtr<art::mirror::Class>)
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::LogVerbosity>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)
std::__1::function<void (double&)>::swap(std::__1::function<void (double&)>&)
bool art::ClassTable::Visit<art::VisitClassLoaderClassesVisitor::DefiningClassLoaderFilterVisitor>(art::VisitClassLoaderClassesVisitor::DefiningClassLoaderFilterVisitor&)
art::mirror::Class::PrettyDescriptor()
art::verifier::PreciseReferenceType::~PreciseReferenceType()
art::ClassTable::InsertOatFile(art::OatFile const*)
art::verifier::CharType::instance_
art::detail::CmdlineParserArgumentInfo<art::Unit>::CompleteArgument()
art::JDWP::JdwpState::GetDebugThread()
art::RuntimeArgumentMap::EnableHSpaceCompactForOOM
art::ti::Agent::Agent(art::ti::Agent const&)
art::instrumentation::Instrumentation::PopMethodForUnwind(art::Thread*, bool) const
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::IntoKey(art::RuntimeArgumentMapKey<art::ParseStringList<(char)58> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ParseStringList<(char)58>& ()>::destroy_deallocate()
_ZNSt3__16vectorINS_10unique_ptrIKN3art7DexFileENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertINS_13move_iteratorINS_11__wrap_iterIPS7_EEEEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS7_NS_15iterator_traitsISI_E9referenceEEE5valueESF_E4typeENSD_IPKS7_EESI_SI_
art::ElfOatFile::~ElfOatFile()
art::verifier::LongHiType::~LongHiType()
art::Mutex::WakeupToRespondToEmptyCheckpoint()
art::InstrumentationStackVisitor::InstrumentationStackVisitor(art::Thread*, unsigned int)
art::mirror::Object* art::gc::Heap::AllocObjectWithAllocator<true, true, art::mirror::CopyObjectVisitor>(art::Thread*, art::ObjPtr<art::mirror::Class>, unsigned int, art::gc::AllocatorType, art::mirror::CopyObjectVisitor const&)
std::__1::function<void (art::ExperimentalFlags&)>::swap(std::__1::function<void (art::ExperimentalFlags&)>&)
void art::gc::collector::SemiSpace::MarkObject<false>(art::mirror::ObjectReference<false, art::mirror::Object>*)
art::mirror::Constructor* art::mirror::Constructor::CreateFromArtMethod<(art::PointerSize)4, false>(art::Thread*, art::ArtMethod*)
artReadBarrierSlow
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(unsigned int&)#1}, std::__1::allocator<{lambda(unsigned int&)#1}>, void (unsigned int&)>::__clone() const
art::DexFile::ReadSignedLong(unsigned char const*, int)
art::verifier::FindLockAliasedRegister(unsigned int, art::SafeMap<unsigned int, unsigned int, std::__1::less<unsigned int>, art::ScopedArenaAllocatorAdapter<std::__1::pair<unsigned int const, unsigned int> > > const&, art::SafeMap<unsigned int, unsigned int, std::__1::less<unsigned int>, art::ScopedArenaAllocatorAdapter<std::__1::pair<unsigned int const, unsigned int> > > const&)
art::verifier::MethodVerifier::GetBranchOffset(unsigned int, int*, bool*, bool*)
art::CheckJNI::SetStaticShortField(_JNIEnv*, _jclass*, _jfieldID*, short)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Unit>::IntoKey(art::RuntimeArgumentMapKey<art::Unit> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Unit& ()>::__clone(std::__1::__function::__base<art::Unit&>*) const
art::ThreadList::Contains(art::Thread*)
art::Runtime::AttachCurrentThread(char const*, bool, _jobject*, bool)
art::IsDexMagic(unsigned int)
art::mirror::Object::CopyObject(art::ObjPtr<art::mirror::Object>, art::ObjPtr<art::mirror::Object>, unsigned int)
art::Runtime::AddCompilerOption(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::ClassLinker::LinkInterfaceMethodsHelper::LogNewVirtuals() const
art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::UntypedArgumentBuilder::CreateTypedBuilder<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >()
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<bool>::IntoKey(art::RuntimeArgumentMapKey<bool> const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, bool& ()>::operator()()
vtable for art::detail::CmdlineParseArgument<double>
art::JNI::SetStaticShortField(_JNIEnv*, _jclass*, _jfieldID*, short)
art::detail::CmdlineParseArgument<double>::ParseArgumentSingle(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::AppImageClassLoadersAndDexCachesHelper::Update(art::ClassLinker*, art::gc::space::ImageSpace*, art::Handle<art::mirror::ClassLoader>, art::Handle<art::mirror::ObjectArray<art::mirror::DexCache> >, art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> >*, bool*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::mirror::MethodType::IsConvertible(art::mirror::MethodType*)
_ZN3art6detail11ToStringAnyINS_6MemoryILj1EEEEENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERKT_PNS4_9enable_ifIXsr25SupportsInsertionOperatorISB_EE5valueEvE4typeE
art::instrumentation::InstallStubsClassVisitor::operator()(art::ObjPtr<art::mirror::Class>)
artSetBooleanInstanceFromCompiledCode
art::Dbg::SetJdwpLocation(art::JDWP::JdwpLocation*, art::ArtMethod*, unsigned int)
artSet64InstanceFromMterp
std::__1::__hash_table<art::ArtMethod*, std::__1::hash<art::ArtMethod*>, std::__1::equal_to<art::ArtMethod*>, std::__1::allocator<art::ArtMethod*> >::rehash(unsigned int)
art::ClassTable::CountDefiningLoaderClasses(art::ObjPtr<art::mirror::ClassLoader>, art::HashSet<art::ClassTable::TableSlot, art::ClassTable::TableSlotEmptyFn, art::ClassTable::ClassDescriptorHashEquals, art::ClassTable::ClassDescriptorHashEquals, std::__1::allocator<art::ClassTable::TableSlot> > const&) const
bool art::interpreter::DoFieldPut<(art::FindFieldType)3, (art::Primitive::Type)1, false, false>(art::Thread*, art::ShadowFrame const&, art::Instruction const*, unsigned short)
vtable for art::gc::accounting::ModUnionTableToZygoteAllocspace
art::gc::space::ImageSpaceLoader::OpenOatFile(art::gc::space::ImageSpace const&, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::JDWP::JdwpOptions& ()>::__clone() const
non-virtual thunk to art::gc::collector::PartialMarkSweep::~PartialMarkSweep()
art::x86::X86Context::SmashCallerSaves()
art::JNI::ReleaseIntArrayElements(_JNIEnv*, _jintArray*, int*, int)
artSetByteStaticFromCompiledCode
art::RuntimeCallbacks::ClassPreDefine(char const*, art::Handle<art::mirror::Class>, art::Handle<art::mirror::ClassLoader>, art::DexFile const&, art::DexFile::ClassDef const&, art::DexFile const**, art::DexFile::ClassDef const**)
art::interpreter::InitMterpTls(art::Thread*)
art::detail::CmdlineParseArgument<art::ParseStringList<(char)58> >::~CmdlineParseArgument()
art::mirror::PrimitiveArray<double>::Memcpy(int, art::ObjPtr<art::mirror::PrimitiveArray<double> >, int, int)
art::detail::CmdlineParserArgumentInfo<art::XGcOption>::CompleteArgument()
art::hprof::FileEndianOutput::HandleFlush(unsigned char const*, unsigned int)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::EncodedArrayValueIterator::ValueType const&)
art::OatFileBase* art::OatFileBase::OpenOatFile<art::DlOpenOatFile>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned char*, unsigned char*, bool, bool, bool, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::InlineInfoEncoding::Dump(art::VariableIndentationOutputStream*) const
art::Thread::ThrowNewException(char const*, char const*)
art::Thread::AssertPendingOOMException() const
art::hprof::Hprof::PopulateAllocationTrackingTraces()
art::instrumentation::Instrumentation::BeginDeoptimizedMethod()
art::ElfFileImpl<ElfTypes64>::CheckAndSet(unsigned int, char const*, unsigned char**, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::gc::collector::SemiSpace::InitializePhase()
art::Thread::pthread_key_self_
art::ArenaStack::AllocWithMemoryTool(unsigned int, art::ArenaAllocKind)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::MillisecondsToNanoseconds>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::MillisecondsToNanoseconds& ()>::operator()()
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)0, art::gc::accounting::AddToReferenceArrayVisitor const>(art::gc::accounting::AddToReferenceArrayVisitor const&, art::PointerSize)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ParseStringList<(char)58> >::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::ParseStringList<(char)58>& ()>::operator()()
art::detail::CmdlineParseArgument<art::TraceClockSource>::~CmdlineParseArgument()
art::ArmInstructionSetFeatures::HasAtLeast(art::InstructionSetFeatures const*) const
art::instrumentation::Instrumentation::MethodEnterEventImpl(art::Thread*, art::ObjPtr<art::mirror::Object>, art::ArtMethod*, unsigned int) const
void art::mirror::Object::VisitReferences<true, (art::VerifyObjectFlags)0, (art::ReadBarrierOption)1, art::gc::collector::ConcurrentCopying::VerifyGrayImmuneObjectsVisitor, art::gc::collector::ConcurrentCopying::VerifyGrayImmuneObjectsVisitor>(art::gc::collector::ConcurrentCopying::VerifyGrayImmuneObjectsVisitor const&, art::gc::collector::ConcurrentCopying::VerifyGrayImmuneObjectsVisitor const&)
art::gc::Heap::GetTotalMemory() const
art::ClassLinker::GetClassesLockOwner()
art::TimingLogger::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*) const
art::CheckJNI::SetObjectField(_JNIEnv*, _jobject*, _jfieldID*, _jobject*)
void art::ArtMethod::VisitRoots<(art::ReadBarrierOption)1, art::gc::collector::ConcurrentCopying::RefFieldsVisitor const>(art::gc::collector::ConcurrentCopying::RefFieldsVisitor const&, art::PointerSize)
art::Runtime::CallExitHook(int)
artAllocStringFromBytesFromCodeTLABInstrumented
art::IsValidJniClassName(char const*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >::IntoKey(art::RuntimeArgumentMapKey<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& ()>::~__func()
art::MonitorExitVisitor::~MonitorExitVisitor()
art::DexFile::GetBaseLocation(char const*)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1024u> > const&)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, art::Memory<1024u>& ()>::~__func()
art::annotations::GetSourceDebugExtension(art::Handle<art::mirror::Class>)
art::verifier::RegType::AssignableFrom(art::verifier::RegType const&, art::verifier::RegType const&, bool, art::verifier::MethodVerifier*)
art::dex::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::dex::TypeIndex const&)
art::verifier::MethodVerifier::Fail(art::verifier::VerifyError)
artInitializeTypeFromCode
art::gc::collector::MarkSweep::MarkHeapReference(art::mirror::HeapReference<art::mirror::Object>*, bool)
art::CumulativeLogger::~CumulativeLogger()
art::mirror::Class::GetInterfaceTypeList()
art::Locks::profiler_lock_
art::gc::space::Space::Space(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, art::gc::space::GcRetentionPolicy)
art::BuildGenericJniFrameVisitor::FillJniCall::PushHandle(art::mirror::Object*)
art::mirror::StackTraceElement::ResetClass()
art::verifier::IntegerType const* art::verifier::RegTypeCache::CreatePrimitiveTypeInstance<art::verifier::IntegerType>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::x86::X86Context::GetGPRAddress(unsigned int)
void std::__1::vector<art::dex::TypeIndex, std::__1::allocator<art::dex::TypeIndex> >::__push_back_slow_path<art::dex::TypeIndex const&>(art::dex::TypeIndex const&)
art::gc::space::MallocSpace::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
art::JNI::CallNonvirtualCharMethod(_JNIEnv*, _jobject*, _jclass*, _jmethodID*, ...)
void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__push_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
art::register_java_lang_VMClassLoader(_JNIEnv*)
art::verifier::ImpreciseConstLoType::~ImpreciseConstLoType()
void std::__1::vector<double, std::__1::allocator<double> >::__push_back_slow_path<double>(double&&)
art::detail::CmdlineParseArgument<art::ExperimentalFlags>::GetTypeName() const
art::gc::collector::MarkSweep::MarkObjectSlowPath::operator()(art::mirror::Object const*) const
art::JNI::CallShortMethodA(_JNIEnv*, _jobject*, _jmethodID*, jvalue*)
art::detail::CmdlineParseArgument<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::GetNumTokens() const
art::gc::space::RegionSpace::GetType() const
vtable for std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::JDWP::JdwpOptions>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::JDWP::JdwpOptions&)#1}, std::__1::allocator<{lambda(art::JDWP::JdwpOptions&)#1}>, void (art::JDWP::JdwpOptions&)>
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::Memory<1024u> >::IntoKey(art::RuntimeArgumentMapKey<art::Memory<1024u> > const&)::{lambda(art::Memory<1024u>&)#1}, std::__1::allocator<{lambda(art::Memory<1024u>&)#1}>, void (art::Memory<1024u>&)>::destroy_deallocate()
art::WellKnownClasses::InitStringInit(_JNIEnv*)
art::gc::collector::MarkCompact::GetGcType() const
art::Transaction::UndoInternStringTableModifications()
bool art::interpreter::DoFieldGet<(art::FindFieldType)2, (art::Primitive::Type)4, true>(art::Thread*, art::ShadowFrame&, art::Instruction const*, unsigned short)
art::JNI::CallStaticFloatMethodA(_JNIEnv*, _jclass*, _jmethodID*, jvalue*)
art::Dbg::GetThreadGroup(unsigned long long, art::JDWP::ExpandBuf*)
art::ArenaBitVectorAllocator<art::ScopedArenaAllocator>::Free(void*)
art::FetchStackTraceVisitor::~FetchStackTraceVisitor()
art::TrackedAllocators::g_total_bytes_used
art::gc::space::MallocSpace::GetType() const
art::JDWP::expandBufAlloc()
art::mirror::ClassExt::Alloc(art::Thread*)
art::detail::CmdlineParseArgument<bool>::~CmdlineParseArgument()
std::__1::vector<std::__1::unique_ptr<art::verifier::RegisterLine, art::verifier::RegisterLineArenaDelete>, art::ScopedArenaAllocatorAdapter<std::__1::unique_ptr<art::verifier::RegisterLine, art::verifier::RegisterLineArenaDelete> > >::__append(unsigned int)
art::OatDexFile::OpenDexFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*) const
art::Thread::SetJitSensitiveThread()
art::verifier::RegTypeCache::~RegTypeCache()
art::ThreadList::Unregister(art::Thread*)
art::CheckJNI::ReleaseStringCharsInternal(char const*, _JNIEnv*, _jstring*, void const*, bool, bool)
art::StackVisitor::IsAccessibleGPR(unsigned int) const
art::ObjectRegistry::Clear()
art::hprof::EndianOutput::HandleU2List(unsigned short const*, unsigned int)
art::Runtime::InitNonZygoteOrPostFork(_JNIEnv*, bool, art::Runtime::NativeBridgeAction, char const*)
art::StackMapEncoding::Dump(art::VariableIndentationOutputStream*) const
void std::__1::vector<art::Handle<art::mirror::Object>, std::__1::allocator<art::Handle<art::mirror::Object> > >::__push_back_slow_path<art::Handle<art::mirror::Object> >(art::Handle<art::mirror::Object>&&)
art::hprof::Hprof::WriteStringTable()
art::verifier::RegType::ClassJoin(art::mirror::Class*, art::mirror::Class*)
void std::__1::vector<jvalue, std::__1::allocator<jvalue> >::__push_back_slow_path<jvalue const&>(jvalue const&)
art::ProfileCompilationInfo::IsEmpty() const
unix_file::FdFile::FdFile()
art::Runtime::CreateCalleeSaveMethod()
art::BuildInternalStackTraceVisitor<false>::AddFrame(art::ArtMethod*, unsigned int)
art::RootInfo::~RootInfo()
art::interpreter::UnstartedRuntime::UnstartedStringGetCharsNoCheck(art::Thread*, art::ShadowFrame*, art::JValue*, unsigned int)
art::gc::accounting::Bitmap::~Bitmap()
art::JDWP::JdwpNetStateBase::Close()
art::Transaction::ArrayLog::UndoArrayWrite(art::mirror::Array*, art::Primitive::Type, unsigned int, unsigned long long) const
art::CheckJNI::AllocObject(_JNIEnv*, _jclass*)
art::gc::Heap::DoPendingCollectorTransition()
std::__1::function<void (art::MillisecondsToNanoseconds&)>::swap(std::__1::function<void (art::MillisecondsToNanoseconds&)>&)
art::ClassLinker::IsQuickResolutionStub(void const*) const
art::ClassLinker::LinkInterfaceMethods(art::Thread*, art::Handle<art::mirror::Class>, std::__1::unordered_map<unsigned int, art::ClassLinker::MethodTranslation, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, art::ClassLinker::MethodTranslation> > > const&, bool*, art::ArtMethod**)
art::OatFile::OatFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
art::EncodedArrayValueIterator::Next()
art::DebugInstrumentationListener::FieldWritten(art::Thread*, art::Handle<art::mirror::Object>, art::ArtMethod*, unsigned int, art::ArtField*, art::JValue const&)
void std::__1::vector<Elf64_Shdr, std::__1::allocator<Elf64_Shdr> >::__push_back_slow_path<Elf64_Shdr const&>(Elf64_Shdr const&)
unsigned long long art::ObjectRegistry::InternalAdd<art::mirror::Throwable>(art::Handle<art::mirror::Throwable>)
art::OatFile::OatFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
art::JDWP::Request::ReadRefTypeId()
std::__1::unique_ptr<std::__1::__tree_node<std::__1::__value_type<unsigned short, art::ProfileCompilationInfo::DexPcData>, void*>, std::__1::__tree_node_destructor<art::ArenaAllocatorAdapter<std::__1::__tree_node<std::__1::__value_type<unsigned short, art::ProfileCompilationInfo::DexPcData>, void*> > > > std::__1::__tree<std::__1::__value_type<unsigned short, art::ProfileCompilationInfo::DexPcData>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, art::ProfileCompilationInfo::DexPcData>, std::__1::less<unsigned short>, true>, art::ArenaAllocatorAdapter<std::__1::__value_type<unsigned short, art::ProfileCompilationInfo::DexPcData> > >::__construct_node<std::__1::pair<unsigned short const, art::ProfileCompilationInfo::DexPcData> const&>(std::__1::pair<unsigned short const, art::ProfileCompilationInfo::DexPcData> const&)
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<art::ExperimentalFlags>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda(art::ExperimentalFlags&)#1}, std::__1::allocator<{lambda(art::ExperimentalFlags&)#1}>, void (art::ExperimentalFlags&)>::operator()(art::ExperimentalFlags&)
void art::Thread::InitPeer<true>(art::ScopedObjectAccessAlreadyRunnable&, art::ObjPtr<art::mirror::Object>, unsigned char, _jobject*, _jobject*, int)
unix_file::FdFile::FdFile(int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, bool)
art::X86InstructionSetFeatures::GetFeatureString() const
art::JNI::GetStringUTFChars(_JNIEnv*, _jstring*, unsigned char*)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::MadviseState const&)
art::QuasiAtomic::Startup()
art::WellKnownClasses::java_lang_Throwable_detailMessage
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::ImageHeader::StorageMode const&)
art::CheckJNI::NewString(_JNIEnv*, unsigned short const*, int)
_ZNSt3__113move_backwardIPN3art15instrumentation25InstrumentationStackFrameES3_S4_RS3_PS4_iLi204EEENS_16__deque_iteratorIT0_T1_T2_T3_T4_XT5_EEET_SE_SD_PNS_9enable_ifIXsr27__is_random_access_iteratorISE_EE5valueEvE4typeE
art::ProfileCompilationInfo::AddMethod(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, unsigned short, unsigned int, art::ProfileCompilationInfo::OfflineProfileMethodInfo const&)
art::OatHeader::GetCompilerFilter() const
art::gc::allocator::ArtRosAllocMoreCore(art::gc::allocator::RosAlloc*, int)
art::JDWP::Request::ReadThreadId()
art::gc::space::ContinuousMemMapAllocSpace::HasBoundBitmaps() const
art::OatHeader::GetHeaderSize() const
art::OatFileAssistant::OatFileInfo::OatFileInfo(art::OatFileAssistant*, bool)
art::CheckJNI::ToReflectedMethod(_JNIEnv*, _jclass*, _jmethodID*, unsigned char)
art::RuntimeArgumentMap::DumpGCPerformanceOnShutdown
std::__1::__function::__func<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::ArgumentBuilder<unsigned int>::ArgumentBuilder(art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::Builder&, std::__1::shared_ptr<art::CmdlineParser<art::RuntimeArgumentMap, art::RuntimeArgumentMap::Key>::SaveDestination>)::{lambda()#1}, std::__1::allocator<{lambda()#1}>, unsigned int& ()>::__clone(std::__1::__function::__base<unsigned int&>*) const
art::SignalSet::Add(int)
art::annotations::GetDeclaredClasses(art::Handle<art::mirror::Class>)
art::annotations::GetAnnotationForClass(art::Handle<art::mirror::Class>, art::Handle<art::mirror::Class>)
art::OatFileBase::Setup(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::FetchStackTraceVisitor::VisitFrame()
art::MonitorList::~MonitorList()
art::Thread::CreateCallback(void*)
art::OatFile::FindOatClass(art::DexFile const&, unsigned short, bool*)
art::HandleUnexpectedSignalCommon(int, siginfo*, void*, bool, bool)
android::base::LogdLogger::LogdLogger(android::base::LogId)
art::JDWP::JdwpNetStateBase::~JdwpNetStateBase()
art::JNI::ToReflectedMethod(_JNIEnv*, _jclass*, _jmethodID*, unsigned char)
art::BarrierClosure::Run(art::Thread*)
art::OatDexFile::GetOatClass(unsigned short) const
art::gc::Heap::ProcessCards(art::TimingLogger*, bool, bool, bool)
art::MipsInstructionSetFeatures::FromVariant(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
art::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, art::OatClassType const&)
__register_frame_info_bases
